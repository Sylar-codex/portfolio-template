[{"id":1675983600,"title":"Projects and Practicing Boundaries","date":"Feb 10 2023","excerpt":" \"2023 project list\"","img":"blog-headers/PNG-10.png","content":"\n#### Exhaustion\n\nIf this year of parenting and navigating through depression has taught me anything its that my time, more specifically my free time, needs\nto be purposeful. I have spent a lot of time investing in a few other people and going through the run around of \"Helping me get into the IT feild\"\nor \"I need helping moving/ I need help building this app or website\". Time and time I have found myself extending too much of my energy in\nprojects that dont benefit myself or my family and leave me in an inconvenient bind. Talking this out with my wife has helped me realize that\nI haven't been investing in myself. This blog page is supposed to be used as a time capsule for me to look back on and remember the challenges I have\nfaced in my IT career or the projects I created over the years. I have a list of projects I started back in 2018 that can showcase my strenghts and skills\nin my IT journey but never have time to draft them out or showcase them. As a way to\ncreate boundaries and adhere to keeping my skills sharp, focusing my free time on myself and my family, and having something to look back on, I have created a list of projects I plan on completing this year.\n\nSome of these projects are things I have already started, but never finished. Most of these are pojects I have been talking about for years but never set the time to complete them. Im hoping to finish one project a month to have a total of 12 for the year (with a possibliity of finishing all projects on this list). We are already in February and so far I have been failing, but that changes today.\n\n##### Intention\n\nMy intent for these projects is to have clear descriptions of what they are, what they do, how to use these projects for your own use, and a great README.md file with all\nthat information in each of these. This list will be a growing list and will be updated with links to each project once they are either completed, or at a point that is presentable. Writing this blog in itself is helping me fight imposter syndrome and\ncreate small steps to \"creating boundaries\" and focusing on myself.\n\nIf you find any of these future projects useful or helpful in any way feel free\nto let me know via twitter @techdadteddy or [buy me some coffee](https://www.buymeacoffee.com/tmeralus). Anything is appreciated.\n\n### Project List: Technology\n\n- Projects-and-practicing-boundaries: -- 02/12/23\n- Project-Deploy-a-Wordpress-Website-on-AWS:\n- Project-Terraform-ECS-Deploy-a-Wordpress-Website-on-AWS:\n- Project-Serverless-Web-Application-on-AWS: Terraform\n- Project-Nba-react-app: ReactJS\n- Project-Digital-office: ReactJS\n- Project-Postgres-provisioning-with-ansible: Ansible\n- Project-Wazuh-siem-protection-in-2023: Ansible, Docker\n- Project-Wordpress-ansible-questionnaire: Ansible, Wordpress\n- Project-Board-house-rules: Flask, Python\n- Project-Card-house-rules: Flask, Python\n- Project-gh-cli-profile-switcher: Bash\n- Vagrant Ansible setup: Ansible, Vagrant\n-\n"},{"id":1662246000,"title":"QA Analyst Challenge part 3","date":"Sep 04 2022","excerpt":"  \"QA Analyst Challenge part 3\"  ","img":"blog-headers/qa-3.jpeg","content":"## Tell me and I forget, teach me and I may remember, involve me and I learn.‚Äù \n\n You have made it this far, but the previous step will not compare to the next ones. Phase 2 has begun. This phase may be the longest or shortest phase based on your ability to retain information or ask questions. We can go through these steps together and and have video chats to learn together if you find that helpful. \n\nMy goal in this phase is to make sure you understand the following concepts: \n\n* Today's Approach to Modern application development [understanding the 12 factor app](https://12factor.net/)\n* Understanding the position that QA testing plays in the overall process of creating software.\n* Understanding popular QA software tools and what they do (keeping it simple stupid)\n* Study the complexities and capabilities of QA testing tools \n* Find the right study material with certifications to validate your new skills. \n\n\n# BLOGGING!!! BLOGGING?!? \nThese blog posts are going to be sooo long! When am I going to start testing! \nWell, guess what! your already on the right path. This will be the last blog you will write. The reason for writing these blogs is to help you get hired as a software tester. Software testers is still considered an entry level position, however, with these blog posts and the future certifications they may help push you to land your first job into higher level positions. Some recruiters may skip through all this and just try to find you a job as a software tester so they can get paid, but the companies and recruiters that are looking to pay the big bucks and find the right fit will definitely appreciate the work and blogs you are writing. \n\nThese blogs will also help you control your technical career path. If I were to have started my blog when I first started I could write a sell a book on Devops and the changes its had over the years. Lets move on to the next steps.\n\n## 12 Factors of modern application development \nThe [12 factor app](https://12factor.net/) is a popular approach on how software is delivered as a service in todays growing world. The link to the 12 factor app will bring you to the 12factor.net which will break down how popular products like Facebook, Instagram, Twitter, DoorDash, and other apps have been developed. Finding a proper structure/guideline for making software makes it easier to build these platforms with speed and efficiency. It's the same as having a blueprint for making a car and having factories push out 100's of cars a day. \n\n\n## First Blog Post: Todays software stacks \nThe 12 factor app goes into detail about all the steps, features, and functions of how modern software is built, but, it is not your responsibility to understand every aspect of this. We will however need to test your skills and write your first blog post. Your challenge is to read the 12 factor app page, watch the list of videos below, and write a blog about how QA testing can be used in each factor of the 12 factor app (or how a test can be ran in each component to secure and strengthen that component.) The blog may end up feeling extensive and long. If it helps it may be easier to break down each factor of the 12 factors into paragraphs. \n\n\n* [Software Testing Explained: How QA is Done Today](https://www.youtube.com/watch?v=oLc9gVM8FBM)\n\n* [The 10 minute test plan](https://testing.googleblog.com/2011/09/10-minute-test-plan.html)\n\nOnce you have completed this challenge you will need to email me with a similar format listed below: \n\n` \nSubject: QA Challenge Phase 2 blog post 1\nBody: Finished my first blog post. Check it out here\n(add your github blog post link to the email)\n`\n\n\n## Second Blog Post: Tests and Triggers\nYour second blog post will be part of explaining some of the common QA testing variables and principles used in test automation. This blog post will help validate your understanding of common phrases and approaches to QA testing. The videos and links above should help shape your blog. Here is a list of some of the phrases I brought up at the beginning of this challenge and a few more. Your challenge is to write another blog post explaining different types of testing and compare them to a specific field or subject. The [Git vs Github](https://meralus.com/git-github-and-video-games/) blog post that I wrote is an example of how I explained what git is, what Github is, and how it relates to the popular Pokemon Franchise. You can explain these test scenarios below in your blog by explaining how its used in the wild. A good example is how car companies uses these test phrases or how a kitchen/ restaurant may use these tests when adding new items to a menu. Try and make this blog as simple to read and understand as possible. Successful blog are ones that can teach or share something simple enough to explain to a 5 year old or easy enough for someone who understands a concept can comprehend.\n\n\n`\n--- use case testing - testing how and if users will test the website. (will the website be used for the intention it was built?)\n--- unit test - breaking down small units of code to make sure it works \n--- smoke testing - pulling the application into an iso env to run it and make sure its not smoking \n--- regression testing - instead of ensuring the functionality of the system we want to ensure the functionality \nof a system with a new feature added. \n---  End To End testing - e2e - testing all components of the application from front to back to ensure stability  \nBlack Box Testing -- checking a systems stability and performance (checking load of a system or if a system might crash)\n\n`\n\nOnce you have completed this challenge you will need to email me with a similar format listed below: \n\n`\nSubject: QA Challenge Phase 2 blog post 2\nBody: Finished my second blog post. Check it out here\n(add your github blog post link to the email)\n`\n\n\n## Third Blog Post: Keeping it Agile \nYour last challenge and blog post will be focused on understanding Agile and what it means in the IT world. This blog can be as long or as short as you would like it. The goal in this blog is to demonstrate that you have a general idea and understanding of what Agile, why its used, and answer interview questions based on the Agile approach. There is a common phrase in the industry that if you ask 10 people what Agile is you will get 10 different answers. \n\nIn business definition of Agile is as follow:  \nAgile is an iterative approach to project management and software development that helps teams deliver value to their customers faster and with fewer headaches.\n\nIn Ted's Terms: \nAgile is a structured method of planning that helps organize updates, changes, releases, or priorities to software to allow an easier way to get work done. \n\nAgile has been broken down into 12 Principles in whats called the [Agile Manifesto](https://www.agilealliance.org/agile101/12-principles-behind-the-agile-manifesto/). You can click the link or read them below. \n\n`\nThe following 12 Principles are based on the Agile Manifesto.\n\n1 - Our highest priority is to satisfy the customer through early and continuous delivery of valuable software.\n\n2 - Welcome changing requirements, even late in development. Agile processes harness change for the customer‚Äôs competitive advantage.\n\n3 - Deliver working software frequently, from a couple of weeks to a couple of months, with a preference to the shorter timescale.\n\n4 - Business people and developers must work together daily throughout the project.\n\n5 - Build projects around motivated individuals. Give them the environment and support they need, and trust them to get the job done.\n\n6 - The most efficient and effective method of conveying information to and within a development team is face-to-face conversation.\n\n7 - Working software is the primary measure of progress.\n\n8 - Agile processes promote sustainable development. The sponsors, developers, and users should be able to maintain a constant pace indefinitely.\n\n9 - Continuous attention to technical excellence and good design enhances agility.\n\n10 - Simplicity‚Äìthe art of maximizing the amount of work not done‚Äìis essential.\n\n11 - The best architectures, requirements, and designs emerge from self-organizing teams.\n\n12 - At regular intervals, the team reflects on how to become more effective, then tunes and adjusts its behavior accordingly.\n`\n\nYour challenge is to write a blog explaining your understanding of the 12 principals of agile and if you have noticed these principals at your current or previous jobs. The beginning of the blog post should explain in one sentence (like I did above) what Agile means to you. This will help validate your understanding of agile. I have found that many recruiters, or managers for that matter, know the definition of some buzz words in the industry but may not know how to explain them. Writing this blog post will allow you to go back and read this before a meeting or point to it in an interview when someone asks so that they can read it themselves and impress them with the fact that you have a website and blogs your are writing. \n\n\n## Next Steps \nOur Next Step includes studying for a free certification. By the time your at this point you should have a strong understanding of general concepts Quality Assurance Testing and Software Structures in the tech industry. If you are at this point you have done a lot of the groundwork needed to start applying for jobs. Now the fun part starts.  The next steps will be all about study material and getting certified. \n\n\n\n```\n‚ÄúExperience is a master teacher, even when it‚Äôs not our own.‚Äù\n```\n\nConsider watching this video to help with getting another perspective on [considering a Career In Software Testing? A real world experience based alternative view.](https://www.youtube.com/watch?v=iOA3lxZyFwA)\n\n\n\nOnce you have completed this challenge you will need to email me with a similar format listed below: \n\n```\nSubject: QA Challenge Phase 2 completed\nBody: Im ready to get certified and move on to the next QA challenge. \n```\n\n"},{"id":1661986800,"title":"QA Analyst Challenge part 2","date":"Sep 01 2022","excerpt":"  \"QA Analyst Challenge part 2\"  ","img":"blog-headers/qa-2.jpeg","content":"\n## Keep your eyes on the goal, and just keep taking the next step towards completing it\n\nNow that we are in the throw of things and you have shown interest in landing a job as a qa analyst, lets continue building out your online brand. Employers find that people who showcase their talent or take their skills to another level are more likely to land a job. Your online presence when someone searches your name can make or break your role in the IT industry. It is hard for an employer to see how interested you are if they do a google search of your name and your instagram or facebook pages show up with you on vacation or possibly doing things that the employer might frown upon. A great way to take control of that is to create a blog and a website to control what you want people to see and understand about your next career move. This next step will consist of you creating a personal blog and updating your github profile to show of some metrics that will build over time. These steps should help complete the first phase of your new career move. \n\nCreating a website and getting your own domain may take you some time or create confusion, but I can help you along the way. \n\n## Github pages \nThis webpage that you are reading this from is an example of my blog (which I try to update on a monthly basis). I purchased a domain so that the blog links to meralus.com but you dont need to spend a penny to do this. Here are the next steps on how to [create a free github website](https://docs.github.com/en/pages/getting-started-with-github-pages/creating-a-github-pages-site)\n\nGithub pages allows you to host this website for free on your github profile. Adding blog entries to this (which we will go over in the future) will show that you know how to communicate correctly with github. During this process you will be learning how to push and pull updates from github and see changes made through updates in github. Being part of a QA analyst involves understanding how code gets pushed, pulled, and scanned through git and other mediums so this is great practice for learning git and Github. This will also help with branching out into other areas of IT in the future. \n\nHere are free Jekyll Based Github Pages themes you can use (like I did) to build out a creative blogging profile. \n\n[Free Blog site pages](https://jekyllthemes.io/free)\n\n## Git vs Github and its importance\nI mentioned git and github as two different things. To explain that further you can read my blog post about the difference between the two and how to understand it. [Git vs Github](https://meralus.com/git-github-and-video-games/)\n\n\nIn reading that blog post Im hoping to clear confusion about the two. If you are confused feel free to message me so I can explain further. If you are not confused and think I did a great job (feel free to let me know) carry on with these next steps. \n\n## Talk the talk, walk the walk, blog the blog \nOnce you are done creating the github pages and are ready to write your first blog post I can help you with the blog post idea that relates to QA software testing  and possibly get it posted on Linux Journal [like me](https://www.linuxjournal.com/users/tedley-meralus). \n\nI will again stress the importance of building an online presence again because your are coming from a field that is not related to the IT industry at all. It makes it very difficult or a recruiter or employer to take a chance at giving you a job. With your initiative and getting this far with my steps already your showing me that you are interested and putting in some of the work. \nThese are just some of the stepping stones. Once we have a blog post up you can share that on linkedin which will boost your chances more and prove your skills in QA/IT related things all together.  These changes and updates that youll be putting on github can be shown with a github profile which will change and update on its own once you setup a github profile. \n\n# Github Profiles \nHere is your next step in [creating a github profile](https://docs.github.com/en/account-and-profile/setting-up-and-managing-your-github-profile/customizing-your-profile/managing-your-profile-readme) \n\n\nYou will need to follow those steps to create the page. Once your comfortable and familiar with that you can use the [Github metrics page](https://github.com/lowlighter/metrics) to tweak your profile. \n\nThis will conclude Phase 1 of the QA Challenge. \nThese steps here can be cumbersome and confusing. If you need help feel free to reach out to me to assist with setting up your environment or working out fixing issues with your blog or profile. \n\n# Next Steps \nOnce these things are complete you will need to send me links to both your blog page and profile with a text or email stating \" I have built an online presence, now i'm ready for phase 2 of the QA challenge!\" \n\n\nPhase 2 will be where we get you started on finding the proper study material, getting a certificate to validate your skills and step into phase 3, the job hunting phase. If you have made it this far i'm proud of you and will be excited when I get your ready for phase 2 message. \n\n \n\n"},{"id":1661641200,"title":"The QA Analyst Challenge","date":"Aug 28 2022","excerpt":"oops! no excerpt given","img":"blog-headers/qa-1.png","content":"\n\n###### WE ONLY GET ONE LIFE, WASTING SOMONE'S TIME IS THE SUBTLEST FORM OF MURDER \n\n## If you reading this its never too late\nHere is a guide and a list of steps I have taken to help get you a remote job as a QA Analyst position. My expectation is that you read this entire document, follow the steps at the bottom of the page, message me if you need help, and get you pointed in the right direction. BE WARNED: This will be sprinkled with quotes to help you start. I wrote this out because you expressed interest to me in getting a remote job, breaking into the tech industry, or just looking for a career move. I want you to know I am here to help however I can. I want you to not feel like its too late or your too old to get help starting something new.\n\nIt's never too late - never too late to start over, never too late to be happy. It's never too late. Don't focus on what was taken away. Find something to replace it, and acknowledge the blessing you have.\n\n### QA ANALYST TERMS AND AGREEMENTS \nYour reading this because you expressed interest in breaking into the tech field and becoming an QA analyst/engineer. I am here to help.. with some caveats. \nAs the quote at the top of this page explains, time is of the essence and I find my time to be more important than ever now that I have a child to take care of :). \nWith that being said, it is your responsibility to dedicate the time and effort to land a job in the IT industry. The QA analyst position is a great entry level position that can be used to find a remote job and ease yourself into the life of an IT professional. The time it takes for someone to get into the industry all relates to a few factors. \n* How much time you spend learning new things \n* How quickly it takes for you to understands things \n* How long it takes you to ask questions (having me as someone in the industry that can answer the simple and complex questions is like having Lebron James's trainers and nutritionists which can be a tool that should be abused at all times)\n\nI have ready success stories of people who dedicated a month and landed a 50k salary job, and stories of people who spent 9 months or 2 years to get to that level. It all comes down to how disciplined you are to study. External factors like family, moving, illness, and other things may slow you down but you should make sure that they don't stop or halt your progress indefinitely. If you ever fall back in your studies try and use this quote to help you along the way. \n\n```\n\"The man who moves a mountain begins by carrying away small stones.\" ‚ÄîConfucius.\n```\n\nIf you are ready to get started and looking for steps to become a QA analyst, continue check out my posts on my guide to getting into the Tech Industry and become a QA analysis.  \n\nDISCLAIMER: Currently I am a DevSecOps Engineer and have 5+ experience as a Linux/DevOps Engineer and 10 years of experience in the IT industry. I am not, nor have I ever been label a QA analyst. I have worked with a large handful of QA testers/engineers/analysts and have talked to some that I am close with on creating a guide for breaking into the industry. These steps have no direct guarantee of getting you a job in the field or landing a job at a specific company. This guide cannot guarantee a 6 figure salary. It can however, help you understand strong concepts of today's modern approach to software architecture, my understanding of it all over the years, and common concepts and questions during technical interview or parties where tech is being discussed. \n\nI am writing this guide to follow a quote that I try to live by and pray that I can show success stories in the future of people who followed these steps and changed their careers. \n\n\n```\n ‚ÄúKnowledge, like air, is vital to life. Like air, no one should be denied it.‚Äù\n\n‚Äï Alan Moore, V for Vendetta \n\n```\n\n* [QA Challenge part 1: Building an online presence](https://meralus.com/qa-analyst-challenge/)\n* [QA Challenge part 2: Building the brand](https://meralus.com/qa-analyst-challenge-part-2/)\n* [QA Challenge part 3: Test and Triggers](https://meralus.com/qa-analyst-challenge-part-3/)\n* [QA Challenge part 4: Studying and Certification](https://meralus.com/qa-analyst-challenge-part-4/) \n* [QA Challenge part 5: The Interview ](https://meralus.com/qa-analyst-challenge-part-5/)"},{"id":1652310000,"title":"Bash one-line trick to pull all your GitHub repositories","date":"May 12 2022","excerpt":" \"git pull all-the-things\"  ","img":"blog-headers/git-workflow.png","content":"# Bash one-liners for cloning and managing GitHub and GitLab repositories\n \n#### Git Pull ALL \nWhen it comes to writing code, scripts, or solving problems with programming, there are few things more satisfying then finding the write command to get things done. \n\nAs I noticed myself using a list of repeatable commands in linux or on my macbooks for work I decided to share one that comes in handy quite often. \n\nI, as well as the next person, tend to have many of my github projects in a specific folder on my machine to keep myself organized. While working with others I find myself continuously running \"git pull\" to pull the latest code that I may not have stored locally. I also tend to work on different machines and may have updated something on a project on one laptop, and now looking at it on another. To solve this problem I typically go into my github projects folder and run the following command. \n\n```\n find $PROJECT_PATH -mindepth 1 -maxdepth 1 -type d -print -exec git -C {} pull \\; \n```\n\n###### Lets explain what this find and pull command does by breaking it down. \n[Find](https://man7.org/linux/man-pages/man1/find.1.html) is a popular [gnu tool](http://www.gnu.org/software/findutils/) used to search for files in a directory. \n- The $PROJECT_PATH is a variable that can be replaced with the dir your are searching through (example: /home/ted/github-projects). \n- -mindepth and -maxdepth which allow the command to iterate through directories one by one. \n- -type with the \"d\" flag determines that directories are targeted as the object to be parsed through\n-  -print action is performed on all files for which the whole expression is true. This prints a stdout to view what is happening while the command is ran. \n- -exec allows a command to be triggered if the previous parts of the previous segment of the command returns true. \n- git -C {} pull \\ does a few things. The {} is the syntax used to dereference tags. This allows the command to just run a git pull and not search or break when tags are present. The \"\\\" allows the stdout to be viewed line by line in an easy to read fashion. \n\n\n#### Git Clone multiple repos at once. \nThis next command solves another problem I happen to deal with from time to time. During my years of re-creating my dev environment on a new machine with bash scripts, I wanted to find a way to clone all my github repos to my new machine. I happened to find this 2-step one-liner helps quite often. \n\nNote: It is easier to clone repositories without entering your password by creating ssh keys and adding them to github. Once completed you can create a list of the github repo's you work on the most and need in your environment. \n\nWe can then create a file called gh-repos and download the ssh urls for each repository. \nA list of GitHub URLs in the file gh-repos.txt, like this:\n```\ngit@github.com:username/first-repository.git\ngit@github.com:username/second-repository.git\ngit@github.com:username/third-repository.git\n``` \n\nOnce created you can move it into your desired dir, I typically call mine github-projects, and then run:\n\n```\nxargs -n1 git clone < gh-repos.txt\n```\n\nThis will clone all the repositories on the list into the current folder. This same one-liner works for GitLab as well, if you substitute the URL's accordingly.\n\n###### Lets explain what this command does by breaking it down. \n \nTo run a command for each line in our file gh-repos.txt, we use [xargs -n1](https://www.man7.org/linux/man-pages/man1/xargs.1.html). \n\n- The xargs tool reads items from input and executes any commands it finds (it will echo if it doesn‚Äôt find anything).\n By default, it assumes that items are separated by spaces; new lines also works and makes our list easier to read. \n\n- The flag -n1 tells xargs to use 1 argument, or in this case, one line, per command.\n\n- git clone will clone the repo based off the input give. \n- The < gh-repos.txt' injects the content within the gh-repos.txt back into the xargs command which, all-together, will clone each git repo listed in the text file. \n\nI typically use these steps and command when working on new machines or in ne wwork environments. I was showing these tips to a co-worker today and when asked about a certain part of the command I froze and felt as thought I couldn't remember. This blog is to re-assure myself that I haven't just been blindly using old techniques to solve current tasks. These sure help me, if they help you, let me know via Twitter [@techgameteddy](https://www.twitter.com/techgameteddy)\n\n \n    \n"},{"id":1648854000,"title":"From Passion to a Professional Career","date":"Apr 02 2022","excerpt":" \"Ted's Passion to Professional Career Story Part 1\" ","img":"blog-headers/passion.jpg","content":"\n \n## Part 1: From Curiosity with Computers to Coding with Comfort\n*Knowledge, like air, is vital to life. And like air, no one should be denied it.*\n \n<img src=\"/assets/img/blog/passion-to-profession/cover-picture-1019.jpg\" width=\"30%\" height=\"30%\">\n\n\nThis is a small blog entry about my entry into my tech career. I have spent a lot of my tech career learning to create something from nothing and finding solutions\nto technical problems that benefit myself and others. It has been a rocky road and has had its ups and downs but there are moments\nin my career that have made pivotal changes in my career. This is a story of how I went from fixing computers to writing code and how I go to where I am today. I'm an avid fan of scratching my curiosity with computers or tech. I have learned in life (and not from the V from Vendetta film because I haven't seen it yet) that Knowledge is vital to life. For one to adapt in the world you must learn to be like water, to learn to be still and adapt to your surroundings.\n\n#### DOOM DOOM DOOM \nMy mom, a school teacher, was very firm about what was to be done during school days in my house growing up. On school days (mon-fri or any day me and my brothers had to go to school) going from fixing a windows ME computer to play Doom and Heretic 2 to building pc's and becoming a certified IT professional.\nAt 9 years old my house had a family computer which my mom only allowed us to use for school purposes or to gather information from \"Ask Jeeves\". What she didn't know is that the computer would be the start of a marriage between me and my career. My older brother would come home with new AOL disks which allowed us to go online after hearing (what I thought at first was annoying) the AOL dial up tone and watching the software in the cd run on our computer and grant 'high speed\" connections.\n\n#### Garage Trapping\nMiddle school and High School are some of the most pivotal moments in a child's life. During those days I spent most nights and every weekend either skateboarding, playing basketball, or trapping out of my garage. My older brother would bring old computers that he got from friends or buy different computer parts to build a custom built gaming pc and leave all the excess junk in the garage. Before they got throw out I would find ways to put the pieces together to build my own computer so I can keep one in my room and play games that were locked on my brothers computer because of his password. Once I started to understand that I can start a pc with a motherboard, hard drive, keyboard, monitor, processor, and ram and heard the sweet sound of a power supply firing up. I knew that I needed to focus more time on this and less on trying to kickflip a 3 step at my middle school on weekends.\n\n#High School Gaming and Gathering\nFreshman year of high school was like stepping into a different world. Freshman, wherever they come from are malleable. I knew that even though I had my core group of guys that I still hang out with to this day, I was going to run into a huge amount of new people and I wanted to fit in. How does a young Haitian-American boy fit into a school full of gangsters and thugs who happen to be Haitian and don't know anything about computers, skateboarding, or rock music? Where do I fit in?\n\n#### Opportunities\nI started to notice that everyone (in 2005-2006) had a cell phone and were texting their friends or significant others except me. I would spend every week trying to convince my mom why I needed a cell phone and why she should pay for it...and Thank you mom for finding a creative way to kick starting my motivational journey and influencing me to become a member of the computer club. My mom finally caved after the first few weeks of school and said \"If you stay after school for the reading club or a club that you enjoy, I will have to buy you a phone so that I can call you and pick you up from the school.\" As soon as those words left her mouth it came in one ear as words and came out the other ear screaming \"OPPORTUNITY\".\n\n#### Computer Club ####\nI join the reading club, chess club, art club, and computer club. Spending 4 days a week after school would force my mom to get my a cool Metro PCS phone that I can text her with. Little did she know I was trying to get my own digital call list to talk to girls (which never happened freshman year). I quickly learned that the computer club was just a club that juniors and seniors would use to play video games on the projectors of the science building. Every monday I can leave 7th period and head to the science building and watch these cool guys kick ass in Halo and Call of Duty or smash bros. I was hooked!\n\n#### Freshman walk home\nUnfortunately my mom would forget to pick me up or drive past the school and call me to convince me to take the activity bus or find a friend to drive home. Stuck at school on Mondays with a new cell phone and some cool gamers who all lived in Boca Raton or Palm Beach Gardens (both too far from the general direction of my house) I had to find a way to stay and play games, or learn to play chess after school. I finally fit in with some cool people after school and new friends I can sit with at lunch but may have to stop showing up because of my lack of transportation. I would hear friends in class talk about how they couldn't finish their homework because their computers were messed up or broken and again that cell phone conversation rang through my ears...in came discussions about computers not working and out came \"OPPORTUNITY\". I talked to a few classmates who I knew lived in lake worth or went to my middle school (which is down the street from my home and in relative location of where these people lived) and created an Opportunities. If I can fix your computer, will your parents drive me home?\n\nIt worked! Every night after school that I spent in a club, I would walk through the streets of lake worth and find my friends addresses. I would gather enough information with the free internet at school and access to google on how to fix their issues, get to their house, and work on fixing those issues. It was fight or flight. If I couldn't fix their computer I couldn't make it home and would be stuck in the gritty and dangerous streets of lake worth. Putting myself in those kinds of situations allowed to to hone my craft and learn new ways to remember the issues I came across and troubleshoot them in a timely manner so that I can be in and out and on my way home before it got to dark out.\n\n\n#### From being present in the room to President of the Club ####\nSophomore year of High School was rolling in and the seniors are gone, the juniors are now seniors of the computer club and are focused on college courses. The Tech club was fading and having a new school principal who wanted to whip things into shape and restructure all clubs in school wasn't going to allow me to find a way to have my mom continue to pay for my cell phone bill. I needed to find a way to revitalize the computer club and keep it going. By this time I was only going to computer club meetings on monday nights. I talked to the new principal and asked him what hes looking for in clubs and he explained that he wants to walk in on every club on the first and last week of the month and make sure the members of the club are being educated.\n\nI was shot down by a girl that week via text message that week after sending her a text saying \"Every moment in life is a learning experience so why don't we learn more about each other as a couple\". The same technology that I joined the Computer Club with was also the same technology that would influence the decision to change the club. I took that quote and mentally buried it into my eyelids. Over the next 3 months I grabbed every broken computer in my garage and every monitor, screen, or keyboard and brought it to school to create a learning experience for others.\n\nI changed the name from the Computer club to the Tech club and would use the slogan \"Every moment in life is a learning experience\". Students started to gather up more and more as I found ways to compare the motherboard to the spine of the computer, or the processor as the brains of the pc so that it would stick in their heads. My mom would help me build weekly lesson plans to help teach new members of the club every week and decided that since I was so focused on the club she would continue to pay for my phone bill.\n\nDue to the lack of returning members or members who only came to talk about video games, we weren't able to make enough noise in the school paper to have our own article or get a picture in the school yearbooks.\n\n#### Everything in Linux is a file\nFor a short summer I worked in boca for a company that dealt with loans and taxes. It was brief and I was hired because the person interviewing me (Rodney) asked me if I knew what Linux was. I hard heard of it at the time and spun up some virtual machines to find out what it was all about but never really did a deep dive into it until later in my career. I was fired after being a glorified data entry clerk for 2 months because the position required that you have a bachelors degree and I slipped under the cracks until the end of summer. The small discussion about how everything in Linux is a file and how files can be manipulated to work as scripts or as configuration files landed me a summer job and taught me about how you can distribute money to people when they call is saying \" Its my money I need it now!\". This part of the story is small but the fact that the little knowledge got me a job is important to me.  \n\n#### Educated Entrepreneurs\nAt one point in my career I knew that being the \"neighborhood pc repair guy\" wasn't going to be enough for me. I started to find a fascination for web design and they way the web works and wanted to be a piece of the puzzle that helps build the web. How does one shift from cleaning out viruses to writing code and building web pages? With money of course. Now a new college student feeling a familiar feeling of not knowing anyone and wanting to find ways to make money to pay for web design courses I needed to find my edge that made me stand out from others.\n\nKids in high school would talk about smoking weed and drugs that they discovered after school. Young adults in at the community college however, were more open and apparent about the drugs they were smoking or trying to stay focused in class. Walking through the parking lot every day you would smell traces of weed smoke from someone who wanted to relax before walking to a stressful class or a group of potheads who wanted to smoke out a car before playing pool in the student activity center.  Drug dealers came in different shapes and sizes, from the hipster tattered shorts to the gold chains and fresh jordan sneakers. One thing they had in common was that they were able to sell a product they didn't own or manufacture and make profit. They were street entrepreneurs and sales agents of the community. The freedom they had in making a sale (in some remote location where they don't get caught), going to class, then choosing whether or not then wanted to work more and make more money fascinated me.\n\n#### Whats your Passion\nI sat down with a friend who was known for having the best <insert name for strong strand of weed here> and asked him why he made money that way and didnt find a way to do that with something legitimate. He states, and I quote \"When you love something and find a way to monetize it, why would you not make money doing it?\". Im not sure where he is now or if he is still doing things like this but that motivated me to start selling copies of windows 7 I had laying around the house. I had a tech plug online that would feed me free keys to windows 7 ultimate from a shared spreadsheet on google drive at the time that included keys to antivirus software like malwarebytes and Norton's latest software.\n\nI knew a girl who was in school for business administration that would study after class at the same time on mondays, tuesdays, and wednesdays and would read from the books she was using about creating business models and finding ways to produce income in a way that would allow to me set retainers for people who wanted me to come back and check on their systems. During the years of 2009-2011 Windows 8 took over the market which lead to sales in clients who needed copies of windows 7 on their pc's so they didn't have to deal with the frustrations of tiles, tablets menu's, and new gimmicks that came along windows 8.\n\nThe money came in so well I was able to pay for books and classes out of pocket the next semester. The money came, then the money went. Clients started complaining that their computers were prompting that \"Windows has not yet been activated\". I soon realized that the keys I was using were keys for trial versions of windows 7 or malicious keys that would trigger a windows activation error during an automatic update. My choices were to either find a way to become a Microsoft partner and sell keys (the legitimate way to sell keys on the streets), or find a free alternative to give people that will keep them happy for the time being.\n\n#### The Change over\nDoing a quick google search I came across Ubuntu. A Debian based operating system that was free for people to download and use, free of licensing costs, and free for life. I spent months \"cracking\" windows operating systems to satisfy clients while I learned about how to use Ubuntu and other linux Distros. The overwhelming knowledge of Free and open source software lead me down a road of using BackTrak linux, hacking, and using free Apache tools to build web servers. Do I switch from the streets where my validity was diminishing because of my rep for being the kid who can hook you up with some software that may or may not work, or do I switch to become a cyber hacker like I saw in the movies (like sneakers and the Italian Job). Neither worked out well but I knew that Linux was my newfound passion and what I wanted to work with from now on.\n\n#### Open Source and free tools\nIn 2010 I found myself in college with the idea that I can get through school and leave debt free if I\ncould find a way to find free alternatives to Microsoft or Closed Source Projects that I normally\nhave to pay for. I got tired of torrenting cracked copies and manipulation license keys. I had already committed to making the switch to Ubuntu Linux\nand needed to find the right tools to keeping me from doing normal tasks on my laptop.\n\nDuring these days I was making some money helping my cousin, a graphics and web designer, by make flyers, resize images, and cropping photos together\nwith Photoshop and other tools on my home pc. To keep what little money I was making I had to find some way to keep big projects on more than just a thumb drive and a quick solution to making quick changes on the go. Sounds like a lot for someone who only owned With just an hp G6 laptop, a chromebook, a broken honda cbr 600, and a bus pass at the time I needed to make sure I have an alternative in case photoshop stopped opening because of licensing errors or office started complaining about invalid keys.\n\nI was looking for Open Source Alternatives that would help be save some coin, and with a stroke of luck, or genius,\nI googled \"Open Source Alternatives\" and found [OS ALT](https://www.osalt.com/).  \nNow that i have a potential repository to find alternatives to common software I cant afford like Microsoft Office 2010 (at the time)\nand Photoshop I would be set! In college many teachers stressed the importance of staying focused and not wasting time. However, during those micro lectures I would be thinking about ways to take down key notes and writing poems to make it look like I was being attentive. The professor stated\nthat people don't take enough time to write out lists to accomplish goals they are setting for themselves...and that's when it hit me.\nI needed to write a list of software that I use on a day to day basis and software that I use that trigger me to turn on my computer\nand use it for school or work related purposes. My list at the time consisted of the following\n\n* Image editing like Photoshop\n* Music players like Itunes  \n* Writing papers like Microsoft Word\n* Torrent Downloader like Vuze\n* Task organizer like Windows Sticky Notes\n* Web browser for everything else.\n\nAfter writing these notes down I approached the professor to gather insight on what he may use his computer for on a day to day basis.  I figured\nhe would say something that would trigger me to think of other reasons I use my computer other than Netflix and browsing the web.\nHe said \"Well I look for ways to play games and read news articles.\". In a school like setting random questions like this seemed to be the norm\nso I was comfortable with asking other people and telling them it was for a class. I realized that everyone Used their computer for\njust about the same reasons I used mine, give or take some Microsoft excel wizards and World of Warcraft fanboys.\n\nGetting all the information I felt was necessary I think decided to give the project a name. Naming it would encourage me to\ncontinue with the project and not succumb to the convenience of the software already installed on my computer. Thus, the inception of Project Migration began. More on that in [another blog](https://tedley.me/slow-steps-to-freedom/).\n\n\n\n#### The cost of doing business\n For some reason (unknown to me at the time) I didn't want to lose my street cred so I focused on finding out which version of Linux has the most support and is the easiest to transition to from Windows. This kind of thinking had me believe that I can get people to use software like Firefox on Ubuntu and whatever software they had there as alternatives to get basic work done and call me when they needed help installing something new. If i'm special skills I would be the new Frank Lucas on the block (just not as good looking as a young denzel). I read through sites like [Distro Watch](https://distrowatch.com/) and\n[Linux Journal](https://www.linuxjournal.com/)\nto learn about anything and everything I could to show people how to use Apache Open Office instead of Microsoft Office so they can finish school assignments or spreadsheets for free. I quickly learned that consumers will stick to what they know due to comparability and fear of what they don't know\n\n\nTime felt as though it was running against me and local clients were going to other people like young family members to fix computers. I was lowering prices to stay afloat and make sure client retention met a status quo but the streets were flooded with new kids on the block with dvd's of all types of software that can hook you up for cheaper than my prices. I could either rebrand myself and start a business so that people  would take me more seriously with an LLC to compete with best buys geek squad and lil Timmy who just turned 12 and already helps mom with installing apps on her phone.... or go back to understanding what I was doing everything for. Web Design!\nI went to vistaprint after hearing about a coupon code on the radio or youtube somewhere and got a batch of business cards for free and labeled myself a web designer and developer. Instead of convincing adults that they should break from the norm and switch to free software I figured I would use this newfound knowledge to free myself from my past self. \"Knowledge is Freedom\".\n\n#### Family and Failure\nWorking in restaurants to pay for school and bills was fun, but I wanted to take the computer hustle to a new level and rebranding myself had its ups and downs. I was always inspired by my cousin who has been a self made dj, web developer, and entrepreneur but watching him grind day in and day out was intimidating and stressful. I knew that I would want to take that same energy and focus it in a way that would allow me to have weekends off or take a vacation that might include responding to emails or leaving the house without having to do so much leg work. I was about 22 at the time and as young and naive to this new world of social media and life, I didn't focus enough attention on learning new skills at the time or building full web applications to learn how different things connected. Instead I found that wordpress run 30% of the internet and has documentation and plugins for just about anything on the web. I focused my attention on building wordpress sites and learning more about how I can setup my own page with wordpress and how I can use that knowledge to monetize and make money.\n\n#### The glorified IT guy\nNow equipped with my knowledge in Linux, windows, Wordpress, and server technology I had a firm understanding that stack overflow, Quora and Google are double edged swords that may either help or overwhelm me. All this information was great and allowed me to show off my skills here and there but I didn't have an audience and West Palm Beach Florida wasn't Silicon Valley or New York in terms of tech conferences or startup hubs. I knew that if I wanted to get noticed I would have to start from the ground up and work my way through the ranks to not only find my dream career but to learn as I go. The enc1102 classes I took in school helped me bang out 2,000 word essays on things that no one cared about in no time, but didn't help me with getting a job in tech, so I had to step out of my comfort zone and start applying for those kinds of jobs. I applied at a local Best Buy and with persistence and a passion for technology one of the managers fell in love with me and got me an interview. During the interview process I was told I would be working with Geek Squad. This is it!\n...and then it wasn't. The manager that was supposed to interview me for Geek Squad had left 10 minutes early so the Computer Sales manager did the interview instead and \"stole\" me thinking that I would fit in and make big sales. After the training in sales I knew two things. I hated sales and didn't want to sell $200 printers to grandmas who want to print 1 picture of their grandchildren and possibly never use the printer again, and two, that this will look good on my resume and I should be grateful. I soon found ways to be honest and sell the right products to the right people by studying sales techniques on youtube and being honest to myself and to customers. If customer A was going to buy her nephew a laptop because hes going away to college and her nephew isnt a gamer and will most likely use it for porn, netflix, and school work, then she wont need the newest $1,200 hp ultrabook with $300 of best buy and geek squad support (which I felt was nonsense but I wont go there). I soon ran into a guy who stated he was looking for a new laptop cuz his son spilled milk all over the keyboard and he didn't know if there were milk stains on the laptop or something else. I convinced him to not go with the fancy looking laptop that he was looking to throw money at, but to instead look for a cheaper laptop that has beats audio integrated into it so he can have better quality sound when watching his \"movies\" and he mentioned out loud and could spend some money on amazon looking for protective cases since best buys cases were over priced. Needless to save my honesty didn't make me good friends with my manager but everyone else I worked with had no qualms with me. The guy liked my honesty so much he threw me an offer to get me a job in tech support cleaning viruses and told me \" Your talents are being wasted here in Best buy\". After looking at his card for a few nights and thinking that I should call this guy I met with a guy who came into the store just before closing and talked my head of about how he used to work for Dell back in the day and how his son is a computer whiz. At the time I didn't know that his son would end up being my manager or that we would learn a lot from each other but his son told me about a job that was hiring in the Delray beach area and have me a name and number. The numbers just happened to match the previous customer and I knew it had to be a sign. I called the number and got an interview from Alex Miller the next week. My first step int o the tech support world.   \n\n#### OMG Tech Help and support\n*Still the IT GUY*\n\nThe warning signs came in daily with how much fun and how crazy the wild west of tech support can be. I was born in Brooklyn but lived in West Palm Beach my whole life but didn't know that Delray Beach florida is considered the drug rehab capital of America, until I started working for a tech support company. Working for two months in this new work environment where there were no real dress code standards and you were allowed to work with a T-shirt and jeans felt like I was living in a dream! The power went out a few times, there was extra pizza in the breakroom because the sales team were killing it with numbers, there were chefs coming by once a week with gourmet meals for dinner....life couldn't have seemed better. I walked into Marky Mark's office (my manager at the time) after being called into it and was told that I could become a supervisor if I wanted the position. I was ecstatic of course because I could then take the knowledge I knew and was sharing with the people sitting to the left and right of me and share it with everyone now. The money in the promotion and the salaried position also allowed me to buy my second motorcycle and start paying off some bills as well. My first day as a supervisor I was told to go into the bathroom and make sure so and so was okay. I walked in and found a guy sitting on a toilet with a needle in his arm and thats when it hit me. Walking out of the bathroom felt like walking into Narnia. The glow and glamour of working in tech and answering calls to remove viruses with comrades was gone. I was walking into a business that hired people with no background checks, threw people on the phones that knew nothing about computers, and got sales guys and girls to talk their grandma's into high end deals with white labeled antivirus that only worked half the time.\nI didn't know what to think at the time but I was working with a girlfriend who was in the customer support deparment and decided to sit outside and talk to her. She assured me that she was well aware of the ratchet people we worked with and started showing me articles about how Delray Beach was known as the \"Rehab capital of America\" and then pointed out a bus that was in the parking lot that drove some co-workers to halfway houses where they lived. 40% of the tech department had criminal charges for being young and reckless, the other 40% were all classmates from Florida career college and applied at this job because it was at a job fair, the rest of them were older people with kids and child support to deal with and needed a job that was easy and didnt require much work.\n\nI didn't want to get comfortable and wanted to use my power as a supervisor to try to help everyone grow as people in the tech field. The range between the people in that place spanned from new to the field to a decade of tech support experience. I loved the people around me and the conversations we had so I made it my mission to get the company to pay for a few cheap tech related certifications like entry level Microsoft Technical Associate certs. During these few weeks that I would bring up fun ideas my girlfriend was getting involved in some arguments with her manager and ended up leaving (or getting fired, (that I dont remember). At the time I was off work on thursdays and fridays. She got fired on thursday and had a new job on friday at a new tech support place that was cleaner and did background checks.. I was so excited for her and sad at the same time because we wont be able to eat dinner together anymore. That friday I stayed home and played video games with friends like any normal day. Saturday morning I walked in and was escorted to the owners office and was told that I was getting fired for slandering the companies name and showing up on my day off to talk to other people about leaving the company and join my girlfriends new rival place of employment.\n\n#### The calm before the storm\nBefore I was able to demand footage on security cameras that they said they had I looked at my phone and saw that my gmail for business accounts were having sync issues and knew they had already made their decision. I remembered that this wasnt the end and even though I was living paycheck to paycheck something about leaving the company felt calming.\nI stopped the HR manager as she was giving me the runaround with how much the company loved me and how my ideas for getting techs certified was a great idea and told her it was a pleasure working there and I will leave quietly. It was my first time getting fired, leaving a job in that caliber.\nmonths later friends called me in a frantic talking about how cops broke into the building and shut down computers. People were being searched and lined up on the wall and sheriffs had full on vests and loaded firearms. (https://www.palmbeachpost.com/business/delray-tech-support-firms-settle-scam-allegations-for-million/g2QGoihKuwox8aVmTzOjGO/) The company was shut down because of fradulant acts. There was discussion about how Elliot Lower\n\n My girlfriend got me a job at her new tech support company which felt like a better place because it was cleaner, the owners of the company were younger and were in a band called Nebraska Bricks (https://www.youtube.com/watch?v=e_sUOZpJsfk).\n\n#### Stability the Hello World project\nKnowing what I knew and feeling lost after abruptly leaving and starting a new tech job and not reflecting on it...I decided to reflect on it. I no longer wanted to be disposable or end up getting fired because of my significant other. I wanted to make a name for myself and find a way to be needed in a way that would get me off random phone calls with angry people and viruses, and into an office where I had some kind of stability. After talking to supervisors about ways to be more involved there was discussion about the need for a tool that can be run and installed on on client computers that is lightweight and wouldn't require us to use big zip files that took too long to transfer to computers with bad internet connection, and bingo!. At this time the world had become a Barack Obama driven \"Learn to Code\" society where there were new platforms online that would teach you to write code and build Hello World apps. I thought that it would be easy to create a small windows based application that could be run with visual basic that would clean out temp files, scan for system information, and provide feedback on drivers and serial numbers on the laptops, or desktops that the app was being run on, and easy enough to remove from a computer. Visual Basic was my programming language of choice because Microsoft had documentation for years on visual basic and c# applications and how to create buttons and download links with a button and gui. I ended up creating the TechToolkit and used Github to host and save the code. Being able to rely on documentation and use open source software like github to keep my code in an area that allowed me to write code, test code, then download and run it without much worry. Open source software for the win! The VB Techtoolkit went through quite a few changes during that time but the remains of it can be found on github (https://github.com/tmeralus/VB-TechToolkit).\n\n#### Friend or Foe 98\nWhen co-workers started beta testing the toolkit on client machines I started doing more research on how to package and sell the product and how small companies support and sell software. The owners of the company were on tour every other week making it harder and harder for them to sit down together and allow me to have one of those movie like business meetings where i try to sell them on this great product and idea. The HR rep and technical director Ryan at the time was not a critical part of the team and liked the app so far. That gave me enough hope to continue adding new features to it with stock free photos while trying to work within the dependencies constraints of dotnet framework 3.5 at the time (if my mind is as sharp as i think it is). Being a solo maintainer and working alone became a bit of a problem so I decided to start sharing the code to others at work. A few weeks went by and people starting asking me about why I removed certain download links and replaced them with other applications. I soon realized that someone in the office was rewriting my project and pushing it off as their own. That someone....Josh, was a supervisor and was able to send out mass emails forcing people to use his toolkit over mine because it was faster.\n\"I swear I saw a light bulb when\nI finally figured out who was the culprit\nI said yeah, remember me from Friend or Foe when\nI told you don't ever ever come around here no more\nTime to pay now, he tried to rise, I wave the gun - lay down\nThis time you're really going to listen to Jay now\"  --Jay Z\n\nI confronted him like a New York cat would ya know, tried to see what was going on. He explained to me that he heard of an opportunity to make more money in the game by coming up with something that all the techs could use to help remove viruses and fix computers faster. With a newfound rival my head began to spin on rushing to get everything done with the toolkit or rewriting the entire thing in C# so it wouldn't be dependent on dotnet frameworks and would work better than anyone else in the office. In the end the time spent on writing code and building applications, along with the knowledge of what can happen when yo have some friendly competition was more than enough for me to know that I was never going back to working in restaurants.\nTo this day we remain friends on social media and laugh about it but back then I didn't know who to trust and walked around trying to find out who was friend or foe.\n\n#### The Rebrand\nI knew at that time I needed to re-brand myself. I had went from neighborhood computer kid, to Team Lead Tier 3 tech support rep, to wanna be developer. I wanted to market myself in a space that would allow me to secure my future in the tech industry and help people who find me online know that I not only have a passion for what I do but I mean business. To do that I knew I couldn't work for anymore tech support companies. My mom who had been a teacher for over a decade had told me about working in the school district, the hours were nice, the holidays off and free time off work would allow me to continue trying to build apps and make some money on the side while getting that government bread.\n\n\n\n#### UPDATES TO THIS STORY COMING SOON \nSo far this story has only gone from 2009 - 2014. \nThis is the first part of my passionate to profession story that I have been writing. I'm hoping that it sheds some light on my fun filled career and allows my daughter to read this in the future to get a better understanding of who her dad was as he was growing in his 20's. I also hope that whoever reads this finds this interesting as well.\n\nA list of new things to discuss in part 2 and other parts of this story are below. If you would like to rush me to write more feel free to message me on Twitter at [@techgameteddy](https://twitter.com/techgameteddy)\n\n- working for the school district  - RES\n- working with the water people - GGP\n- How comfortable is too comfortable - GGP\n- My First Hackathon - Palm Beach Tech Space\n- Networking and Not working -Jr Palm Beach Fishing\n- Small IT building, Big Problems, Bigger Dreams\n- Takinng a leap of faith in Philly \n- Certification and Street Creds\n- Social Media and Social Distractions\n- Patience, People, and #BlackTechTwitter \n- The sailor that keeps on sailing \n    \n \n"},{"id":1648854000,"title":"Github ssh-keys for work and for play","date":"Apr 02 2022","excerpt":" \"managing multiple github accounts on one machine\"  ","img":"blog-headers/git-ssh-keys.png","content":"# Use multiple ssh-keys for different GitHub accounts on the same computer\n\nAt my current work place, I was asked to create a new GitHub account before I can be a member of the company‚Äôs GitHub organization and in turn get access to all the private project repositories. This posed a problem. I have my own personal github account on my machine already with [gh-cli](https://cli.github.com/) installed and running with ssh keys since the [move away from passwords](https://www.zdnet.com/article/github-shifts-away-from-passwords-with-security-key-support-for-ssh-git-operations/). I needed to create an ssh key and add it to my organizations account. I can't use the same one from my personal but need to be able to do the following.\nI need to be able to run a git pull or git clone and let my machine know what ssh-keys should be used when pulling from dir1 vs pulling a repo in dir2 from work. \nAfter some trial and error, these are the steps I used to finally got it to work.\n\n\n###### Step 1: Create a new ssh-key and add it to the work GitHub account\n\n$ ssh-keygen -t rsa -b 4096 -C \"my-work-email@google.org\"\n\nLets say we saved the new private key as id_rsa_work and the public key ip_rsa_work.pub and already have existing keys \nfor personal user (id_rsa and id_rsa.pub).\nYour ~/.ssh dir should looks something like this once you have answered all the prompts. \n```\n    /home/tedley/.ssh\n    ‚îú‚îÄ‚îÄ config\n    ‚îú‚îÄ‚îÄ id_rsa \n    ‚îú‚îÄ‚îÄ id_rsa.pub\n    ‚îú‚îÄ‚îÄ id_rsa_work\n    ‚îú‚îÄ‚îÄ id_rsa_work.pub\n    ‚îú‚îÄ‚îÄ known_hosts \n```\ncopy the context of the public key into your work account now. \n\n    $ cat ~/.ssh/id_rsa_work.pub\n\n\n###### Step 2: Modify the ssh config file on your local machine ( ~/.ssh/config)\n\nYou can use vim or nano or a text editor to modify the config file. That file will help break down the dir and \nidentity file you would like to point to. \n\nThis helps if you seperate your work based repos and personal based repos into different folders. \nI personally created a dir in my home dir called \"github\" for personal and \"projects\" for work related projects. \nOnce you have your repos and dirs setup on your local workstation in a similar fashion you can add the following \nto your config file.\n\n```\n# Personal GitHub account\nHost github.com\n HostName github.com\n User git\n AddKeysToAgent yes\n UseKeychain yes\n IdentityFile ~/.ssh/id_rsa.pub # personal ssh-key\nHost github.com-work\n HostName github.com\n User git\n AddKeysToAgent yes\n UseKeychain yes\n IdentityFile ~/.ssh/id_rsa_work.pub # work ssh-key\n```\n\n###### Step 3: Clone the work project repo (with a slight change in the address)\n\nTo clone the work project repos using the new ssh-key we need to make a small change to the repo‚Äôs ssh address. The host url needs to match the Host defined in the ssh config file from last step. The section above where in the address there is Host github.com, replace it with github.com-work.\n\nExample: , a typical private repo ssh address we get from GitHub would look like this:\n\n    git@github.com:[my work GitHub group]/[my project].git\n    or\n    git@github.com:Company/tedley-repo.git\n\n###### Step 4: We need to tweak its address like this before we can git clone it:\n\n    From this:\n    git@github.com:Company/tedley-work-repo.git\n    To this: \n    git@github.com-work:Company/tedley-work-repo.git\n\n###### Step 5: Testing it out. \nNow you should be able to cd into your \"projects\" directory and pull a repo from your work organization. \nAs long as both ssh private and public keys are in the ~/.ssh dir on your machine the following command should work. \n\n    $ cd projects \n    $ git clone git@github.com-work:Company/tedley-work-repo.git\n\nAnd now test with personal \n    $ cd github \n    $ git clone git@github.com:tedley/my-personal-repo.git\n\nBoth those commands should be able to clone your desired repos without having to ask for passwords or conflicting with key usage. \nThis is my current solution. Hopefully gh-cli will provide an option to have multiple accounts to use for home and work. Maybe ill peek around and \nsee how I can contribute, but for now, hope this helps whoever reads it. \n\n___\n### An alternative option \n___\n###### Setup dynamic user and email dependant of folders \n\nThere is another option that we can hammer down here as well. Lets say we want to set the user depending on the folder you are in. In the above examples \nI dont have examples so I will use a few here. \n```\npersonal github profile: \n username: teddy\n email: teddy@meralus.com\n\nProfessional github profile: \n username: teddy-TWTR\n email: teddy@twitter.com \n```\n\nIn your ~/.gitconfig, makes sure to remove the [user] block and add the following (change this to fit your needs) :\n```\n      [includeIf \"gitdir:/home/teddy/projects/\"]\n      \tpath = .gitconfig-home\n      [includeIf \"gitdir:~/home/teddy/work-projects/\"]\n      \tpath = .gitconfig-work\n````\nIn your ~/.gitconfig-home, add your personal info:\n```\n      [user]\n      \temail = teddy@meralus.com\n      \tname = teddy\n````\n In your ~/.gitconfig-work, add your professional user informations:\n```\n      [user]\n      \temail = teddy@twitter.com \n      \tname = teddy-TWTR\n```\nThis also helps solve the problem, just in a different approach. "},{"id":1648854000,"title":"2022 Unfinished PC Upgrade","date":"Apr 02 2022","excerpt":" \"PC Upgrade \"","img":"blog-headers/pc-build.jpg","content":"\nIts been quite some time since I've upgraded my \"home lab\". I have posted about going from building gaming and customer \npc's from scratch to shrinking my home lab to smaller workstations. As of 2022 I have definitely changed alot of my workstations. \nAfter talking to my wife and ordering parts my current lab looks, as she likes to call it, a mission control station. \nMy current homelab consists of a 7th gen Lenovo Thinkpad X1carbon which is starting to show its age. Its been a while since I had a Desktop \nand with all the new changes, like my daughter, I decided to become more stationary and build a new desktop. With the Thinkpad and the macbook pro \nprovided from work I felt the need to start selling the Thinkpad and building out my new workstation. I like the Idea of starting small and building \nfrom there. Here is a current list of what I am calling my 2022 build. With the inflation of GPU's due to bitcoin mining, scripted trading bots, and cryptocurrency\nI decided to hold off an on GPU for now and see if the integrated graphics are strong enought to play the small games I play like Deaths Door, Blasphemous, and possibly \nthe new Guilty Gear, King of Fighters, or (i'm hoping) Street Fighter V on low settings. The RAM will  be upgraded to max out the usage so I can start playing \nwith microk8's and more docker images without issue soon enough. So, for anyone who is intereted. Here is a list of my unfinished build. \n\n## 2022 PC WALL MOUNTED BUILD --UNFINISHED  \n\n| 2022 Unfinished PC WALL MOUNTED BUILD |\n| ------------------------------------- |\n| Part    | Product | \n| ------------- |:-------------:| \n| Motherboard       |[ASUS Prime B550M-A/CSM AMD AM4 (3rd Gen Ryzen‚Ñ¢)](https://www.amazon.com/dp/B088VVN85S?psc=1&ref=ppx_yo2_dt_b_product_details) |\n| CPU      | [AMD - Ryzen 5 5600G 6-Core - 12-Thread](https://www.bestbuy.com/site/amd-ryzen-5-5600g-6-core-12-thread-4-4-ghz-max-boost-unlocked-desktop-processor/6474407.p?skuId=6474407)|\n| GPU      | [XFX - SPEEDSTER SWFT210 AMD Radeon RX 6600](https://www.bestbuy.com/site/xfx-speedster-swft210-amd-radeon-rx-6600-core-8gb-gddr6-pci-express-4-0-gaming-graphics-card-black/6495949.p?skuId=6495949) |\n| RAM      | [CORSAIR - Vengeance RGB PRO 16GB (2PK x 8GB) 3200MHz DDR4 C16 DIMM Desktop Memory](https://www.bestbuy.com/site/corsair-vengeance-rgb-pro-16gb-2pk-x-8gb-3200mhz-ddr4-c16-dimm-desktop-memory-black/6256216.p?skuId=6256216) |\n| HDD      | [NVME - Western Digital - Blue SN570 1TB Internal PCIe ](https://www.bestbuy.com/site/wd-blue-sn570-1tb-internal-pcie-gen3-x4-solid-state-drive-for-laptops-desktops/6483709.p?skuId=6483709) |\n| CPU Cooler    | .... I'm just gonna blow on it every time I turn it on    |\n| PSU      | [CORSAIR - CX-M Series CX750M ](https://www.bestbuy.com/site/corsair-cx-m-series-cx750m-semi-modular-low-noise-atx-power-supply-black/6459241.p?skuId=6459241) |\n| Case      | [Thermaltake Core P3 ATX Tempered Glass Gaming Computer Case Chassis](https://www.amazon.com/dp/B07BFGB8Z6?psc=1&ref=ppx_yo2_dt_b_product_details ) |\n| Monitors      |  [Dell SE2722HX - 27-inch FHD](https://www.dell.com/en-us/work/shop/dell-27-monitor-e2722hs/apd/210-bbwu/monitors-monitor-accessories)|  \n  \n  \n\n## CURRENT SETUP\n<img src=\"/assets/img/blog/2022-build/thinkpad.jpg\" width=\"40%\" height=\"40%\">\n<img src=\"/assets/img/blog/2022-build/work-macbook.jpg\" width=\"40%\" height=\"40%\">\n<img src=\"/assets/img/blog/2022-build/monitors.jpg\" width=\"40%\" height=\"40%\">\n## New Wallmounted Parts \n<img src=\"/assets/img/blog/2022-build/build-parts-1.jpg\" width=\"40%\" height=\"40%\">  \n<img src=\"/assets/img/blog/2022-build/build-parts-2.jpg\" width=\"40%\" height=\"40%\">  \n\n# OLD BUILD PICTURES \n\nHere are some images of my working environments over the years\n* 2022 home & work lab (remote work for the win) \n* * <img src=\"/assets/img/blog/2022-build/monitors.jpg\" width=\"60%\" height=\"40%\">\n* 2019 work lab \n* * <img src=\"/assets/img/blog/dev-env-ansible/work_20190801.jpg\" width=\"60%\" height=\"40%\">\n* 2018 home lab \n* * <img src=\"/assets/img/blog/dev-env-ansible/dev-helm-ct.jpg\" width=\"50%\" height=\"30%\">\n* 2016 home lab \n* <img src=\"/assets/img/blog/dev-env-ansible/2012-build-2.jpg\" width=\"40%\" height=\"40%\">\n"},{"id":1647644400,"title":"Fixing Battery Issue for Thinkpad X1 carbon","date":"Mar 19 2022","excerpt":" \"7th gen Lenovo Thinkpad X1 Carbon | Ubuntu 20.04\" ","img":"blog-headers/battery-issue.jpg","content":"Knowledge, like air, is vital to life. And like air, no one should be denied it.\n\nI recently made the mistake of plugging my Lenovo X1 Carbon (Gen 5) into a 5 volt USB-C charger overnight. The LED on the side indicated that it was charging but, when I woke up in the morning, it obviously hadn't. Worse, it now refused to charge even when plugged into the correct charger.\n\nThe fix is simple (although undocumented as far as I can tell). Basically, you need to reset the battery as follows:\n \t \n    Unplug from any power sources (this won't work if you don't do this).\n    Reboot into the BIOS setup (F1 on boot).\n    Navigate to the Power menu.\n    Select the \"Disable built-in battery\" option.\n    Wait for the laptop to power off and then wait 30 seconds.\n    Connect the power and start the laptop.\n\nThis will temporarily disable the battery which seems to reset any \"bad charger\" bits.\n\nHopefully, this will save others some time and frustration.\n\nThe X1 Carbon is otherwise a great laptop with an awesome keyboard. However, because this is my blog and I can rant all I want here:\n\n    The dedicated Ethernet port is pretty much useless given the ubiquity of USB-C. I'd have much preferred an additional USB or USB-C port.\n    The nipple seems a bit firmer than the one on my X220 and also seems to get into the \"wandering cursor\" state a bit more frequently.\n"},{"id":1643756400,"title":"2022 Dev Environment with Ansible","date":"Feb 02 2022","excerpt":" \"The sailor that kept sailing \"","img":"blog-headers/monitors.jpg","content":"\nI have previously spoken about my dev environment and using a bash script to setup a new \"home lab\" or working dev environment [here](https://meralus.com/my-dev-env/)\nbut I dont think I ever broke down how I go there. So i'm writing this as a Ted Talk to share soem of my past experiences and tech related stories. \n\nAutomating has become a key tool in todays tech society. There are many tools and platforms that can be used to \nhelp with automation like Ansible. Ansible is a configuration management tool that is popularly used in the DevOps\nworld and can definitely give you a leg up when trying to get things set up quickly. I not only use it at work for \nconfiguring web applications on different servers but I use it at home when setting up a new dev environment or computer. \nMy dev environment has definitely dwindled down from multiple laptops and computers in my room to a more software based \napproach, which in turn, makes managing it a lot easier. Lets break down so ideas about dev environemnts, home labs, and \nhow to use ansible to automate the software part of all of that. \n\nMany hobbyists that I talk to today still have their home labs setup with half built computers on the floor or servers in closets that are generating heatand confusing their spouses with questions of importance. For those of you out there, I would like \nto give you a digital toast. I try to update my dev environment on a yearly basis to keep it clean and help remove the clutter \nof things that I know I wont be using. It starte with trying the minimalistic approach back in 2012 when it became all the news \nand media blogs were talking about. There are still some youtube vlogs about being a minimalist that I sometimes envy. My technical knowledge\nin building PC's and testing hardware seem to have reached a plateau. Most manufavturers weren't designing anything new or groundbreaking \nother than new processor chips and graphics cards. This was great news but the process of putting a pc together was still the same \nand I knew that if I wanted to stay sharp in the tech field I would have to adapt like businesses and society does. So I went for a digital approach. \n\nAs I was learning about bash scripting back then I started to notice that a lot of the software I wanted to learn about like wordpress\nand apache and MySQL didnt require all the small pc's I had in my house collecting dust at the time. I knew then I no longer wanted to \nlive a dream of building my own pc repair store to compete with the Circuit City's and Best Buys of the world. I wanted to shrink my dev environment to something that was more focused on software because thats what peaked my interest at the time. Making that decision to go from \nbuilding and hoarding custom pc builds like the last one I had done in 2013 to convert to something with a smaller footprint and same speed felt like I was leaving a chip full of tech junkies who wanted to start water cooling their builds and [benchmark Crysis 2](https://www.nvidia.com/en-us/geforce/news/crysis-2-benchmarks/#1), to abandoning ship and sailing off in a life of Pi sized boat into the world of the uknown... one of the best decision I've ever made.\n\nTaking the software approach meant learning about the new kids on the block and finding out how that worked for my situation. At the time I wasnt working professionally in the tech industry but I had already been sacrificing good quality gaming time with friends to learn how to spin up web servers, what load balancing tools were free and available, and how I could take the tools I was learning and the custom builds (first picture below) that had 4 8gb sticks of ram and 4 250 HDD drives to something more modern and smaller (second picture below) with the same specs. \n\n* LAST CUSTOMER BUILD BEFORE 2022 \n* * <img src=\"/assets/img/blog/dev-env-ansible/2012-build.jpg\" width=\"40%\" height=\"40%\">\n* SMALLER BUILD  \n* * <img src=\"/assets/img/blog/dev-env-ansible/2012-build-2.jpg\" width=\"30%\" height=\"30%\">\n\nFollowing my minimalistic approach I went from 6 computers running different Linux or Windows based environments, to one \nsmall pc with 32gb of ram (expensive at the time) that could produce virtual machines or spin up Vagrant boxes to do my bidding. \nSoon enough all my new learning methods went from physically taking apart boxes to breaking down lines of code, shortcuts, scripts, and commands in Linux. \n\nI soon learned that shrinking the size and footprint of my pc setup also meant that the mini pc that I was now using, howerver strong it may have been, cant stand the heat when the ram starts to peak. My PC went from a Personal computer to a Peice of Crap now once it overheated \nand fried on me. I had to find a way to buy a new pc and rebuild all the things I was doing again. All my shortcuts and scripts had to be placed\nback in my home directory, the downloaded vagrant boxes had to be redownloaded and setup again, and I had to build from nothing. It was a nightmare back then. That's when I learned about Ansible. It wasnt until later around 2017 when I learned that Ansible wasnt only for automating \nprofessional environment server and for huge server farms. \n\nCome 2017. My knowledge in github had grown and I had started putting small projects on my profile to keep as my \"google drive for code\" location. \n\nI soon realized that with Ansible, regardless of what computer I had and which OS i was using (which at the time I had been considering distro hopping again) I can write an ansible playbook that will download all the tools I need, the software I was working with, and setup my entire work environment in less than 10 minutes. It felt like using [ninite.com](https://ninite.com/) when I was setting up windows based pc's and automating the install process of alot of common applications.\n\nMy 5+ year solution for provisioning my dev environment was solved. during the years before I started using ansible I had written a bash script to download software, setup folder structures, and do everything I need in a Debian/Ubuntu based environment. Now that I was using ansible \nI could switch between CentOS or Ubuntu run my script to look for and install all the packages I needed. Ansible playbooks, which is a feature in ansible to run a list of tasks idempotently allowed me to determine the OS environment, install needed packages like steam, whichever IDE I was using that the time, copy wallpaper to my pictures folder, set my wallpaper, move my alias to my bash profile, and download different software from the internet. I have a public version of my [dev-environment](https://github.com/tmeralus/dev-environment-ansible-role) ansible playbook to share with others so hopefully they can not only use it as an example for how to write an ansible playbook and setup a software based dev environment. My approach may seem different to some, and helpful to others. I just hope that whoever read this enjoys the post and shares their thoughts with me via [Twitter](https://twitter.com/techgameteddy) :) \n\n==Quote to leave you with: ==\n *The means of learning are abundant, The desire to learn is scarce.*\n\n\nHere is a changelog of the scripts I have been adding over the years \n* [Fresh Install Script](https://github.com/tmeralus/fresh-install-linux)\n* [Dev Environment Script- 2018 ](https://github.com/tmeralus/dev-environment-script)\n* [Latest Dev Environment Script + Ansible - 2020](https://github.com/tmeralus/dev-environment-ansible-role)\n\n"},{"id":1641942000,"title":"Babies and Bad Habits","date":"Jan 12 2022","excerpt":" \"Finding a shut down time for your brain\"   ","img":"blog-headers/kam-relaxed.jpg","content":"I keep telling myself I want to do more, make more, develop something, finish this book, script, project, so that when my daughter is older I can show her that if Daddy can do all these things I can too. \nMy daughter, Kendall, 5 pounds 8 ounces of bliss and beauty is now here and I cant find time to rest. \nIt sounds selfish and all my friends, including those with young kids who have just went through it\nkeep telling me to enjoy every moment and take time to rest, but I can't. I don't know how. Maybe I'm choosing not to. I'm very self aware and know that writing this is not only a way to get out frustration but I have spent way too much time on go-go-go to have to stop and smell the baby diapers.\nI love my daughter and having my mother and wife here to assist in making sure she is eating and sleeping feels like we are working well and functioning as a team. It's not easy, but it feels better because I have a support system, however, when I try to take this time to sleep while the baby sleeps or rest while I have time my mind starts asking questions. A few of them are as follows: \n\n* What projects have you completed to showcase your skills with Linux, scripting, and applications\n* What hobbies will you introduce to your daughter when she is older? \n* Will your baby pick up on your bad habits?\n* Are these habits bad? Should you stop trying to compare yourself to everything and everyone is?\n\nTalking my feelings out to my wife helps every time I get too into my head, but I think the 24 hour news cycle\nand constant attention I put into these social media applications are at an all time high right now. I think taking a hiatus might help. \nThere are (articles like this)[https://steveadcock.us/24-hour-news-cycle] that discuss the destruction of the 24 hour news cycle. The top of the page states that the new cycle is hinged solely around profit. Whether it provides misinformation or advertisements, it continues to seep into my life and have me feel like I'm not doing enough. If these content creators, youtubers, podcasters, and even news channel anchormen and woman have multiple streams of income and \nevery YouTube video explains how many streams of income I'll need to be rich, will I be rich. Will I end up chasing money after already learning the importance of it \nand knowing that it won't lead me to happiness personally? Who knows. What I do know right now is that I get into this space where I find a pocket of free time (which I am scheduling now with this newborn baby) and get lost trying to do a million things with the allotted time instead of just finding peace and freeing my mind by taking a nap or meditating. I think writing this is somewhat therapeutic in some way. It allows me to get my shit off and update my blog. \n\nQuote: \"Comparison is the thief of joy\" \n\nDuring my time in which I found God after leaving the church I was prompted to try the Daniel fast. \nThe pastor of the church I was in had mentioned to take this 21 day fast and use it to fast from anything you need to remove from your life. Anything you think is causing problems or preventing you from spending time talking to God can be used for fasting, not just food. I decided to fast from social media for 21 days (started in 2016 or 2017). \nDuring that time I was using Snapchat, Facebook, Twitter, Instagram, and had a Vine account that was slowly fading away because its popularity had it diminish to an app that had a bunch of copycats taking celebrity videos and failing at recreating them. \nThe first time I did this I realized why I used these apps and resources and why I created them. Facebook was popular in 2009 when I graduated high school and became a tool to stay connected with high school friends and connect with family out of state. Instagram was a photo repository that I used to capture and share moments in my life and my travels. Twitter was created to follow the battle rappers I found on the back of a smack dvd my twin and I found while trying to spend money at a bodega in Brooklyn. Twitter then became a tool used to stay up to date with \ntech companies, and underground music artists that I loved. Snapchat, like Vine, was an in the moment app that I used to edit images with filters, share my travels and activity, and find out what my friends are doing. \n\nAs I started to do what felt like a \"Detox\" from these apps I started asking myself, should I keep using these? \nSnapchat and Vine didn't make it past the detox. I realized that the media at the time (and still today) would mention how stir crazy these tech companies were to capture your attention to get ads in your face. Stealing your data to sell to advertisers so that if you post a picture about dogs or talk about dogs while the app is running it could then send that data back to its database, spit that out to advertisers and then have them send you dog food ads. This was something that a lot of people saw when Facebook purchased Instagram and began changing the user experience of the app to target ads to people aggressively. Facebook was important. My mom, twin, and older brother were living between Florida and New York and I used it to stay up to date and communicate if not through text or calls. Instagram was deleted shortly after the detox phase. It's usage diminished after I took the time to sit without it. \nTwitter, which I still use as a micro-blogging platform, had become my handheld newspaper. Anytime I turned to the weather or news from the big 4 (CNN, ABC, NBC, or FOX) every person had a twitter account. Businesses, upcoming blockbuster movies, video games, music artist, were all on Twitter to promote news and information. Once I started following local newspapers like the Palm Beach Post I stopped searching for the newspapers thrown at the doorsteps once a week. I only noticed after my first detox that those newspapers weren't being sent out on Sundays anymore (another blog for another time). \nBeing able to use these apps and not feel like the apps are using me had revolutionized the way I saw how these companies sold their products. It changes my life for the better and helped me see what I was doing and find ways I can change my behavior in an effective manner.\nThe Daniel fast also allowed me to pray in different ways. Most prayers as I grew up were requests and not compliments. If you were getting prayers as emails and they were all requests like \"help me get through this\" or \"please help these people\", as a human you would grow tired of those emails. So I started praying differently and thanking God for where he has placed me \n\nQuote: \"Every moment in life is a learning experience\"\n\nTaking this time yearly always seems to help me meditate and get back to zero. Zero, is what I like to call my safe space. It's a date with my conscience \nand a space where I start to appreciate my accolades and focus on what is important. Social media has a way of tipping the scales of reality and having you cooking stir fry while your dedicated your time to baking a cake. It may feel like \"I'm still cooking\" but in reality your time isn't being spent accomplishing your goals you started with. \nNow that I have wrote this and spent time getting this out of my head, I think taking time to be self aware and learn to appreciate the things around you will be something I will teach my daughter. \nTalking our feelings out and using words to convey our emotions will be our time consuming daily tasks.\n\nOur hobbies will consist of quality time and learning the quotes that always ring back in my mind when I start getting stuck and my thoughts start spinning. \n\nWe will do more laughing, make more loving moments, and develop motor skills to twist the night away. The only bad habits I want to teach are these motor skills on the dance floor! \n\n"},{"id":1639004400,"title":"VIM Cheat Sheet","date":"Dec 09 2021","excerpt":" \"VIM Cheat Sheet\" ","img":"blog-headers/vimlogo.png","content":"\nThis page is helpful tips on how to quickly navigate using VIM\n\n\n\nStarting Up\n-----------\n    vim {filename}\n    vim {filename} +n       Open {filename} and position the cursor on line n.\n    vim *.txt\n\nModes\n-----\nNormal\nInsert\nInsert-Normal (Use command, then return to Insert mode.)\nOperator-Pending\n\nComment: Below, the dash \"-\" between buttons signals holding the first button, then pressing the second.\n\nGetting Help\n------------\n    vimtutor\n    :help\n\nFundamentals\n------------\n    .                               Repeat the last command. (Includes text insertion in insert mode.)\n    i                               Enter insert mode.\n    I                               Enter insert mode at the beginning of the line.\n    a                               Enter insert mode one character beyond the cursor.\n    A                               Enter insert mode at the end of the line.\n    Esc                             Exit insert mode.\n    s                               Delete the character under the cursor and enter insert mode.\n    J\n\nMoving through text\n-------------------\n    h, j, k, l                      Move right, down, up, or right (real lines).\n    gj, gk                          Move down or up display lines.\n    0, g0                           Move to the first character of the real (, display) line.\n    ^, g^                           Move to the first non-blank character of the real (, display) line.\n    $, g$                           Move to the end of the real (, display) line.\n    w, b                            Move to the front (, back) of the next (or current/previous) word.\n    e, ge                           Move to the back of the current/next word (, previous word).\n    W, B                            Move to the front (, back) of the next (or current/previous) WORD.\n    E, gE                           Move to the back of the current/next WORD (, previous WORD).\n    :jump                           Inspect the contents of the jump list (for <ctrl-o>, <ctrl-i>).\n    <ctrl-o>                        Move back through the breadcrumbs. Will jump through buffers.\n    <ctrl-i>                        Move forward through the breadcrumbs.\n    <ctrl-b>, <ctrl-u>              Page Up.\n    <ctrl-f>, <ctrl-d>              Page Down.\n    <number>|                       Move to column <number>.\n\nJumps (Moving through text and files...)\n----------------------------------------\n\nJumps: Command                  Effect\n--------------                  ------\n    [count]G                        Jump to line number.\n    //patern<CR>/?pattern<CR>/n/N   Jump to the next (previous) occurrence of pattern.\n    %                               Jump from matched brace (),{},[] to another (front-back).\n    (/)                             Jump to start of previous/next sentence.\n    {/}                             Jump to start of previous/next paragraph.\n    H/M/L                           Jump to top/middle/bottom of screen.\n    gf                              Jump to file name under the cursor.\n    <ctrl-]>                        Jump to the definition of keyword under the cursor. (What!?)\n    '{mark}/`{mark}                 Jump to a mark (more on this elsewhere...)\n\nModify Jump to File\n-------------------\n    :set suffixesadd+=.rb           Etc. Add the specified extension and vim will try to use them with gf.\n\nChanges (Moving through them...)\n--------------------------------\n    :changes                        List the changes.\n    g; / g,                         Traverse the change list (back / forwards).\n    `.                              Jumps to the location of the last change (see more under Automatic Marks).\n    `^                              Jumps to the last insertion.\n    gi                              Move to last insertion point and enter insert mode.\n\nSearching\n---------\n    /{pattern}                      Search forward in the buffer for {pattern}.\n    ?{pattern}                      Search backwards in the buffer for pattern.\n    n                               Repeat the search going \"forward\" (in the expected direction)..\n    N                               Repeat the search with direction reversed.\n    /<cr>                           Jump forward to the next match of pattern (don't preserve direction or offset).\n    ?<cr>                           Jump backward to the next match of pattern (don't preserve direction or offset).\n    f<char>                         Search for the next instance of character <char>.\n    ;                               Repeat the last search \"f\" performed.\n    ,                               Reverse the last character search command.\n    F<char>                         Search backwards through the text for the next instance of <char>.\n    t<char>                         Search forward to the next character before the next occurrence of <char>.\n    T<char>                         Search backward to the character after the previous occurrence of <char>.\n    *                               Place the cursor on the word you want to search for (repeats of).\n    :set ignorecase                 Turn on case-insensitive search.\n    \\c                              Ignore case in *this* search (regardless of set setting). (Put anywhere in search term.)\n    \\C                              Use case in *this* search(regardless of set setting). (Put anywhere in search term.)\n    :set smartcase                  Ignore case in the search by default unless we include a capital letter in the search.\n    /#\\([0-9a-fA-F]\\{6}\\)           Search for six consecutive hexadecimal numbers preceeded by a # sign. (Optionally also escape the closing }).\n    /\\v                             Active the \"very magic search switch.\" (All characters assume special meaning except _, a-zA-Z0-9.\n    /\\v#([0-9a-fA-F]{6})            Search for six consecutive hexadecimal numbers preceeded by a # sign.\n    /\\v#(\\x{6}|\\x{3})               Search for six or three consecutive hexadecimal numbers (w/ hex character class) preceeded by a # sign.\n    /\\V                             Activate the \"very nonmagic\" search switch. (All characters except \\ lose special meaning - literal search.)\n    ?\\V                             Activate the \"very nonmagic\" search switch. (All characters except \\ and ? lose special meaning - literal search.)\n    /\\v<word>                       Use <> to mark the boundaries of a word (e.g., search for \"the\" and not \"these\", etc.).\n    :nohlsearch                     Unlike :set nohlsearch or :set hls!, this turns of highlighting until the next search is performed. (:noh)\n    <ctrl-r> <ctrl-w>               Autocomplete search field using remainder of highlighted selection (when :set incsearch is active).\n    /{pattern}/e                    Position the cursor at the end of the pattern when searching (default is the beginning).\n    //e                             Anchor the next search of a previous pattern to the end (no need to have /e'd initially). Can be used as a motion.\n    <ctrl-r> /                      Paste the contents of the last search register in place (insert mode, command line mode).\n    :let @/='Pragmatic Vim'         Set the last search register to 'Pragmatic Vim'.\n\nSubstitution\n------------\n    :s/{pat1}/{pat2}/               Substitute the first instance of {pat1} with {pat2} on the current line.\n    :s/{pat1}/{pat2}/g              Substitute all instances of {pat1} with {pat2} in the current line.\n    :[range]s/{pat1}/{pat2}/g       Substitute all instances of {pat1} with {pat2} over the specifiec range of lines.\n    :33,34s/aa/ab/gc                Replace aa with ab on lines 33 and 34.\n    g&                              Repeat the last substitution over the entire file.\n    :%s/{pat1}/{pat2}/gc            Search and replace pat1 with pat2 and prompt each time over the whole file.\n    :%s/{pat1}/<ctrl-{register}>/   Search and replace pat1 with the contents of register {register}.\n    :%s/{pat1}/\\=@{register}/       Use the contents of register {register}, passing the contents by value. (e.g. @0 for the yank register, @\" for default)\n    :%s//{string}/gc                Search and replace using the last match.\n    :%s///gn                        Count the number of matches of the last search pattern used, don't do anything (n suppression).\n    :&&                             Replay the last substitution over the current line.\n    :%&&                            Repeat the last substitution over the entire file (longer g&).\n    :'<,'>&&                        Replay the last substitution over the visually selected range (get '<,'> automatically with : from visual mode).\n\nSpecial Characters in Substitution Command Replacement Strings\n--------------------------------------------------------------\n    Symbol                          Represents\n    ------                          ----------\n    \\r                              Carriage return.\n    \\t                              Tab.\n    \\\\                              Backslash.\n    \\1                              Insert the first submatch.\n    \\2                              Insert the second submatch (and so on, up to \\9).\n    \\0                              Insert the entire matched pattern.\n    &                               Insert the entire matched pattern.\n    ~                               Use {string} from previous substitute.\n    \\={Vim script}                  Evaluate {Vim script} expression, use the reult as the replacement {string}.\n\nEditing in Replace Mode\n-----------------------\n    R                               Enter replace mode.\n    <insert>                        Also may use the insert key to enter replace mode (if present).\n    gR                              Virtual replace mode (treats tab stops as though they were a single space).\n    r{char}                         Replace a single character.\n    gr{char}                        Replace a single character in virtual mode.\n    Vr-                             Select a line and replace all the characters with \"-\"\n\nMark Text\n---------\n    m{a-zA-Z}                       Lower case letters mark only the buffer, uppercase are global (across all buffers).\n    '{mark}                         Jump to the line where the mark was set.\n    `{mark}                         Jump to the exact point the mark was set.\n\nAutomatic Marks\n---------------\n    Keystrokes                      Buffer Positions\n    ----------                      ----------------\n    ''                              Position before the last jump within current file.\n    '.                              Location of last change (beginning of line).\n    '^                              Location of last insertion (beginning of line).\n    '[                              Start of last change or yank.\n    ']                              End of last change or yank.\n    '<                              Start of last visual selection.\n    '>                              End of last visual selection.\n\nRepeatable and Reversible Actions\n---------------------------------------------------------------------------\n    Intent                          Act                     Repeat      Reverse\n    ------                          ---                     ------      -------\n    Make a change.                  Edit                    .           u\n    Scan line for next.             f{char}/t{char}         ;           ,\n    Scan line for previous.         F{char}/T{char}         ;           ,\n    Scan document for next.         /{pattern}<CR>          n           N\n    Scan document for previous.     ?{pattern}<CR>          n           N\n    Perform substituion.            :s/target/replacement   &           u\n    Execute a sequence of changes.  qx{changes}q            @x          u\n\nRun Commands in the Shell\n-------------------------\n    :!                          Access the shell.\n    :!ls                        Run ls in the shell. (Note, :ls shows the contents of the buffer list.)\n    %                           On vim's command line, this is short hand for the current filename.\n    :!ruby %                    Runs the current (ruby) file being edited.\n    :shell                      Start an interactive shell session inside vim. (Use \"exit\" to return to vim.)\n    :read !{cmd}                Put the output of cmd into the current buffer.\n    :write !{cmd}               Use the current buffer as input for cmd.\n    :write {file}               Write the current buffer into {file}.\n    :write! {file}              Write the current buffer into {file} and overwrite the contents. Watch the ! placement!\n    :[range]!{cmd}              Pass the lines in range to cmd and replace the range with the output of cmd.\n    :!mkdir -p %:h              Make all the directories needed to write a file into its current path.\n\nWorking with Files\n------------------\n    :cd {path}                  Change vim's working directory.\n    :pwd                        Show vim's present working directory.\n    :edit {filename}            Open a file into the buffer for editing.\n    :edit!                      Re-read the current file into the buffer and discard exisitng changes. (:e!)\n    :edit %<tab>                % is a short-hand for the active buffer filepath.\n    :edit %:h<tab>              The :h modifier removes the filename while preserving the rest of the path.\n    :find {file}                Open a file by name without a fully qualified path. (<tab> completion is available.)\n    :set path+={dir}/**         Add a directory to the vim \"$PATH\". (** matches all subdirectories below {dir})\n    :set path?                  Inspect the value of the path.\n\nWrite Changes from a Buffer to a File\n-------------------------------------\n    :write                                ZZ will also write and close.\n    :update\n    :saveas\n    :w !sudo tee % > /dev/null            Write the current buffer as the super-user. (% expands to the path of the current buffer.)\n\nManipulate File Buffers\n-----------------------\n    :ls                                   List the files.\n    :bnext                                Switch to the next buffer. (:bn)\n    :bprev                                Switch to the previous buffer. (:bp)\n    :bfirst                               Move to the first buffer. (:bf)\n    :blast                                Move to the last buffer. (:bl)\n    :buffer N                             Move to buffer N (:ls shows the buffer numbers). (:buf N)\n    :buffer {buffname}                    Move to the buffer with name {buffname} (shown by :ls, no need for \" characters).\n    <ctrl-^>                              Toggle between the current and alternate buffers.\n    :bufdo                                Run an Ex command on all the buffers.\n    :bdelete N1 N2                        Delete buffers numbered N1 and N2.\n    :N, M bdelete                         Delete buffers numbered N through M (this has no effect on the associated file).\n    :5,10bd                               e.g, Delete buffers numbered 5 through 10.\n    :args                                 List of files used to launch vim. (well, more than that actually...)\n    :args {arglist}                       Populate the arguments list. (e.g., vim, followed by :args {file1} {file2}). Accepts wildcards.\n    :args **/*.*                          * is a 0 or more character wildcard. So is **, but it can recurse downward into directories below.\n    :args **/*.js **/*.css                Just get all the JavaScript and CSS, etc.\n    :args `cat .chapters`                 Use shell expansion inside the backticks.\n    :next                                 Move through the argument list.\n    :prev                                 Move through the argument list.\n    :argdo                                Execute the same command on every buffer in the set.\n    :argdo %s//{pat1}/ge                  Substitute the last search match with {pat1} in all of \"argslist\" across the whole files, suppressing error messages.\n    :argdo update                         Save every file, but only if it has been changed.\n\nManaging Hidden Files\n---------------------\n    :ls                                                                                                                      \n      1 %a + \"a.txt\"                        line 17   # <- \"+\" <- Modified.\n      2      \"b.txt\"                        line 0\n    :bn!\n    :ls\n      1 #h + \"a.txt\"                        line 17   # <- \"h\" <- Hidden file.\n      2 %a   \"b.txt\"                        line 1\n\nWorking with the Filesystem\n---------------------------\n    vim .                                   Open a filesystem browser in the current directory.\n    k,j <cr>                                Navigate vim's representation of the filesystem, open the selected file.\n    :edit {path - directory name}           Open a filesystem browser in the specified directory. (always recall \":edit .\" or \":e.\")\n    :edit %:h                               Open a filesystem browser in the directory of the current file.\n    :Explore\n    netrw-%                                 Create new files. (% in netrw, etc.)\n    netrw-d                                 Create new directories.\n    netrw-rename                            Rename a file.\n    netrw-del                               Delete a file.\n\nSplit Windows\n-------------\n    <ctrl-w> s                              Split windows horizontally.\n    <ctrl-w> v                              Split windows vertically.\n    <ctrl-w> {s/v} :edit {filename}         Create a split and edit.\n    :split {filename}                       Combo - create a split and edit. (Horizontal.) (:sp {file})\n    :vsplit {filename}                      Combo - create a split and edit. (Vertical.) (:vsp {file})\n    <ctrl-w> w                              Cycle focus between open windows. Also, <ctrl-w> <ctrl-w> (ctrl-\"ww\").\n    <ctrl-w> h                              shift focus to the left.\n    <ctrl-w> j                              shift focus below.\n    <ctrl-w> k                              shift focus above.\n    <ctrl-w> l                              shift focus to the right.\n    :close                                  Close the active window. (:cl), Also <ctrl-w> c\n    :only                                   Keep only the active window. (:on), Also <ctrl-w> o\n    <ctrl-w> =                              Equalize width and height of all windows.\n    <ctrl-w> _                              Maximize height of active window.\n    <ctrl-w> |                              Maximize width of active window.\n    [N]<ctrl-w>                             Set active window height to N rows.\n    [N]<ctrl-|>                             Set active window width to N columns.\n    [ Look up more details on window-moving in the help and check Vim-casts.org ]\n\nTabs\n----\n    :lcd {path}                             Set up the working directory locally for the current window.\n    :windo lcd {path}                       Set up the working directory locally all windows in a tab.\n    :tabedit {filename}                     Open a tab with file {filename}. (:tabe {filename})\n    <ctrl-w> T                              Move the current window into its own tab.\n    :tabclose                               Close the current tab and all of its windows. (:tabc)\n    :tabonly                                Keep only the current tab and all of its windows.\n    [N]gt                                   Go to tab N.\n    :tabnext {N}                            Switch to tab N. (:tabn {N})\n    gt                                      Next tab.\n    :tabnext                                Next tab. (:tabn)\n    gT                                      Previous tab.\n    :tabprevious                            Previous tab. (:tabp)\n\nSwitch to Normal Mode from Insert Mode\n--------------------------------------\n    <esc>\n    <ctrl-[>\n\nSwitch to Insert-Normal Mode from Insert Mode\n---------------------------------------------\n    <ctrl-o>\n\nSwitch to Visual Mode\n---------------------\n    v                       Enable character-wise visual mode. (And return to normal mode - toggle.)\n    <ctrl-g>                Enter Select Mode from visual mode.\n    V                       Enter line-wise visual mode.\n    <ctrl-v>                Enter block-wise visual mode.\n    o                       Go to the other end of highlighted text.\n\nSelection in Visual Mode\n------------------------\n    gv                      Reselect the last visual selection.\n    vit                     Select inside a tag (e.g., (cursor here->)<a>select me</a>) on a line.\n\nUsing a Visual Operator\n-----------------------\n    vU                      Make the selection uppercase.\n    vu                      Make the selection lowercase.\n\nDelimited Text Objects (Begin and end with matching symbols.\n----------------------\n    v<text object>          Enter visual mode and use the following to make a selction of...\n    Remember, text objects can be {motion}s.\n    a) or ab                A pair of (parentheses).\n    i) or ib                Inside of (parentheses).\n    a} or aB                A pair of {braces}.\n    i} or iB                Inside of {braces}.\n    a]                      A pair of [brackets].\n    i]                      Inside of [brackets].\n    a>                      A pair of <angle brackets>.\n    i>                      Inside of <angle brackets>.\n    a'                      A pair of 'single quotes'.\n    i'                      Inside of 'single quotes'.\n    a\"                      A pair of \"double quotes\".\n    i\"                      Inside a pair of \"double quotes\".\n    at                      A pair of <xml>tags</xml>.\n    it                      Inside a of <xml>tags</xml>.\n\nBounded Text Objects (Defined by boundaries.)\n--------------------\n    Remember, text objects can be {motion}s.\n    iw                      Current word.\n    aw                      Current word plus one space.\n    iW                      Current WORD.\n    aW                      Current WORD plus one space.\n    is                      Current sentence.\n    as                      Current sentence plus one space.\n    ip                      Current paragraph.\n    ap                      Current paragraph plus one blank line.\n\nCommand Line Mode\n-----------------\n    :                       Enter the Ex Command mode.\n    /                       Enter the pattern search mode.\n    <ctrl-r> <ctrl-w>       Insert the word under the cursor.\n    *                       /\\<<ctrl-r> <ctrl-w>\\><cr>\n    /<ctrl-r> <ctrl-w>       Search for the word under the cursor.\n\nCommand Line Window\n-------------------\n    q:                      Bring up the window with a history of the Ex commands.\n    k, j                    Scroll through the command line window.\n    <cr>                    Execute the contents of the current line.\n    q/                      Bring up the window with a history of searches.\n    <ctrl-f>                Switch from the command line mode to the command line window.\n\nOperators\n---------\n    >                       Shift (the line?) right.\n    <                       Shift (the line?) left.\n    gUit                    Select text inside a tag and shift it to uppercase (tip 23).\n\nIndentation\n-----------\n    >                       Indent the line (or visually selected text).\n    2>                      Indent the line twice (3> for three times, etc.).\n    >G                      Increase indentation from here to the end of the file.\n    =G                      Autoindet from here to the end of the file.\n    ==                      Indent current line.\n\nEditing\n-------\n    s                       Remove the character under the cursor and enter insert mode.\n    c{motion}               Remove text and enter insert mode. $, l, w\n    ciw                     Remove the current word and enter insert mode.\n    u                       Undo the last change.\n    U                       Undo all changes to the line.\n    <ctrl-r>                Re-do the last undo.\n    daw                     Delete a word (cursor may be located anywhere within the word).\n    dap                     Delete a paragraph.\n    d{motion}               Delete. (Power move, especially with / search.)\n    ~                       Toggle case of the character under the cursor or all visually selected text.\n    g~                      Swap case. (requires motion?)\n    gu                      Make lower case. (requires motion?) guaw = convert a word, guap = paragraph\n    gU                      Make upper case. (requires motion?) gUaw = CONVERT a word, gUap = paragraph, gUgU converts a line.\n\nDeleting (c instead of d to enter insert after the edit).\n--------\n    dh / x                  Delete one character backwards.\n    dl / X                  Delete one character forwards.\n    db                      Delete one word backwards.\n    dw                      Delete one word forwards.\n    dB                      Delete one non-blank word backwards.\n    dW                      Delete one non-blank word forwards.\n    d$ / D                  Delete to the end of the line.\n    d0                      Delete to the beginning of the line.\n    0d$ / dd                Delete the line.\n\nEditing In Insert Mode\n----------------------\n    <ctrl-h>                Delete back one character.\n    <ctrl-w>                Delete back one word.\n    <ctrl-u>                Delete back to the start of the line.\n    <ctrl-r> N              Paste from register N. (Press and hold ctrl-r, then release, then press the number.)\n    <ctrl-r> <ctrl-p> N     Smarter paste from register N.\n    <ctrl-v> Code           Enter a unicode character (expect 3 digits).\n    <ctrl-v> u{Code}        Enter an arbitrary code (e.g., u00bf = ¬ø).\n    <ctrl-v> {nondigit}     Enter a nondigit literally (e.g., a literal tab instead of spaces in case exapandtab is active).\n    <ctrl-k> {char1}{char2} Enter a unicode character via digraph, e.g. <ctrl-k> ?I = ¬ø. View a list of digraphs with :digraphs\n\nUsing the Expression Register\n-----------------------------\n    <ctrl-r> =              In insert mode.\n\nCopying, Cutting, and Pasting (Yanking, Deleting, and Putting)\n-------------------------------------------------------------\n    Regisers are [a..z] for overwriting and [A..Z] for appending.\n    The system clipboard is \"+ (X11 at least).\n    \"{register}             Prefix to specify the register for holding the yank/delete. Defaults to unnamed (\").\n    :reg                    Examine the contents of the registers.\n    :reg \"0                 Examine the contents of the yank register. (Also shows the contents of \"\" (unnamed).)\n    y{motion}               Copy (? ... $, l, w) into the unnamed register. Also copy into the yank register (\"0)!\n    yiw                     Copy a word.\n    yi[                     Copy everything inside the [] braces (cursor should be inside the []).\n    yy                      Copy a line.\n    yyp                     Copy a line and put it (immediately below the current line).\n    yt,                     Copy to the next comma.\n    y$                      Copy to the end of the line.\n    p                       Paste (removed with x, copied with y, for example) after the cursor position.\n    P                       Paste (removed with x, copied with y, for example) before the cursor position.\n    puP / Pup               Paste the other way when you get it wrong...\n    \"\"p                     Paste from the unnamed register (\"\"p == p).\n    \"ap                     Paste from register a.\n    \"0p                     Paste from the yank register (may also be equivalent to the unnamed or another register).\n    xp                      Cut and paste a character - effectively transpose two characters.  \n    diw                     Cut a word.\n    dd                      Cut a line.\n    ddp                     Cut and paste a line (one below the current line) - effectively transpose two lines.\n    v{selection}p           Swap the highlighted portion in visual mode with the contents of (the unnamed) register, and vice versa.\n    \"{register}v{sel}p      Swap the highlighted portion in visual mode with the contents of the register, and vice versa.\n    <ctrl-r>{register}      Insert Mode: Paste from register {register}. (Recall <ctrl-r\"> to get the unnamed!) Useful with Ex commands too!\n\nDefault Registers\n-----------------\n    \"=                      Expression Register\n    \"%                      Name of current file.\n    \"#                      Name of alternate file.\n    \".                      Last inserted text.\n    \":                      Last Ex command.\n    \"/                      Last search pattern (can be set explicitly with :let ).\n\nAddition\n--------\n    N <ctrl-a>                                      Add N to the next number on the line, e.g. 10 -> 20\n    N <ctrl-x>                                      Subtract N from the next number on the line, e.g., 30 -> 20\n\nCompound Commands\n-----------------\n    A           $a\n    C           c$\n    s           cl\n    S           ^C\n    I           ^i\n    o           A<CR>                               # Leverage undo power by finishing lines with {stop} <esc> o\n    O           ko\n\nScreen Redraw\n-------------\n    zz                                              Redraw the screen with the cursor position in the vertical center of the page.\n    z.                                              Redraw the screen with the cursor position in the vertical center of the page.\n    zt                                              Redraw the screen with the cursor position at the top of the page.\n    <ctrl-l>                                        Clear and redraw the screen.\n\nEx Commands\n-----------\n    <ctrl-d>                                        Offer autocompletion suggestions. Tab to cycle through them.\n    :colorscheme <ctrl-d>                           Show all the colorscheme options (tab to cycle through).\n    :help ex-cmd-index                              See the ex-cmd-index for the full list of commands.\n    :{N}                                            Jump to line N.\n    :$                                              Go to the end of the file.\n    :print                                          Print the line. (Abbreviate with :p)\n    :2,5p                                           Print lines 2 to 5. (.,$p prints from the current line to EOF).\n    :%p                                             Print all the lines in the file.\n    :/{pattern1}/+1,/{pattern2}/-1p                 Print all lines between, but not including, those matching patterns 1 & 2.\n    :[range]delete[x]                               Delete specified lines into register x. (e.g., :3d deletes line 3).\n    :[range]yank[x]                                 Yank specified lines into register x.\n    :[line]put[x]                                   Put the text from reigster x after the specified line.\n    :[range]copy{address}                           Copy the specified lines to below the line specified by {address}.\n    :6copy.                                         Copy line 6 to below the current line.\n    :6t.                                            Copy line 6 to below the current line. ( t == copy )\n    :t.                                             Duplicate the current line without using a register (yyp uses a register).\n    :[range]move{address}                           Move the specified lines to below the line specified by {address}. ( abbrev m )\n    :[range]join                                    Join the specified lines.\n    :[range]normal{commands}                        Execute normal mode {commands} on each specified line.\n    :[range]substitute/{pattern}/{string}/[flags]   Replace {pattern} with {string} on the specified lines. (:[range]s/{pattern}/{string}/[flags])\n    :%s/{pattern}/{string}/[flags]                  Do the substitution over the entire file, looking for pattern, etc.\n    :%s/{pattern}/{string}/[flags={g,c,n,&}]        Flags: g=global (all in a line), c=confirm, n=no subs, report number, &=reuse flags from last \"s\"\n    :[range]global/{pattern}/[cmd]                  Execute Ex [cmd] on all specified lines with a {pattern} match.\n    :qall!                                          Quit and discard all unsaved changes in all open buffers.\n    :wall                                           Write all modified buffers to disk. (:wa)\n    :write\n    :wnext                                          Write, followed by \"next.\"\n    :tabnew\n    :split\n    :prev/:next\n    :bprev/:bnext\n    @:                                              Repeat the last Ex command.\n    :normal <cmd>                                   For each selected line, execute the normal mode command <cmd>. (jVG :normal .)\n    :%normal A;                                     Select all modes and run normal \"A;\" (append a semicolon to every line).\n    :%normal i//                                    Comment out every line (.js or .cpp).                                  \n    :delete {register}                              Cut the current line into {register}\n    :yank {register}                                Copy the current line into {register}\n    :put {register}                                 Put the line from {register}\n    :edit!                                          Undo all changes (back to last save?).\n    :sort                                           Sort!\n\nGlobal Commands\n---------------\n    :[range]global[!]/{pattern}/[cmd]               Execute an Ex command on each line that matches a pattern.\n    :[range]global[!]/{pattern}/[range][cmd]        Template is expandable...\n    :g/re/p                                         Print a regular expression globally. ^_^\n    :g/re/d                                         Delete all lines matching a regular expression globally.\n    :[range] vglobal /{pattern}/ [cmd]              Execute an Ex command on each line that doesn't match a pattern.\n    :v/re/d                                         Delete all lines NOT matching a regular expression globally.\n    :g/TODO/yank A                                  Copy all lines with TODO in them into register a (use upper case to append).\n    :g/{/ .+1,/}/-1 sort                            Sort all items between all braces {} in a bufer.\n\nMacros\n------\n    q{register}                                     Start recording a macro to {register} (e.g. \"q\"). Lower-case to overwrite, upper case to append.\n    qq                                              Start recording into register q.\n    q                                               Stop recording.\n    qQ                                              Append additional commands to the macro in register \"q\".\n    q                                               Stop appending.\n    :reg {register}                                 Examine the macro in {register}. (Useful before appending.)\n    @{register}                                     Execute the macro in {register}.\n    @@                                              Execute the most recently *invoked* {register}.\n    N@{register}                                    Execute the macro in {register} N times.\n    :normal @{register}                             Apply the macro to every visually selected line of text (e.g. vG:normal @a)\n    :argdo normal @{register}                       Apply the macro to all open buffers. (Often lead with :edit! to undo file where we recorded the macro.)\n\nVim Script\n----------\n    :let i=0                                        Assign 0 to i.\n    :echo i                                         Print i (not to the buffer).\n    :let i += 1                                     Increment i.\n    <ctrl-r> =i<cr>                                 Insert i into the buffer.\n    :let @a=substitute(@a, '\\~', 'vU', 'g')         Substitute text *inside* the register.\n\nTags\n----\n    <ctrl-]>                                        Jump to a definition.\n    <ctrl-t>                                        Jump back through the tag history.\n    g<ctrl-]>                                       See a list of definitions to jump to. (Then, number and <CR>.)\n    :tselect                                        Show the list of definitions to jump to again (need to <ctrl-]> first).\n    :tnext                                          Jump to the next match without showing a prompt.\n    :tprev, :tfirst, :tlast                         Jump to matches without a prompt.\n    :tag {keyword}                                  Acts like <ctrl-]>. {keyword} features tab completion.\n    :tjump {keyword}                                Acts like g<ctrl-]>.\n    :pop                                            Acts like <ctrl-t>.\n\nQuickfix List\n-------------\n    :make                                           Run make in the shell where the buffer is.\n    :cnext                                          Jump to the next error from a make (next item in the Quickfix list).\n    :cprev, :cfirst, :clast                         Jump to an item in the Quickfix list.\n    :cnfile, :cpfile                                Jump to the first item in the next (previous) file.\n    :cc N                                           Jump to the nth item.\n    :copen, :cclose                                 Open/Close the Quickfix window.\n    :5cnext, :3cprev                                Jump with a count for the number of items.\n    :colder                                         Look at an older version of the Quickfix list (vim stores up to 10).\n    :cnewer                                         Look at a newer version of the Quickfix list.\n    :setlocal makeprg=gmake\\ acquire_data-lib    \n    :setlocal makeprg=cmt\\ make    \n    :setglobal errorformat?                         Check the error format put into the Quickfix list. - %f=filename, %l=line, %m=message\n    :setlocal efm={format}                          Set the format to handle errors vim doesn't know well.\n    :compiler cmt make                              Activte the compiler plugin (set makeprg and errorformat).\n    :args $VIMRUNTIME/compiler/*.vim                Look at the compiler plugins distributed with vim.\n\nLocation List\n-------------\n    :lnext, :lprev, ...\n\nGrepping Externally\n-------------------\n    :grep {pattern} *                               Populate the Quickfix list with the search results (-n flag is automatically present).\n    :grepprg=\"grep -n $* /dev/null\"                 Set what :grep triggers in the external shell. (For example, call ack.)\n    :grepformat=\"%f:%l:%m,%f:%l%m,%f %l%m\"          Format the search results from the external grep triggered by :grep. (See errorformat for more.)\n    :vimgrep/{pattern}/[g][j] {file}                Use vim's built-in search engine (vim regex syntax). {File} cannot be blank. (* for any file in the directory.)\n    :vimgrep/{pattern}/**                           Search through all files in subdirectories recursvely. Navigate in quickfix (use :copen).\n    :vimgrep/{<ctrl-r>/}/**                         Paste the last search from the search register into the pattern for external searching.\n\nAutocompletion\n--------------\n    <ctrl-p> / <ctrl-n>                             From insert mode, to select the \"previous\" and \"next\" items.\n\nAutocompletion Method Table\n---------------------------\n    <ctrl-n>                                        Generic keywords (built from a partial word list using a document scan).\n    <ctrl-x><ctrl-n>                                Current buffer keywords.\n    <ctrl-x><ctrl-i>                                Included file keywords (e.g., #include (c,c++), import (ruby, python), etc.) (Tweak the 'include' setting.)\n    <ctrl-x><ctrl-]>                                Included file keywords.\n    <ctrl-x><ctrl-]>                                Tags file keywords.\n    <ctrl-x><ctrl-k>                                Dictionary lookup - dictionary must be populated (best with :set spell).\n    <ctrl-x><ctrl-l>                                Whole line completion (duplicate an existing line from elsewhere in the buffer - use a few chars to start).\n    <ctrl-x><ctrl-f>                                Filename completion (uses :pwd, so :cd {path} to get a different set).\n    <ctrl-x><ctrl-o>                                Omni completion (we need a plug-in for the language we're using, see compl-omni-filetypes).\n\nAutocompletion Pop-up Menu\n---------------------------\n    <ctrl-n>                                        Use the next match from the list.\n    <ctrl-p>                                        Use the previous match from the list.\n    <down>                                          Select the next match from the word list.\n    <up>                                            Select the previous match from the word list.\n    <ctrl-y>                                        Adopt the currently selected match.\n    <ctrl-e>                                        Revert to the originally typed text.\n    <ctrl-h> (and <BS>)                             Delete one character from the current match.\n    <ctrl-l>                                        Add one character from the current match.\n    {char}                                          Stop completion and insert {char}.\n\nAutocompletion Source Material\n------------------------------\n    :ls!                                            Look at the keywords in the buffer list. (???)\n    :set include?                                   Inspect included (e.g. header) files.\n    :set complete                                   Look at the list of \"locations\" included in the complete commands.\n    :set complete+=k                                Etc. See 'complete' documentation for the include lists and defaults.\n\nSpelling\n--------\n    :set spell / :set nospell                       Show/hide spell checks.\n    [s / ]s                                         Skip back / forward through misspelled words.\n    z=                                              Show suggested spelling replacements.\n    zg                                              Add current word to spell file.\n    zw                                              Remove the current word from the spell file.\n    zug                                             Revert either zg or zw commands for the current word.\n    :set spelllang=en_us                            Also, en_au, en_ca, en_gb, en_nz (try =fr, will prompt for download, etc.)\n    <ctrl-x>s                                       Fix spelling from insert mode (:set spell must already be active).\n\nProgramming\n-----------\n    shift-k                                         Open man page for word under the cursor.\n\nRecipes - Find & Replace Across Many Files\n------------------------------------------\n1. Fully populate the args list (all files).    `:args **/*.txt`\n2. Enable navigation w/o saving.                `:set hidden`\n3. Set the search pattern.                      `/Pragmatic\\ze Vim`\n4. Replace with error suppression.              `:argdo %s//Practical/ge`\n\nRecipes - Clear a Register\n--------------------------\n1. Start and finish a macro with no steps.      `qaq`\n2. Check the register (here - a).               `:reg a`\n\nRecipes - Sort a List\n---------------------\n1. Select the block of items.                   `v{motion}`\n2. Apply the sort (: brings up '<,'>)           `:sort`\n\nRecipes - Use Tags\n------------------\n1. Check to see tags options.                   `:set tags?`\n2. Generate a tags file locally.                `:!ctags -R`\n3. Ignore some noise... (etc.)                  `:!ctags -R --exclude=.git`\n4. Shortcut to regenerate file.                 `:nnoremap <f5> :!ctags -R<CR>`\n5. Set autocommand on save.                     `:autocmd BufWritePost * call system(\"ctags -R\")`\n\nRecipes - Use ack instead of grep for :grep\n-------------------------------------------\n1. Set a different :grepprg                     `:set grepprg=ack\\ --nogroup\\ --column\\ $*`     # May need ack-5.12 on my Mac...\n2. Set the format.                              `:set grepformat=%f:%l:%c:%m`                   # %c to go to the column!\n\nRecipes - Add a \"local\" Dictionary for Project Jargon Spellings\n---------------------------------------------------------------\n1. Turn on spell checking.                      `:set spell`\n2. Set a base language (if needed).             `:setlocal spelllang=en_us`\n3. Set a local spellfile path.                  `:setlocal spellfile=~/.vim/spell/en.utf-8.add`\n4. Set a local spellfile addition.              `:setlocal spellfile+=~/mydir/mysubdir/myfile.utf-8.add`\n5. Add to the second spell file.                `:2zg`\n6. Add to the original spell file.              `:1zg`\n\nRecipes - Change Vim on the Fly\n-------------------------------\n    :set ignorecase / :set noignorecase / :set ignorecase! (toggle) / :set ignorecase? / :set ignorecase& (restore default)\n    :set tabstop=2 (:set ts=2)\n    :set softtabstop=2 (:set sts=2)\n    :set shiftwidth=2 (:set sw=2)\n    :set expandtab (:set et)\n    :set ts=2 sts=2 sw=2 et\n    :bufdo setlocal ts=4\n    :windo setlocal number\n\nRecipes - Customize with .vim Files\n-----------------------------------\n1. Name the file.                               `vim ~/mysettings.vim`\n2. Source it.                                   `:source ~/mysettings.vim`\n3. Syntax is the same as the .vimrc file.\n    set tabstop=2\n    set softtabstop=2\n    set shiftwidth=2\n    set expandtab\n\nRecipes - Filetype Specific Customization\n-----------------------------------------\n1. Edit customizations file (e.g., ~/.vimrc):\n    if has(\"autocmd\")\n      filetype on\n      autocmd FileType ruby setlocal ts=2 sts=2 sw=2 et\n      autocmd FileType javascript setlocal ts=4 sts=4 sw=4 noet\n      autocmd FileType javascript compiler nodelint\n    endif\n2. Cleaner if we use the ftplugin:\n    ~/.vim/after/ftplugin/javascript.vim\n    setlocal ts=4 sts=4 sw=4 noet\n    compiler nodelint\n\nReciples - Change Encoding (e.g. fix Excel exports to csv)\n----------------------------------------------------------\nSee: http://stackoverflow.com/questions/64860/best-way-to-convert-text-files-between-character-sets\n\n    $ file Consumer_Complaints_short.csv\n    Consumer_Complaints_short.csv: Non-ISO extended-ASCII English text\n    $ vim +\"set nobomb | set fenc=utf8 |x\" Consumer_Complaints_short.csv\n    $ file Consumer_Complaints_short.csv\n    Consumer_Complaints_short.csv: UTF-8 Unicode English text\n\nRecipes - search for special characters\n---------------------------------------\nFor example, the \"new feed\" charcter is \"^L\", this can be searched for with:\n\n    /<ctrl-v><ctrl-l>\n"},{"id":1638831600,"title":"Postgres Cheat Sheet","date":"Dec 07 2021","excerpt":" \"Postgres Cheat Sheet\"","img":"blog-headers/postgres.png","content":"\nHere is a quick PostgresDB cheat sheet for navigating throught a Postgresql Database\nI use it frequently and figured others might find it useful.\n\n### Helpful Docs\n* [PGDUMP](https://www.postgresql.org/docs/9.2/app-pgdump.html)\n* [PG_DUMPALL](https://www.postgresql.org/docs/9.2/app-pg-dumpall.html)\n* [CREATEDB](https://www.postgresql.org/docs/9.1/app-createdb.html)\n\n\n## QUICK COMMANDS \n\n| Syntax | Description |\n| ----------- | ----------- |\n| \\c <table-name> | Switch between databases |\n| \\dt | list tables|\n| \\dt+ | list tables|\n| \\dt *.* | List tables from all schemas |\n| \\dn | list table names and owners |\n| createdb demo | create a database named demo |  \n\n \n## BACKUP COMMANDS \n \n| Syntax | Description |\n| ----------- | ----------- |\n| pg_dumpall -h localhost -p 5432 -U postgres -v --globals-only > /path/to/your/file/db.sql | To only dump global options from all databases |\n| pg_dumpall > /path/to/your/file/db.sql | To dump all databases to a file called db.sql |\n| psql -f /path/to/your/file/db.sql postgres | To reload database(s) from a file named db.sql |\n| pg_dumpall -h localhost -p 5432 -U postgres -v --roles-only -f \"/path/to/your/file/db.sql\" | Postgres 8.3 introduced the -f option to denote the file name and -r to only¬† backup roles which makes things a bit more predictable how they behave¬† from OS to OS. |\n| pg_dumpall -h localhost -p 5432 -U postgres -v --globals-only -f \"/path/to/your/file/db.sql\" | If you want to backup all globals which includes tables spaces and user accounts |\n| psql -h localhost -d postgres -U postgres -f \"/path/to/useraccts.sql\" | To restore the accounts on the new server, open up the useraccts.sql file¬† generated and delete all the accounts and stuff you don't want to bring¬† over |\n\n\n## RESTORE  COMMANDS \n \n| Syntax | Description |\n| ----------- | ----------- |\n| psql -d demo -f /path/to/your/file/db.sql | Load db.sql into (freshly created) database named demo |\n| psql -f /path/to/your/file/db.sql | Restore db.sql databases |\n| $ pg_restore -d db_name /path/to/your/file/db.sql -c -U db_user | Restore from custom archive backup file named db.sql |\n\n \n"},{"id":1638831600,"title":"Checking Websockets with curl","date":"Dec 07 2021","excerpt":" \"Checking Websockets with curl \"","img":"blog-headers/webhook.png","content":"\nNaturally the [curl](https://curl.se/) command doesnt allow the ability to curl [websockets](https://en.wikipedia.org/wiki/WebSocket).\nexample:\n\n\n```\n$ curl --include \\\n       --no-buffer \\\n       --header \"Connection: Upgrade\" \\\n       --header \"Upgrade: websocket\" \\\n       --header \"Host: testexample.com:80\" \\\n       --header \"Origin: http://testexample.com:80\" \\\n       --header \"Sec-WebSocket-Key: SGVsbG8sIHdvcmxkIQ==\" \\\n       --header \"Sec-WebSocket-Version: 13\" \\\n       http://testexample.com:80/\n\n```\n\nYou can copy this and replace testexample.com with the hostname of your choice and you'll see all the websocket data you need.\n\n\nCredits and shoutout to this [Gist](https://gist.github.com/htp/fbce19069187ec1cc486b594104f01d0) on GitHub for the original snippet.\n"},{"id":1631055600,"title":"Magic Wormhole","date":"Sep 08 2021","excerpt":" \"smooth file transfer through terminal.\"   ","img":null,"content":"* [A wormhole site](https://wormhole.app/)\n* [Magic Wormhole Github](https://github.com/magic-wormhole/magic-wormhole)\n* [Magic Wormhole Docs](https://magic-wormhole.readthedocs.io/en/latest/welcome.html#installation)\n\n\n3 years ago I was looking to test a new app called magic wormhole.\nI needed to find a way to send 8gb of data and copying it from one usb 2.0 seemed to slow. I didn't want to upload all of that to my google drive or OneDrive accounts and then re-downloaded them. As a linux user I wanted to find a solution as simple as rsync to copy files, maybe get a progress bar to find out when its going to be done, and something simple to use. The internet introduced me to magic-wormhole.\n\nMagic Wormhole does one thing: Get things from one computer to another, safely. I was able to move the 8gb of files from one computer to another in my home and fell in love with the tool. At the time there were connectivity issues and a sluggishness and slowness to it, so  I stopped using it. Today I had found a sharing site that provided old dreamcast games that revolutionized my childhood and gaming. I need to get in a few rounds of Project Justice, play and beat Chu Chu Rocket, and finally beat Chicken Run!. All the files I have now are saved on a macbook now which I need to move to my laptop and eventually to a blank dvd :). I figured since I have used it once, lets find out what the magic-wormhole developer(s) have been up to, and to my surprise, I get perfection. A professionl grade github repo, which, to developers who have been using Github, is a major turn on.\n\nWith a list of 50 contributors and 80+ companies using it I was so excited to see this little project grow up. I ran a quick brew install and apt install from my macbook to my lenovo thinkpad and boom I was on my way. With the simplicity and style of rsync  I was able to copy these games with ease, watch a cool progress bar, and remind myself that Terminal is king!  \n\nCheck out the Magic-Wormhole application and try using it to copy files SIMPLY and SECURELY!\n\nQuote: ‚ÄúLife is really simple, but we insist on making it complicated.‚Äù\n"},{"id":1611961200,"title":"Infrastructure security with Wazuh and SIEM","date":"Jan 30 2021","excerpt":" \"SIEM and Wazuh security\"","img":null,"content":"\n\nThe past year of 2020 has introduced and exposed a lot of very scary thing to the world. A global pandemic, political unrest, and the [2020 United States federal government data breach](https://en.wikipedia.org/wiki/2020_United_States_federal_government_data_breach). CyberSecurity and protection is, and has been, at an all time high. The [Solar Winds attack](https://www.csoonline.com/article/3601508/solarwinds-supply-chain-attack-explained-why-organizations-were-not-prepared.html) also leaves people and businesses frightened and worried about their own security. SIEM (or Security and event management) is one of the most popular approaches to making sure you can stay ready and protected to help prevent or mitigate attacks in the future. There are a lot of SIEM platforms for security like IBM QRadar or McAfee Enterprise Security Manager, but today, I wanted to shine some light on a free and open source solution known as Wazuh. Having it be open source and free to setup should allow you to bring it up when speaking to your team about new resolutions for your company moving forward, or at least be in the conversation for best security platform. Is it the Lebron James or Michael Jordan of security? You can decide after reading.\n\n\n# What is Wazuh\nWazuh, which a pronounce 'wah-zoo' is an open source and enterprise-ready security monitoring solution for threat detection, integrity monitoring, incident response and compliance. It has so many features as an open source application that I consider it the \"Full\" platform. I want to break down its features, ways to set it up, and how you can use it in your dev or business environment.\n\nI'm going to my best here to explain its features and how it may help you with examples that may help better understand. At times when reading about features on high class software or enterprise ready solutions I get lost with tech jargon and spend more time learning acronyms and less time learning about products or software, or news for that matter.\n\n# Security Analytics\nLive and real-time monitoring you can check daily to make sure that there aren't any suspicious people actively trying to log into your servers or changes to an app you built aren't being made without you knowing about it. The dashboard is colorful and nice as well.\n# Intrusion Detection\nIntrusion Detection is similar to malware scans and checking to make sure your app isn't making hidden files or doing things its not supposed to. If you've ever been afraid that the picture you downloaded isn't a virus, this feature will help tell you that.\n# Log Data Analysis\nThis features helps read logs and can build graphs that help you see how many times there were errors in a file. Want to see how many times your apache web app or php web app was being hit before it crashed. This features will help put that in a graph for you.\n# File Integrity Monitoring\nWhen working on team projects there are normally more than one person editing files or making changes. Who changed the permissions to the htpassword file that should be owned by apache? This feature helps monitor files to find out who changed what files or what application modified the files that it needs to.\n# Vulnerability Detection\nSoftware and packages get updated so much these days that its hard to keep up. When the solardwinds attack happened CVE's (or common Vulnerabilities and exposure fixes) are created to help fix any software that could affect your system. Vulnerability Detection will help you know that the packages on your system are up to date\n# Configuration Assessment  \nTo better secure an application or a system, there are security policies that can be put in place. This feature helps make sure hardening guides and security policies and standards are in place or need to be changed.\n# Incident Response\nStuff happens, and when it does, actions should be put in place. The Incident Response feature helps with actively performing countermeasures. Need to make sure that the IP address that was attacking your system was blocked? This will help remind you if thats been done or not.  \n# Regulatory Compliance PCI/STIG compliance\nIf your managing a database that saves user information or credit card data because your ideas on those t-shirts with cats on it is selling like crazy, the Regulatory Compliance features in Wazuh will help you stay up to date with the latest PCI requirements to meet security standards. Miss Stewart's credit card information wont be leaked and she can rest assure that she can buy more products from your site. Maintain security by implementing multiple types of Security Standards and practices with this features.\n# Cloud Security\nThe cloud security features in Wazuh allows you to pull security data from big named cloud providers like Google or AWS and help provided rules to asses how your environment is configured.\n# Container Security  \nWith containers capitalizing the market its important to make sure that all your containers, whether they be docker or another container platform, have some kind of detection to report and help prevent threats from hackers connecting to your containers that hold your data.\n\nSpeaking of containers and Wazuh, Lets work on setting up a Wazuh cluster with some popular container platforms. In these examples ill be using the following software versions.\n\n* Ubuntu 20.04\n* Docker version 19.0.3.8, build afacb8b7f0.\n* kubernetes v1.11.0+d4cacc0\n* openshift (oc) v3.11.0+d4cacc0\n\n# Setting up Wazuh\nMany companies are currently using, or have migrated to a container based architecture like OpensShift or Kubernetes to manage their infrastructure. Here is a quick guide on setting up a Wazuh kubernetes cluster, along with a way to setup and test it in your local environment with docker-compose. For a deeper dive on how they setup the docker containers involed in wazuh, you can check out their [Github repo](https://github.com/wazuh/wazuh-docker).\n\n\n\nHaving at least two Kubernetes nodes in order to meet the podAntiAffinity policy.\n\n\nDeploy\nDeploy Kubernetes\n\nFollow the [Official guide](https://documentation.wazuh.com/4.0/deploying-with-kubernetes/kubernetes-conf.html) to deploy a Kubernetes Cluster there are a few pre-requisites before deploying.\nOnce the pre-requisites have been met you can now clone the wazuh repo.\n\n$ git clone https://github.com/wazuh/wazuh-kubernetes.git\n$ cd wazuh-kubernetes\n\nOnce you cd into the wazuh dir you can get the entire setup running with one single command.\n\n$ $ kubectl apply -k .\n\nIf you wanted to take it setup by step you can remain in the same dir and run the following commands and make necessary system changes as needed.\n\n#Deploy wazuh's elastic stack\n$ kubectl apply -f base/wazuh-ns.yaml\n$ kubectl apply -f base/aws-gp2-storage-class.yaml\n\n$ kubectl apply -f elastic_stack/elasticsearch/elasticsearch-svc.yaml\n$ kubectl apply -f elastic_stack/elasticsearch/elasticsearch-api-svc.yaml\n$ kubectl apply -f elastic_stack/elasticsearch/elasticsearch-sts.yaml\n\n# Deploy Kibana and Nginx configs\nIn case you need to provide a specific domain name or configure cloud based parameters\nyou can make those changes in the nginx-svc and nginx-deploy.yaml files that are in the\nelastic_stack/kibana dir.\n\n$ kubectl apply -f elastic_stack/kibana/kibana-svc.yaml\n$ kubectl apply -f elastic_stack/kibana/nginx-svc.yaml\n\n$ kubectl apply -f elastic_stack/kibana/kibana-deploy.yaml\n$ kubectl apply -f elastic_stack/kibana/nginx-deploy.yaml\n3.4. Deploy Logstash\n\n# Deploy logstash for log monitoring\nTo deploy logstash for log detection, retention, and management you can\ndeploy the following.\n$ kubectl apply -f elastic_stack/logstash/logstash-svc.yaml\n$ kubectl apply -f elastic_stack/logstash/logstash-deploy.yaml\nDeploy Wazuh\n\n# Setting up the wazuh cluster\nGetting the final bits and peices of the wazuh cluster up, or making\nchanges to system requirements or ip addresses you can make the changes to the .yaml files in the wazuh_managers dir and deploy the following.\n\n$ kubectl apply -f wazuh_managers/wazuh-master-svc.yaml\n$ kubectl apply -f wazuh_managers/wazuh-cluster-svc.yaml\n$ kubectl apply -f wazuh_managers/wazuh-workers-svc.yaml\n\n$ kubectl apply -f wazuh_managers/wazuh-master-conf.yaml\n$ kubectl apply -f wazuh_managers/wazuh-worker-0-conf.yaml\n$ kubectl apply -f wazuh_managers/wazuh-worker-1-conf.yaml\n\n$ kubectl apply -f wazuh_managers/wazuh-master-sts.yaml\n$ kubectl apply -f wazuh_managers/wazuh-worker-0-sts.yaml\n$ kubectl apply -f wazuh_managers/wazuh-worker-1-sts.yaml\n\n\nOnce you have them all deployed you can verifying the deployment\nand make sure all the pods and containers are running properly with this command.  \n\n# Checking Namespaces\n$ kubectl get namespaces | grep wazuh\n\n# Checking Services\n$ kubectl get services -n wazuh\n\n# Checking Deployments\n$ kubectl get deployments -n wazuh\n\n\n# DOCKER\nIf your not familiar with the complexity of kubernetes you can also spin up\na wazuh cluster using a docker-compose file. This works in a production environment that doesn't use container based architectures like kubernetes or openshift as well. I've set this up for a few different businesses that have utilized it as a full stack application security suite.\n\nTo get the docker-compose.yml file on your system:\n\n$ curl -so docker-compose.yml https://raw.githubusercontent.com/wazuh/wazuh-docker/3.9.5_7.2.1/docker-compose.yml\n\n\nTo get the full Wazuh repository:\n$ git clone https://github.com/wazuh/wazuh-docker.git -b 3.9.5_7.2.1 --single-branch\n\nTo start the Wazuh stack, which includes Wazuh, elasticsearch, and nginx, you can do the following.\n\n$ cd wazuh-docker/\n\nYou can start the cluster with docker by running this command:\n$ docker-compose up -d\n\nA good warning when spinning this up is to fine tune the elasticsearch container because java. Elasticsearch can be quite resource heavy so fine-tuning the ES_JAVA_OPTS memory variable ex. \"ES_JAVA_OPTS=-Xms1g -Xmx1g\"\n\n# Container security - STIG\nMany companies use STIG's to help with implementing CVE's so they can stay up to date with security threats. That last sentence was something you would probably read on a business page and get confused so let me break that down. STIG stands for Security Technical Implementation Guide, which is a set of standards required to meet security protocols for a server so that it wont be affected by different viruses in the world. Many times STIG checks will let you know if a package on your server is out of date or needs to have a specific version that will secure it from specific security attacks. CVE's are Common Vulnerabilities and Exposures which are what get created when major viruses affect different platforms, applications, or businesses. Naturally when you hear about something like the [Solarwinds Hack](https://www.theverge.com/2020/12/21/22194183/intel-nvidia-cisco-government-infected-solarwinds-hack) that plague big businesses there is typically a CVE created that many security platforms implement to secure their servers.\n\n# SCAP scanner and evaluations\nSCAP, or Security Content Automation Protocol is an expression used for changing security data in a standardized and human readable format. Once you setup wazuh or have it running proper it may feel intimidating but that's what this itty bitty blog is about.\n\nFor a a setup of Wazuh using ansible check out [this playbook ](https://github.com/tmeralus/ansible-role-wazuh-setup) \n"},{"id":1610578800,"title":"Git vs Github and Pokemon","date":"Jan 14 2021","excerpt":" \"understanding what they are and how to remember the difference\"","img":null,"content":"## Git vs Github\n### Understanding what they are and how to remember the difference\nThere are tons of classes in college or online that mentioned using git and Github for programming and keeping track of your code. There are also hundreds of people who try to break it down so you know the difference. This is one of the hundreds. What is git? What is Github? Why do they have different names? How can I understand it so I no longer get confused. Lets break it down with understanding and Pokemon.\n\n### What Is Git?\nGit was First developed back in 2005, Git is an extremely popular Version Control System that has become the heart of many large and popular software projects. Git is something that is maintained on your local system and gives you a self-contained record of changes made in your projects. It doesn't need internet access to use or manage, except to download it.\n\nIf we compared it to other version control systems(from older articles and little experience with bitbucket), Git is responsive, easy to use, and free. Git has been  designed to work well with text files which is great because, lets face it, isn't all code written in a text file of some sort? A specific feature that pulls many people into git is in branches. Branching let you create subsidized local branches in your code. This allows you to try out new ideas, remove tested features of your code, set aside pieces of code to be saved or pushed to master, etc. To better explain that, branches would allow you to create separate versions of your pokemon game from the jump. Now when you \"play\" your pokemon game, you can play with the charmander branch, or the squirtle branch, or the bulbasaur branch. So to break it down, Git is a high-end version control system. Now we have another thing to learn. What is version control.\n\n### What is Version Control?\nDevelopment projects don‚Äôt just come out of nowhere, they are created line by line. Version control allows you to manage and organize your development strategies. Lets say your about to walk into a gym and beat a gym leader in pokemon but you want to go back to the store and buy more potions for your charmander and the sandshrew you picked up. You can save the game in the current state with money in your pocket and pokemon with no potions. Now you can run to the store and buy 10x potions and save your game in a different save location. This will create 2 saved games. One with your pokemon. money, and no potions, we will call that your main branch or your 'main-version'. Another save file has your pokemon, no money, and 10 potions, we will call that your 'health-branch'.  No you can test some trial and error by going into the gym with 0 potions in your main-branch and see if the potions were needed to get to the boss and obtain the gym badge. If that doesnt work out for you, you can use your version control (or saved state file) and run into the gym with 10x potions.\nVersion control is like a savings program for your project. By tracking and logging the changes you make to your potions or money in pokemon, it would be the same as making changes to files you update over time. A version-control system gives you the power to review or even restore earlier versions, just like going loading back and forth through your game saves. Version control takes snapshots of every revision to your project just like a gameboy saves your data.\n\nThere are many times when you have multiple saves because you didnt know which pokemon to choose from in the beginning of the game. If you wanted to play with all three of them, you can use version control to save different versions of your game (or branches). This example would be like having a water-branch, fire-branch, and grass branch. You can play the game three different ways, and run it in three different styles. Now that we understand git and version control. Lets talk about Github.\n\n### What Is Github?\nNow that we are following my example and have multiple save files of pokemon, how do we share that with friends who want to help test out which file is best to beat the game? In comes Github. Github is a git repository hosting service. It is a cloud based platform that allows you to host your projects online and share them with others, or to have a single place to store and back them up.\n\nIn our example lets say your friends have heard of your progress in your pokemon game but want to only see the water-branch save file and see where your squirtle has been up to. With Github you can upload all your saves to Github and let people download (or pull) your save file and play you game as squirtle. If they found that they can help you or want to contribute to your game by beating a gym for you or finding a hack in the game to get 99x master balls, they can modify their water-branch version of the game and save it(or push) back to Github. Github allows you to look at the changes they made and choose if you want to combine your save file with their save file (merging).\n\n### Understanding with code\nLets try and loop that example back to code. Lets say you have a simple html site that has a list of every active player on every NBA basketball team. If someone wanted to help you get every players name for the Los Angeles Lakers, they can pull your site down from Github, add the names for you, and then push up the changes to your original site location on Github. This would be called creating a pull request. If they wanted to take your site and use it for something completely different, they can take the current state of your site and download it for themselves to use. This would be called a (fork). That would be the same as someone taking your saved Charmander-branch game and continuing the game from where you left off.\n\n### Differences between the two.\nUnlike git, Github is an exclusive cloud based platform. It is a for-profit platform-as-a-service. It allows you to create repositories for free, and utilize most of its features for free which makes it one of the most popular options for people to store their projects or share their work with others. Github also expands git's features with a graphic interface. It has built in features for adding tasks, to-do lists, write discussions about issues and solve them with others, or have a timestamp for when changes were made to your code or your game saves from anywhere in the world. If you were to lose your game save on your gameboy or drop water onto your laptop, you can rest assure that your information is saved in a database in a Github repository.\n\n### Wrapping it up\nThis explanation for git vs Github should be understood a bit more now.  \nI'm hoping that my explanation will help remind you in the future when someone asks you if you have ever used Github. If your a person who only likes keeping your save files on your gameboy and don't have a Github account to share your save files, then you probably don't have a Github account or used Github. But if you have a project, or game, and have multiple saves for the project saved in different branches then you are familiar with git, or saving a video game.\n\n### Other hosting options\nYou can use other repository hosting services like BitBucket, SourceForge, or Gitlab. All those other options provide hosting options, built in security and management features, and tons of other things for helping you with your project. Most of them give you options to import you code directly into Github.\n\n\nIf the pokemon analogy doesn't make sense to you then maybe you should try catching all of the original 151 pokemon and find a way to share your experience with me and others.  \n"},{"id":1604444400,"title":"Securing your piece of the internet","date":"Nov 04 2020","excerpt":" \"Open SSL and https security\"","img":null,"content":" \nThe Internet has become the number one resources for news, information, events, and all things social. As most people know there are many ways to create a website of your own and capture your own piece of the internet to share your stories, ideas, or even things you like with others. When doing so\nit is important to make sure you stay protected on the internet the same way you would in the real world. There are many steps to take in the real world to stay safe, however, in this article we will be talking about staying secure on the web with an ssl certificate.\n\nOpenSSL is a command line tool we can use as a type of \"Bodyguard\" for our webservers and applications. It can be used for a variety of things related to HTTPS, generating private keys and CSR's (certificate signing requests), and other examples. This article will break down what OpenSSL is, what it does, and examples on how to use it to keep your website secure. Most online web/domain platforms provide ssl certiicates for a fixed yearly price. This method, although it takes a bit of technical knowledge, can save you some money and keep you secure on the web.\n\n* For example purposes we will use [testmastersite.com](testmastersite.com) for commands and examples\n\nHow this guide may help you:\n\n* Using OpenSSL to generate and configure csr's\n* Understanding SSL certificates and their importance.\n* You can learn about  certificate signing requests (CSRs)\n* You may learn how to create your own CSR and private key\n* You can learn about OpenSSL and its common use cases\n\n# Requirements\n* a linux based OS\n* comfort with command line tools\n\n\n## OpenSSL\nThe first thing to do would be to generate a 2048-bit RSA key pair on your machine. This pair i'm referring to is both your private and public key. You can use a list of tools online to do so, but for this example we will be working with [OpenSSL](https://www.openssl.org/).  \n\n## What are SSL certificates and who cares?\n According to [GlobalSign.com](https://www.globalsign.com/en/ssl-information-center/what-is-an-ssl-certificate) an SSL certificate si a small data file that digitally binds a cryptographic key to an organaizations details. When installed on a webserver, it activates the padlock and the https protocol and allows secure connections from a web server to a browser. Let me break that down for you. An ssl certificate is like a bodyguard for your website. To confirm that a site is using an ssl you can typically check that the site has an https in the url rather than an http string in the name. the \"\" stands for Secure.\n\n* Example SECURE Site: https://www.linuxjournal.com/\n* Example UNSECURED Site: http://www.linuxjournal.com/\n\nSSL security is used to secure credit card transactions, data transfers and logs, and secure browsing in general. SSL's help secure all types of information being transferred over the internet. They provide a trust between users and your site or application. it ensures them that they are on a site that has a bodyguard and can protect their data when they are buying things online or creating an account in your app. THe PCI industry ([Payment Card Industry](https://www.pcisecuritystandards.org/)) requires it as a standard for anyone looking to create an application or site that processes credit card data. This certificate can help prevent hackers from penetrating your website and pulling login information or grabbing credit card data from your databases. In the same sense it keeps shady looking people who might have intentions of stealing information or corrupting your website from entering your business that you put money, time, and work into.\n\nA few other examples of why ssl's are important are that SSL's provide authentication. When sending\n* SSL Provides Trust\n* SSL is required for PCI Compliance\n\n## What are CSR's and why are they important.\nIf you want to get an SSL certificate from a credible CA (certificate authority) you need to generate a CSR.\nA CA, or certificate authority, is an entity that provides digital certificates for you. Lets Encrypt is a one of the most popular examples of a CA.\n\nIf you want to create an SSL certificate from a certificate authority (CA), you have to generate a certificate signing request (CSR). A CSR consists of the public key and additional information needed for the certificate. Both of these are merged into the certificate when it's signed.\n\nWhenever you generate a CSR, you'll be prompted to setup information for the certificate. The prompts and information requested are the Distinguished Name(DN), Common Name (CN), and Fully Qualified Domain Name (FQDN) for the host (testmastersite.com) that's getting the certificate.\n\nHere is an example of the information prompt:\n\n---\nCountry Name (2 letter code) [AU]:US\nState or Province Name (full name) [Some-State]: Florida\nLocality Name (eg, city) []:Miami\nOrganization Name (eg, company) [Internet Widgits Pty Ltd]:Test Masters\nOrganizational Unit Name (eg, section) []:Security Division\nCommon Name (e.g. server FQDN or YOUR name) []:testmastersite.com\nEmail Address []: admin@testmastersite.com\n\nNote: An optional challenge password prompt will show up as well.\n\n\n## Creating a Self-Signed Certificate\n\nOnce installed we can generate bot ha public key and private key with one command.\nTo generate a public and private key with a certificate signing request (CSR), run the following OpenSSL command:\n\nopenssl req ‚Äìout testmastersite.csr -new -newkey rsa:2048 -nodes -keyout testmastersite.key\n\nThis command creates the following from scratch.\n* The req -out creates the required CSR an an output.\n* Creates a CSR named testmastersite.csr (you can change the name to whatever you like )\n* Creates a 2048-bit private key named testmastersite.key (can also be changed)\n\nboth keys are required for creating the SSL which I will talk about in the next step.\n\n## Creating A Self-Signed SSL Certificate vs CA-signed Certificates\nNow that the groundwork is completed you can create an ssl certificate. As stated before these certificates will help block bad actors from accessing private and critical data on your website or application so these next steps is where the fun begins. You can issues your own self-signed certificate, however, A self-signed certificate is a certificate that is signed with its own private key.\n\nSelf-signed certs can be used to encrypt data just as well as any CA-signed certificates, but your users will get warnings that says that the certificate is not trusted by their computer or browser, which might scare them away. With that being said you should only use self-signed certs if you do not need to prove your applications identity to its users. Examples would be things like blog sites, or non-production sites. CA-certificates are highly recommended for things like E-commerce sites that have people process payments or applications that save users days. Here are steps for obtaining a free CA-certified cert and creating your own self-signed certs.    \n\n## Generate a Self-Signed Certificate from existing keys\nUse this method if you want to use HTTPS (HTTP over TLS) to secure your personal site and don't require it to be signed by a CA.\n\nopenssl x509 -signkey testmastersite.key -in testmastersite.csr -req -days 365 -out testmastersite.crt\n\nThis command creates a certificate named testmastersite.crt from the previous key and csr that we created earlier. The -signkey flag signs the key. The x509 flag is used to create an  X509 certificate. The -days 365 flag sets the expiration for the certificate.  you now have three files you've created.\n\n* The testmastersite.key (key file used for reating an ssl cert)\n* The testmastersite.csr (certificate signing request file used to create an ssl cert)\n* The testmastersite.crt ( the SSl certificate )\n\n\n## Obtain a Free TLS Certificate from Certbot\n[Let's Encrypt](https://letsencrypt.org/) is a trusted platform that can issue signed certificates which are valid for 90 days. You can always renew them yourself and have them remain valid indefinitely. Lets Encrypt suggests a manual tool that can be used called [certbot](https://certbot.eff.org/) that we will use to obtain the CA-signed cert.\n\nThere are a few requirements needed for renewing the cert with certbot.\n\n* a running website that is already online and hosting (our example again is testmastersite.com)\n* an open port 80\n* The DNS for the hostname you are requesting must resolve to the appliance.\n* The appliance must be able to reach Let's Encrypt on TCP 443.\n* Let's Encrypt must be able to reach the appliance on TCP 80.\n\n### Install Certbot\nTo install and setup cerbot to create the CA signed certificate you can follow the steps on the [certbot](https://certbot.eff.org/) website.  \n\n\n## Apache SSL configuration example and use case\nYou can now take these certs and place it in your specified ssl cert directories. An example would be Apache's main configuration file is typically named httpd.conf or apache2.conf. inside the config files you can find where apache has configured the SSL cert location\n\n<VirtualHost 192.168.0.1:443>\n    DocumentRoot /var/www/html2\n    ServerName testmastersite.com\n        SSLEngine on\n        SSLCertificateFile /path/to/testmastersite.crt\n        SSLCertificateKeyFile /path/to/testmastersite.key\n        SSLCertificateChainFile /path/to/testmastersite.crt\n    </VirtualHost>\n\nYou can change these locations so that to wherever you'd like to.  \n    SSLCertificateFile is your testmastersite.com certificate file (named testmastersite.crt).\n    SSLCertificateKeyFile is the .key file generated when you created the CSR (named testmastersite.key).\n    SSLCertificateChainFile is the testmastersite.com certificate file (named testmastersite.crt)\n\n    Common issues: If the SSLCertificateChainFile directive does not work, try using the SSLCACertificateFile directive instead.\n\nThe best place to put your ssl keys and certs that you've created that is recommended on a linux machine is\nthe /etc/ssl/certs/ directory\n\nIf you move the 3 files, the csr, key, and crt files into the /etc/ssl/certs directory your apache configuration should look like this:\n\n<VirtualHost 192.168.0.1:443>\n    DocumentRoot /var/www/html2\n    ServerName testmastersite.com\n        SSLEngine on\n        SSLCertificateFile /etc/ssl/certs/testmastersite.crt\n        SSLCertificateKeyFile /etc/ssl/certs/testmastersite.key\n        SSLCertificateChainFile /etc/ssl/certs/testmastersite.crt\n    </VirtualHost>\n\n\nTo test that your ssl's are in the right place you can run this command\n\napachectl configtest\n\nIf the test completes successfully you can restart apache with these commands\napachectl stop\napachectl start\n\n\n## Verify your keys manually\nAs we have already mentioned, it would be wise to check the information provided in the CSR before applying for a certificate. Use the following commands to verify your certificate signing request, SSL certificate, and key:\n\nThis command will verify the CSR and display the data in the CSR\n\nopenssl req -text -noout -verify -in testmastersite.csr\n\n\nThis command will verify the key and its validity.\n\nopenssl rsa -in testmastersite.key -check\n\n\nIf you want to check the certificate and get information like the expiration date you can use this command.\n\nopenssl x509 -in testmastersite.crt -text ‚Äìnoout\n\n\n## Testing new cert with Digicert SSL Installation Diagnostic Tool\nDigicert has a free online tool called [DigiCert¬Æ SSL Installation Diagnostics Tool](https://www.digicert.com/help/) that can help you confirm your ssl cert and its information once you have it applied and running.\n\n\n## Renewing Certificates    \nNow that you have your ssl and set it to expired in 365 days you can renew it before it gets expired. A rule of thumb (for security purposes) is to not use old CSR's when renewing certificates. You should always generate a new csr and key when renewing a certificate.\n\nAlso, it is recommended to renew an SSL certificate before the expiration date. Otherwise, a new certificate purchase will be required.\n\n\n## In Conclusion\nThese examples cover only a few ways to deal with ssl certificates and how people use them. There are many of instances of how ssl are used. Feel free to suggest other use cases in the comments to share how you or your organization works with SSL certificates.\n"},{"id":1602802800,"title":"Ubuntu Dual Hard drive setup","date":"Oct 16 2020","excerpt":" \"Installing Ubuntu on a laptop\"","img":null,"content":"\n## Installing Ubuntu with Two Hard Drives\n\nMany computers are these days come with two hard drives, one ssd for fast boot speeds, and one that can be used for storage. My Dell G5 gaming laptop is a great example with a 128gb NAND ssd and a 1tb SSD.\nWhen building out a linux installation I have a few options. Option 1: Follow the steps and install Ubuntu on one ssd hard drive for quick boot times and better speed performance when opening files or moving data. Then mounting the second drive and copying files to it when I ant to backup files or need to move files off the first drive. Or Option 2: install Ubuntu on an older hard drive with more storage but slower start up speeds and use the 128gb as a small mount point.\n\nHowever, as most Linux users are aware, Solid Sate drives are much faster and files, folders, and drives on a Linux system all have mount points that can be setup with ease.\n\nIn this article we‚Äôll go over how to install Ubuntu Linux with separate /root and /home directories on two seperate drives ‚Äì with root folder on the SSD and home folder on the 1TB hdd. This allows me to leverage the boot times and speed of the 128gb ssd and still have plenty of space to install steam games or large applications.\n\nThis guide can also be used for other use cases as well. An example would be old or cheaper laptops that dont have hard drives with high RPM spinning ssd's. If your computer is a bit on the old side (and has an sd card slot) but you want to utilize faster boot times you can go out and buy an sd card and install the /root partion onto that for quick boot times, and the /home partition on the main drive for storage. This guide, like Linux can be used for many other use cases as well.\n\n## Prerequisites\n* Latest Ubuntu Iso Image\n* [Etcher USB imaging tool](https://www.balena.io/etcher/)\n* USB storage drive with at least 4gb\n\n## Making a bootable USB disk\n\nin this guide we will start by downloading the latest version of Ubuntu Linux, our distro of choice. You can choose other distros, but the images and steps may vary. The Ubuntu version at the time of this guide is 20.04.1. Once you have the iso file downloaded you can then download the [Ether USB imaging tool](https://www.balena.io/etcher/). I have found this to be the quickest and most straightforward easy-to-use tool for creating bootable usb images on any operating system.\n\n Once Etcher is install you can quickly choose \"Select Image\" and find the Ubuntu Iso file you just downloaded and select it. Insert your usb drive and Ether should auto detect if it its the only usb drive connected to your machine. From there you can just click \"Flash\" button and Etcher will handle the rest of the disk creation process. Once completed you can safely remove the usb and use this to install Ubuntu on your computer with dual hard drives.\n\n\n## Setting up BIOS, configuring the boot order\nTo boot into Ubuntu you'll have to configure the BIOS on your computer. You may need to change the boot order to point to USB so that when you boot up your computer next time it boots into the Ubuntu live USB. To get into the BIOS, reboot with the USB in, and press the correct key (for Dell computers you can press F12). Find where the option is to enable booting from USB and enable it.\n\nIf your PC does not support booting from USB, burn the Ubuntu iso image to a DVD. and change the boot order to boot from CD/DVD first. Once we finish the installation you should change the boot order to boot into the ssd hard drive.\n\n### Installation\n\nWhen Ubuntu first loads, the welcome screen appears with two options. Select the ‚ÄúInstall Ubuntu‚Äù button.\n\n![Install Option](/assets/blog/hdd-setup/install-options.png)\n\nThen choose your language (English) to continue.\n\n![Choose Language](/assets/blog/hdd-setup/choose-language.png)\n\n\nOn the next page the installation will ask about updates and other software. These options can be skipped if need be. They don't affect the this guide but can be helpful with specific audio codecs and drivers needed for your machine.\n\n![Update Options](/assets/blog/hdd-setup/update-options.png)\n\nAfter choosing or selecting both boxes in the ‚ÄúPreparing to install Ubuntu‚Äù page, it will be time to select the installation type. There are many. However, with this tutorial the option required is the custom one. To get to the custom installation page, select the ‚Äúsomething else‚Äù box, then click continue.\n\nThis next step will point you to the Installation type option.\n\n![Something Else](/assets/blog/hdd-setup/something-else.PNG)\n\n It will show any and all disks that can install Ubuntu. If two hard drives are available, they will show up here. If an SD card is plugged in, it will also show up.\n\n\n### Partition Setup for Root / dir\nSelect the hard drive that you plan to use for the root file system, in this example it will be the 128gb ssd. If there is already a partition table on it, the editor will show partitions. Delete all of them, using the tool. If the drive isn‚Äôt formatted and has no partitions, select the drive, then click ‚Äúnew partition table.‚Äù Do this for all drives so that they both have partition tables. These steps have options for formatting the hard drives as well, which should be done.\n\n![Format drives](/assets/blog/hdd-setup/hard-drive-home.PNG)\n\nNow that both drives have partition tables (and partitions deleted), the configuration can begin. Select the free space under drive one, then click the plus sign button to create a new partition. This will bring up the ‚ÄúCreate partition window.‚Äù\n\n### Boot Drive UEFI setup\nWith my Dell G5-5587 laptop I am using [UEFI mode](https://wiki.ubuntu.com/UEFI/SecureBoot) so with this root drive I will be creating a boot drive and select \"/boot\" as the mount point for this partition as well.\n\n![Boot Drive](/assets/blog/hdd-setup/boot-partition.PNG)\n\n### Swap Storage\nIf you require Swap storage, create another partition on the drive before making the partition used for root \"/\". This can be done by clicking the ‚Äú+‚Äù (plus) button, entering the desired size (1024 for 1gb, 2048 for 2gb), and selecting ‚Äúswap area‚Äù in the drop-down.\n\n![Swap Size](/assets/blog/hdd-setup/swap-partition.PNG)\n\n### Root Drive setup\nOnce you have those selections setup (swap drive is optional) you can use the rest of the drive for the root partition. Go to the ‚ÄúMount Point‚Äù drop-down menu. Select / as the mount point, then the OK button to confirm the settings.\n\n\n### Partition Setup for Home /home dir\nFor the second drive select /home as the mount point. This will allows your home folder to be set on the 1tb hard drive. You will be able to install Steam and download games, or download files and documents from the internet and have it go to your downloads folder without having to worry about setting up different drive or pointing to a new folder. You have 1tb of space to play around with.\n\nCreate the home partition using the same steps as above. Use all the available free space left for the home partition size. The partition settings should look like this:\n\n![Home Drive](/assets/blog/hdd-setup/home-partition.PNG)\n\n     Size = all remaining free space\n     Type for the new partition = Primary\n     Location for the new partition = Beginning\n     Use as = EXT4 journaling file system\n     Mount point = /home\n\n\n![Finish Setup](/assets/blog/hdd-setup/finish-setup.PNG)\n\nWith both drives set up, select the correct drive the boot loader will go to, then click the ‚Äúinstall now‚Äù button to start the installation process.\n\n![Write to disk](/assets/blog/hdd-setup/finish-setup-2.PNG)\n\n### Finishing Steps\nThe installation process from here is the standard installation. Select a time zone, create a username, computer host name, create a password. Once completed your all set. You can remove the usb thumb drive and reboot your machine when prompted.\n\n### Conclusion\nThe best ting about Linux is its versatility and how configurable it is. Most operating systems don't give you all the options that Linux does. Whether your reading to learn how to install ubuntu or just want to Learn something about Linux, I'm hoping this did both of those for you.\n"},{"id":1599778800,"title":"Hard Drive Hassles and a broken WAP","date":"Sep 11 2020","excerpt":" \"First time Linux failed me\"","img":null,"content":" \n## The wild wild west with western digital \n## Warning: possible ranting involved \n\nLinux is the swiss army knife for hacking, building, and repairing a majority of issues \nfound on the internet. When it comes to fixing hard drives, whether it be formating, partitioning, \nresizing, or recovering data, Linux and open source software like GParted will normally do the trick. \nI have been using these tools for over a decade for things hard drive recovery, fixing damaged sectors on a hard drive, and they have never failed me... UNTIL NOW! \n\nThis year, last week, as of the time im writing this, I had my Western Digital 3TB give up on me. The drive is in a Western Digital case that requires a power adapter and a usb cable for data connection. If you have ever used a flash drive or external hard drive this is nothing new to you. I had first noticed that when I turn on the drive it would take anywhere between 14-30 seconds for it to turn on and start spinning up. When plugging in your usb drive into any computer there is normally a pop or click sound you hear to know that the drive was connected and recognized by the OS. This WD would make that sound as soon as you connected it but wouldn't be mounted or active until that 15-30 second mark. \nIm not sure if it was always like that or if I just recently started noticing it but I think its somewhat important to this story.\n\n\nI connect my external to a docking station when I need to do backups and dont keep it running all the time in fear of it falling off the desk when im gone or my dog bumping the computer desk. Anywho, while backing up my brothers music using a backup script I wrote, the script would bomb. Errors $PATH could not be found or accessed. Okay, no worries, lets just plug it in...wait, it is plugged in. \n\nMy first though was to run [ls blk](https://man7.org/linux/man-pages/man8/lsblk.8.html) to list the drives and mountpoints on my computer. \nMy Dell G15 gaming laptop has a 128gb ssd and a 1tb so finding the 3TB should be easy. WRONG \nNothing is listed. \n\n*doh* \n\nConfused I look back to my gui and see that the external shows its connected, disconnected and reconnect and come up with nothing. Testing with [\"fdisk -l\"](https://man7.org/linux/man-pages/man8/fdisk.8.html) I find my external drive. The gui pops up again but cannt be accessed, and the physical drive isnt making any noise or showing any signs of damamge. \n\nNow even more confused than when I started I figured [Gparted](https://gparted.org/) never steers me wrong. I fire open one of the most known and most popular and free applications for hard disks and partitioning in the world thinking this may save me. Gparted is a free partition editor for managing \ndisks so why not use that. \n\n### scratches head\nGparted showed a flag on the external drive (which apparently shows up to the party when it wants to).\nThe flag states I should check the device and and run a \"checkdisk -f\" to repair the drive. \n\n\nCheckdisk -f could potentially damage or format the drive right? Is'nt checkdisk a command in command prompt? Something't not right. \n\n### Here comes the meat and potatoes. \nRealizing that the drive isnt operating in the most efficient manner I assumed that a block of some sort is damaged and the drive could be going back. I know there is a small windows application called [HD TUNE](https://www.hdtune.com/) that I can use and check the full health of the drive. Right not its fighting with me to read the partition on the disk like a dog and a chew toy. \n\nI power down and unplug the drive and plug it into the only windows machine in my house and run hd tune's full test to check for errors and benchmark results. \n\nThe drive shows up on windows and can be ran and checked by HD Tune but cant be accessed. I tried the simple \"Turn it off and then back on again\" to see if the drive will pop up but get the same results. \nCould the partition of the drive have been changed. A changed partition type could wipe/destroy all the data on the drive. My brothers music and pictures are on the drive so I can't afford for this to happen. \nI quickly run back to Ubuntu 18.04 and run more fdisk commands to find the partionin table and do some damage. \nBack on my machine the drive does not show up on the GUI anymore but is listed in fdisk.  \n\nBy typing fdisk /dev/sdc im able to access the drive and leverage the fdisk utility to find out whats going on. \nrunning the p command prints the partition table and tells me that the drive is an NTFS volume! \nMy eyes begin to scream with rage as I think i have lost my data and the drive decided to act bougie and change partition types. Could this also be an issue with the boot record. If the boot record was messed up the drive wouldn't be showing up or would be reading the wrong information. I havent done a backup in a week and the drive hasnt moved nor has there been any power outtages.  \n\nWhen running fdisk, changes are only applied to memory until you save or write your changes. \nso I looked into a few fdisk feautres (which all failed me): \n\n* List free unpartitioned space: failed to read\n* list known partition types: NTFS \n* add a new partition: no free block sectors \n* create a new GPT partition table: failed to \n  \nWith the failures that appear I start wondering if the hard drives in my laptop are starting to fail or an update \nthat I had recently done broke something I wasnt aware of. I power down and unplug my drive. Plug it back into the windows \nmachine and run [DISKPART](https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/diskpart) which in my mind is the windows based fdisk utility. Note, Fdisk can be used on both Windows and Linux. I decided to isolate possible hard drive issues and allow ubuntu to do a checkdisk scan pre boot while working on the windows machine. \n\nWhile running DISKPART I simply typed the following: \n* list disk \n+ select disk 2\n* detail disk \n\nand boom! this disk shows up and is an NTFS disk with 2.7TB listed. \nI check the disk to see if it could be accessed, and BOOM! its working! \n\nNothing I did specifically got it working per say. It just worked. After checking my bash script to make sure \nno specific function is triggering changes to the hard drive other than adding data I start laughing. \n\n### Always understand the problem\nI spent about an hour trying to figure out what software could help or could solve this issue, but as I start looking around the Western Digital Hard drive and look up failure rates I realized this isnt software related. Software is just a tool used to connect other software or hardware together. The problem with the hard drive not connecting properly is most likely hardware related. I should have done some more hardware troubleshooting hardware steps to rule out all hard drive related issues. Firstly, has the usb cable been burnt or warn out? Is the hard drive controller burn or damaged. can I smell any signs of damage? \n\n\nWell, two things can be true, your hard drive controller can be messed up, and, your hard drive controller doesnt have to been burnt out or smell burnt.\n\nI got my CompTIA A+ over 5 years ago now but one lesson I learned when I committed to getting into the industry was to always take a step back and understand the problem. Switching between the two different OS's and noticing differences in the connectivity of both showed me that there is something wrong with how the external hard drive is connecting to the computers. \n\nI decided to take apart the hard drive controller from the case and reveal the WET ADAPTER PIECE. \nAfter finding methods to dry the pice I was able to plug and play the external hard drive with ease, backup all the data off that and onto my new 5TB external hard drive. \n\n![Western Digital 5TB HDD](/assets/blog/hdd-repair-1-500.jpg)\n\n## The lessons learned today and listening to [Cardi B's WAP](https://www.youtube.com/watch?v=hsm4poTWjMs) song will remind me of that one time LInux failed me....but didn't. Linux never fails. Thanks for reading. \n\n \n\n\n\n"},{"id":1596582000,"title":"The Importance of Failure","date":"Aug 05 2020","excerpt":" \"CCDA Validator and interview tests\"","img":null,"content":"## There are many lessons in defeat,\nhttps://www.wanderlustworker.com/the-importance-of-failure-5-valuable-lessons-from-failing/\n\nAn important lesson in failing is knowledge. Knowledge of self, knowledge of the past, and knowledge of the present, is what shapes the future. This COVID-19 pandemic has shifted my life in more ways than one. Losing my job, family members has thrown me, along with others dealing with the same dilemma into a hurricane of emotions. Now, I have failed more times than I‚Äôd like to admit, but they never keep me down for long.\n\nRecently, in the midst of job hunting I have come across what a few failures, or jobs that passed on me. I have a variety of skills in tech and experience as a Sysadmin and Linux admin. I have enough experience on paper to prove my worth and my talent as a Linux administrator.I also have certifications, which for some have value and help bypass HR \"firewalls\" and for others just a piece of paper that determines your ability to understand concepts but no experience. Even with the experience and the certifications some job interviews just don't pan out well. I get extreme cases of test anxiety when taking certification exams, or tests in general, and always feel like I know the material but get lost in the multiple choice answers or writing down the exact commands, sentences, or phrase a test is looking for. Whether it be from not doing well with the skills challenges, or not having years of experience in categories they are looking for, or even being \"over qualified\", many people are left wondering what they did wrong or what went wrong in the interview. Since most of these skills challenges and tests get sent to an employer without giving you results it can be a struggle to find out where your weaknesses are. The rejection emails afterward can be a very humbling experience as well.\n\nGetting rejection letters because hiring managers are looking for someone local, someone with more experience in X or Y, or the famous \"It was a close decision between you and someone else and they ended up choosing someone else\" can definitely feel like a punch in the gut. I'm a firm believer of the quote that \"Every moment in life is a learning experience\" so I treat this as such. I find it a productive way to stay focused and prepare myself for failures left hook and uppercuts.\n\nWith one of the jobs that passed on me they introduced me to a github project that they wanted me to setup within a specific time frame. I didn't get the job, however, I am aware of the software used and the skills needed so I decided to challenge myself by setting up my own challenges using the same example project they gave me. This way I can showcase the skills I have, possibly sumbit a pull request and help contribute to someone else's project, and have something to show for the next interview looking for examples of my talent.\n\nThe initial challenge triggered the idea to draft up another challenge I had at my most recent job as well.\nI find that even though i'm currently unemployed and have the chance to finally catch up on Netflix or Hulu originals I find it better to utilize some of this free time I have to sharpen my skills and show off a bit of what I have learned. This will hopefully be a great timestamp I can look back to in the future and provoke more ideas, projects or challenges. I'll find another job that fits like a boxing glove and be able to punch my way out of any other obstacles I face soon. For now, I hope this blog evokes a reader to challenge themselves to show off a project that have been working on or find a way to showcase their talent as well and keep their skills sharp.  \n\nHere are the two challenges and descriptions below.\n\n finish setting up the application but setup a jenkins build project to check and keep the application up to date. I figured this will showcase my skills in Linux, Jenkins freestyle projects, docker configurations, git, CI/CD, devops tools, and then some. That way, if I run into another interviewer who asks me more about my skills and my talents I have something to show and explain with documentation.\n\n# CCDA Validator Challenge\nThe interview skills challenge wanted me to setup an application built from the Office of the National Coordinator for Health IT known as the Reference CCDA Validator.\n\nDescription: CCDA provides capabilities to validate your CCDAapplicable standards-specifications.\n\n[Link:](https://github.com/onc-healthit/reference-ccda-validator)\n\nInterview Challenge: Build out the CCDA validator on a given web server\n\nIn the README.md file you can see that the application requires the following\n\n a. Tomcat 7 (7.0.53 recommended) or above has been installed and NOT running. https://tomcat.apache.org/download-70.cgi\n b. You are using a pre-built referenceccdaservice.war file. In other words, the .war file was not built from the project directly.\n    Such a thing is possible but beyond the scope of this document.\n c. With Tomcat installed and the referenceccdaservice.war in your hands, you are ready to begin configuration and deployment.\n d. Java 7 or 8 is installed and a JAVA_HOME is set. Note: Java 7 is recommended.\n\n\nSteps are fairly straight forward.\nInstall tomcat, the referenceccdaservice.war file, Java 7 or 8, the needed Vocabulary Artifacts, scenario files,\nand set the configuration parameters of the application to link to all the necessary files and directories.\n\n\n\n## Solution: A jenkins build for a CCDA docker container\nGithub Link: https://github.com/tmeralus/docker-ccda-validator\nDockerhub link:\n\n Because the application requires a few external components its a good idea to make sure that those files\n are always up to date. A great way to do this would be in a jenkins freestyle job that will pull the needed files from\n other github repositories and make sure they are the most up to date files, and then build and test a docker container\n based off all the latest files and configurations for the validator.\n\n[Setup:](https://github.com/tmeralus/docker-ccda-validator/blob/master/README.md)\n\n## Jenkins Demo project\n[Link:](https://github.com/tmeralus/docker-jenkins-build-projects)\n[Setup:](https://github.com/tmeralus/jenkins-build-projects/blob/master/README.md)\nlogin information\nusername: guest\npassword: guest\n"},{"id":1590534000,"title":"Landed on Mercury","date":"May 27 2020","excerpt":" \"RIP Kendall KennyMercury Meralus\"","img":null,"content":"\nMy cousin Alan once told us a joke. A duck walks into a bar and asks \"Got any grapes?\"\nBartender says \"What? Grapes? No, this is a bar, not a fruit store. Get out, duck\"\nNext day the duck comes back, \"Got any grapes?\"\nBartender says \"Dammit duck, I told you to get out. Quit coming here asking for grapes or I'm going to nail your beak to the wall.\nNext day the duck comes back, \"Got a hammer?\"\nBartender is furious, \"What's with you duck? Does this look like a hardware store? It's a bar! I don't have any hammers here!\"\nDuck grins, \"Good. Got any grapes?\"\n\nThe joke (the duck and the clerk) was something that my brother and I used to bring up once a year and find a way to use that to describe how simple jokes and stories can change your entire perspective on current events and things in life. We would draw from old tales like the Odyssey or new tales like Breaking Bad are all the same story. Stories are like energy, constantly being shifted and changing every day.  \n\nA lot has changed over the past 90 days of my life. I spend a lot of my time thinking about writing blogs and trying to make things perfect, getting in my own way and not publishing blog posts or projects. I lost my job due to COVID-19, My grandpa who lived to be about 90 years old, and my twin brother. The shock of it all should affect most people in ways that may lead them to drinking, long bouts of depression, or possible suicide. I haven't felt any of that. Sitting on your hand until it goes numb is the best way to describe how I feel.\n\nMy brother had spent the last 10 years fighting with diabetes and trying to change dietary habits to adjust well. Over the last 10 years our bond stayed close. The struggles of constantly moving from Florida to New York and trying to find steady income while pursuing his passion had its ups and downs. The ups would be the moments of clarity when he knew he was at the right place at the right time and would grab opportunity by the horns. The lows, however, were like starting up at rock bottom and trying to find a ladder. His depression lead to alcoholic binges which he explained helped numb his body and allow his blood sugar levels to \"pause\" for a second before they spiked.\n\nHe was never one to have someone pity him and hated when people worried about his body or if he was okay mentally, so he spent a lot of time watching movies and locking into films to escape his own world even if it were for a few hours. That is what music and composition did for him as well. During the stressful moments where he would ask whether he should pay for food and gas or pay his phone bill he would lock into music and write lyrics, come up with screen plays, draft freestyles or mix and master music tracks. His passion, like mine, was a way in which he could avoid the screaming in his head and the spread of scenarios in his mind while trying to figure anything out.\n\nOver the last year he had finally found his niche in the music and entertainment industry. I was so proud that I was able to help walk him through going to see a therapist, finding out ways to get the city of New York to try and pay for metformin or diabetic glucose monitors. I spoke to him 5 years prior about taking the best out of bad situations and finding ways to get him to and from home so that he can keep his sanity and get out of his home to see  the world. We were able to explore areas in the United States and Jamaica before he left and those memories I will keep with me forever.\n\nHis thoughts on death were different from our christian views that our upbringing had exposed us to. Although our ideas were different and our lives may have shifted down different roads he had always told me that if he died he didn't want people to cry, mourn, or spend time trying to find out why. His thoughts on the life that people live and the simulacra that we are all in are a spec in the history of the world. What he didn't know is that his grain of sand is what moved waves around him and our family.\n\nOur last few conversations were about writing a novel to use as the source for a screen play. Knowing that thinking about a budget would produce levels of stress that we didn't see the need to include in our workload was a consistent thing we agreed on. Our goals were to finish the book, publish the book, then focus on animation and using open source software to create an animated film for the book so that we wouldn't have to deal with the complication of casting and scheduling conflicts. He wanted to find methods that would capture our own struggles and explore them in different scenarios to see if people would try to figure out which part is creativity and which parts were pulled from our real lives. I plan on taking our passionate conversations and press them into something digestible for the world.\n\nI have taken my passion for computers and code, since the age of 9, and made it a means of living. My new passion, is making sure that our ideas will go from idea to concepts to completion. Passion is what drives us. Passion will be the way we go out. Although many others didn't know all the ins and outs of his life, which I admit I wasn't by his side every day and will not admit nor accept that I knew him front to back like a book, I was the person he spoke to about his fears. His triggers that would cause him to go into days of depression. Watching his struggles that he and diabetes fought daily that exhausted him, the issues with his kidneys, his teeth, vision, and endurance levels hardened me for his departure. Knowing that he doesn't have to fight anymore brings me a sense of peace.\n\nCall it twin telepathy (if you believe that) but I used to get this feeling in the pit of my stomach if I hadn't talked to him or heard from him in more than 48 hours or more, I would call him. He would mention he was on the hospital for various reasons or locked in on a project or we would pick back up on shows and film we watched and reviewed. After hearing from him that feeling would go from a weird pain/discomfort to a numbness. Almost as if it were a sign of some sort. That painful feeling sits with me every day since the doctor called. Its as if something is missing inside of me. Its been a little over a month and I know I hide the pain I'm feeling but I miss him so much. I know he would hate that every day I wake up and trying to take things day by day but my fiance catches me at nights in mid conversation break down and start crying. Trying to plan a wedding with one missing chair, one missing plate, one missing plane ticket really hurts. Thinking about how excited he would be to see my new office or new things I'm doing in life but knowing he won't, makes it difficult to sit in my office at times. Getting calls from family that would never call me or chat with me on a day to day basis try to reach out and share the same \"I'm at a loss for words\" script is hard to accept. Rambling in a blog post that may show up online that family may end up reading one day feels like something that might help, but who really knows.\n\nEvery day I try to focus on living to be a better and healthier person so that I can live as long as possible because I feel that it would be exactly what he would want but I can't text him to find out. I can only recall the phone calls of us crying our thoughts and feelings out, the silence on the phone that speaks for us. The hardest part is trying to find a new normal. This numb feeling hasn't gone away. I thought it would when I prepared his death certificate. I thought it would when I confirmed payment for his cremation with my dad. I thought it would when I got his ashes and shared it in small cremation necklaces, but it hasn't.\n\nInternet articles, friends, blogs, and anywhere you look will tell you to seek a therapist, look into losing weight more, focus on creating a routine, talking to someone, cry it out because its okay to cry,feel your feelings, but none of that feels as good as writing this right now. The 11pm phone calls that lasted 3 hours wont happen anymore. Saturday's at 12:30am are times when I reflect on my week and what direction I should take the next day. Maybe its because I'm hoping a doctor will call me back and tell me they made a mistake and that my brother has been in a coma for the past month and has just woken up.\n\nMaybe its because every person I look at that knew my brother or interacted with him looks at me with sorrow. Maybe its because if this was a movie idea of ours he would be an angel that talks to me that no one else could see and would talk to me like detective stabler on an old episode of Law and Order SVU. I will never know. What I do know is that his ticket has been punched and he has officially landed on Mercury. Maybe one day ill be able to take a trip, meet him on Mercury, and ask him if he has any grapes. Rest in Peace and travel safely.\n"},{"id":1577833200,"title":"My Development Environment","date":"Jan 01 2020","excerpt":" \"My Development Environment\"","img":null,"content":"# Always changing, always adapting\n\nAs a Linux Administrator and IT Professional you run into many co workers and people\nwho love talking about the development environment they have at home.\nWhether its a string of Raspberry Pi's or old switches used to setup an in house\nsecurity system, people can be very creative when they have the time and brain power.\n\n## Back in the days\nIssues like moving, or finances had always gotten into play, hindering my physical space, storage, or dev environment. Those same co-workers would mention how they have their setup's in closets so their wives or husbands or pets don't get bothered by it. My bedroom was where the magic happened, at least in the technical perspective of things lol.  \n\nOver the years I have found ways to learn more about Linux, common IT trends, and\nadapt to new techniques that businesses are using to keep their business running. Now that it is a new year I have decided to write about my current setup and keep this a recurring thing to help me timestamp what I used to do back in the day and how things have changed in my life and career.\n\nMy environment has gone from a myriad of old laptops re-purposed with different versions\nof popular linux distro's of 2012 (ie: Slackware, Ubuntu 12.04, BackTrack Linux). I used to manage 4 different HP or Dell laptops that would have BackTrack (now Kali Linux), Ubuntu (my daily driver), CentOS (for testing new linux software and bash scripting), and Slackware (because I love the challenge of building things from scratch). (2014-2016 had me) switch to managing cloud based environments on Digital Ocean or a cloud hosting provider. The ease of spinning up and managing Instances of Wordpress or custom Linux servers went from cables and shoe boxes of mouse's keyboards, kvm switches, and small switches, to simple web based interfaces.\n\nAfter moving and living the young bachelor life I learned that recreating these environments became somewhat of a hassle. I wanted to find an easier way to manage physical or virutal testing setups, code, configuration files, or packages. My curiosity on stack overflow and reddit lead me to git, github, and gitlab. Github became the defacto place to learn about how people created applications and reading code to learn different methods of creating my own web apps.\n\n\n# Evolving the dev environment\nGone are the days of using virtualbox and trying to manage storage space\nand iso's for vm's on working environments. Goodbye to the early saturday mornings at swap shops and flea markets looking for old computers to use for testing purposes.\n\nToday's day and age of development and testing has lead me to using [Linux Academy](https://acloudguru.com/) (which has merged with A Cloud Guru as of 2020) to learn about docker, ansible, puppet, kubernetes, and setting up containerized development environment with different disto's and platforms to keep my knowledge base sharp.\n\nAs a Linux/System administrator by trade I have found that the need to learn to code, or at least learn to read and understand code is equally as important as managing servers and network devices. On a daily basis i'm fingers deep in a terminal and using things like Ansible, Jenkins, and Monitoring Platforms like Nagios or Grafana.\n\nMy biggest concerns when creating dev environments is finding a way to get the setup on a new machine started with ease. Since 2010 my daily drivers have either been Debian based or a different variation of CentOS so I've created a few scripts to setup [My New dev environment](https://github.com/tmeralus/dev-environment-script) which has slimmed down to using specific technologies to stay sharp in my field.\n\nThe dev-env.sh script does the following\n* Install ansible\n* adds ansible user to sudo group\n* create Ansible ssh key\n* pull ansible playbooks for the development environment\n\nThe **dev playground ansible playbook** that is pulled from ansible galaxy\ndoes the following:\n\n- installs pyhthon based docker and docker related packages\n- creates a docker file with previously configured ansible ssh key if found\n- setup a docker container that ansible can penetrate.\n- connects to dockerhub\n- checks for docker dev container\n- if not found creates a dev container\n- pushes dev container to dockerhub\n\nThe **docker_playground ansible playbook**  that is pulled from ansible galaxy\ndoes the following:\n\n- spins up dockerhub dev containers in dockerhub\n- sets up a docker network on the local host\n- opens firewall ports for containers on the local host  \n- spins up monitoring containers that connect to each other\n\n Reflecting on my years working with Linux and in the Sysadmin world I have seen so many changes thus far I'm excited to see what 2021 brings! Until then, feel free to message me via [Twitter](https://twitter.com/TechGameTeddy).\n"},{"id":1555023600,"title":"Haiti's Read to Succeed Project","date":"Apr 12 2019","excerpt":" \"Library Dr Bardel Belizaire \"","img":null,"content":"\n## Read to Succeed Charity\n\n## https://readtosucceed.today\n\n![Library Dr Bardel Belizaire](/assets/img/blog/bibliotheque.jpg)\n\nLibrary Dr Bardel Belizaire is a non-profit organization that was opened to inspire people of all ages to read. Located in the tiny village of Moron (Grand-Anse) in Haiti, the library seeks to open a wealth of knowledge to people in that community who would not have access to books or technology. The donation of books and laptops has allowed the library to remain open for one year. YEAH! One year of reading and learning of technology.\n\n*https://readtosucceed.today*. is a site built by Tedley Meralus\n"},{"id":1551222000,"title":"Slow steps to Freedom and Open Source","date":"Feb 27 2019","excerpt":" \"Open Source Alternatives\"","img":null,"content":"\n# Migration from Modern Monetization\n![Screenshot](/assets/img/blog/Reasons-to-Switch-from-Windows-to-Linux.jpg){:class=\"img-responsive\"}\n\nMaking the move from common and convenient software to free and open source software can be intimidating.\nUsing [OS ALT](https://www.osalt.com/) and some other online options I found that its a lot easier than one would think to set yourself free from the clutches of Microsoft and rid yourself of Stockholm syndrome. Here are some of the most common software used on an everyday pc and open source or free alternative to them.\n\n#### Note: This list consists of tools used on Ubuntu Linux and installation instructions for Ubuntu Linux ####\n\n### Purpose | Closed Source App | Open Source (or free) Alternative\n* Email Client | Ms Office | Thunderbird | Hiri\n* Sticky notes | Quick Notes | Google Keep https://en.wikipedia.org/wiki/Google_Keep\n* Note taking | Evernote | Nixnote\n* MS office | libre office https://www.libreoffice.org/\n* Video Editor | Openshot https://www.openshot.org/\n* Video Player | VLC https://www.videolan.org/vlmc/\n* Image Editor | Photoshop | Gimp https://www.gimp.org/\n* Audio Engineering | FL Studios | LMMS https://lmms.io/\n* Muisc Player | ITunes | Nightingale https://getnightingale.com/\n* Wallpaper App | fff | Nat-Geo\n* Programming IDE | Visual Studio | Atom\n* Gaming | Steam\n\n\n\n## Email Client | Ms Office | [Thunderbird](https://www.thunderbird.net/en-US/) | [Hiri](https://www.hiri.com/)\nMozilla Thunderbird is a free and open-source cross-platform email client, news client, RSS and chat client developed by the Mozilla Foundation.\nI use it at work and home for staying up to date with emails, reading RSS feeds from Engadget, Slashdot, Linux Journal, and other sources.\nThe downside is that it is known for some of its bugs and its lack of support for Microsoft Outlook features like calendar syncing and issues with setting a proper signature with a company logo.\n\nIf those types of things in an email cline are essential, Hiri is a business focused desktop e-mail client for sending and receiving e-mails, managing calendars, contacts, and tasks. It was developed as an alternative to existing e-mail clients and calendar applications such as Microsoft Outlook. You can read more on it [here](https://www.hiri.com/)\n\n\n## Quick Notes | Sticky notes | [Indicator Stickynotes](https://launchpad.net/indicator-stickynotes)\nWindows has had sticky notes since windows vista, and for some of you that have forgotten how useful they can be\nwhile multitasking or writing daily tasks down while at work, well, you all probably still use pen and paper.\nFor those of us who work more on their desktops and use the sticky notes feautres in Windows there is an alternative\non Ubuntu called Indicator Stick Notes.\n\nIndicator Stickynotes is a simple lightweight indicator applet for Ubuntu (and other Ubuntu based distributions) that can be used to jot down small tasks etc and ‚Äúpaste‚Äù them on your desktop to be reminded.\n\nSome of the features of the latest version are:\n* Create quick sticky notes\n* Group sticky notes into categories\n* Color code the categories\n* Lock sticky notes for accidental editing\n* Resize the notes as per your preference\n* Hide or show all sticky notes at once from global settings\n* Import and export your notes\n* Supports keyboard shortcut\n* Free and open source software licensed under GPL v3\n\nIndicator Stickynotes can be installed by using its official PPA. Use the following commands in terminal (Ctrl+Alt+T):\n\n sudo add-apt-repository ppa:umang/indicator-stickynotes\n sudo apt-get update\n sudo apt-get install indicator-stickynotes -y\n\nUsing Indicator Stickynotes is as easy as using the Windows Version. The picture below shows how similar stick notes is\n![Sticky Notes](/assets/img/blog/sticky-notes.png){:class=\"img-responsive\"}\n\n\n## Note taking | Evernote | [Nixnote](http://nixnote.org/NixNote-Home/)\nNixNote is an free, open source program designed to help you take notes and stay organized. You can create text notes, attach files or images, and synchronize with Evernote so you can have your notes whenever you go.\nFor those of you who document as you go like myself this app will be a life saving resource.\n[Learn More here](http://nixnote.org/NixNote-Home/)\n\n## MS office | [Libre Office](https://www.libreoffice.org/)\nWhy pay for Microsoft Office when you can get LibreOffice 6.0 for free\nYou can run LibreOffice on Linux, macOS, and Windows. Most home users or students use 2-3 of the core\napps in the microsoft office Suite. Libre Office provides an alternative to Word, Powerpoint, and Excel, along with the\nother tools to match (except One-note). There are hundreds of articles on comparing the two products side by side but for me to do that\nit would require a completely different blog post. Here is an excellent post to help find out [how they compare](https://wiki.documentfoundation.org/Feature_Comparison:_LibreOffice_-_Microsoft_Office)\n\n\n## Video Editor | [Openshot](https://www.openshot.org/)\nThere are some premium Video editors like Adobe Premier that get the spotlight all the time but\nfor those of you who have had to find a quick solution to clip some home videos together for a school project\nmany of you may be familiar with Microsofts lackluster video editor software like the [Windows Movie Maker](https://en.wikipedia.org/wiki/Windows_Movie_Maker)\n\nFor those of you who have caught themselves trying to cut a quick clip to add to a powerpoint or prepare a home movie there are smaller tools\nlike Open Shot and HandBrake that allow you to do some of the similar functions of Movie Maker\n[Hand Brake](https://handbrake.fr/) is a tool for converting video from nearly any format to a selection of modern, widely supported codecs.\n\n[Open Shot](https://www.openshot.org/) is a cross platform video editing application that allows you to animat keyframes, trim and slice videos, add audio tracks and video effects to videos on your Linux desktop with ease.\n\n\n## Video Player | [VLC](https://www.videolan.org/vlmc/)\nVLC is a free and open source cross-platform multimedia player and framework that plays most multimedia files as well as DVDs, Audio CDs, VCDs, and various streaming protocols. Many of you may be using VLC already and are comfortable with the fact that the media player comes prepackaged to handle just about any video format. For those of you who want to donate and contribute to the project [Check out their contribute page](https://www.videolan.org/contribute.html) A dollar a day keeps the devs at bay.\n\n\n## Image Editor | Photoshop | [Gimp](https://www.gimp.org/)\nPhotoshop is the most known photographic editing software, but it isn‚Äôt for everyone. Price and compatibility can be big factors when using it. The money alone can make a difference between photographers who get paid  to shoot and edit photos versus those who shoot as a hobby.\n\nThere is a very popular, Free and Open Source alternative that runs on Windows, Mac, and Linux.\n[GIMP](https://www.gimp.org/) is a free and open-source raster graphics editor used for image retouching and editing, free-form drawing, converting between different image formats, and more specialized tasks.\n\n## Audio Engineering | FL Studios | [LMMS](https://lmms.io/)\nFL Studio is a digital audio workstation developed by the Belgian company Image-Line. FL Studio, formely known as Fruity Loops\nis a popular tool for audio engineers and hip hop/rap producers alike. Some producers who use it produce and develop beats are\n\n* Hit-Boy\n* 9th Wonder\n* Jahlil Beats\n* Lex Luger\n* Soulja Boy a.k.a big soulja\n\nFor aspiring audio engineers making the switch to Linux and dont have the cash to cough up for bigger solutions like Pro Tools, there is LMMS.\nLMMS is a digital audio workstation application program. When LMMS is executed on a computer with appropriate hardware, it allows music to be produced by arranging samples, synthesizing sounds, playing on a MIDI keyboard and combining the features of trackers and sequencers. Wikipedia\n[Check out more here](https://lmms.io/)\n\n## Muisc Player | ITunes | [Nightingale](https://getnightingale.com/)\nNightingale was a free, open source audio player and web browser based on the Songbird media player source code. Although it wont help with\nsyncing Itunes music to your Iphone it is however one of the best alternatives to Itunes for Linux with great addons and community support to help\nyou stay up to date with your latest podcasts and music.\n\n## Programming IDE | [Visual Studio Code](https://code.visualstudio.com/) | [Atom](https://ide.atom.io/)\nFor those of you who dont have the resources for big IDE's like Visual Studio 2017 or Eclipse, Here are two popular lightweight alternatives.\n\n[Visual Studio Code](https://code.visualstudio.com/) is a source code editor developed by Microsoft for Windows, Linux and macOS. It includes support for debugging, embedded Git control, syntax highlighting, intelligent code completion, snippets, and code refactoring. Wikipedia\n\n[Atom](https://ide.atom.io/) is a free and open-source text and source code editor for macOS, Linux, and Microsoft Windows with support for plug-ins written in Node.js, and embedded Git Control, developed by GitHub. Atom is a desktop application built using web technologies. Wikipedia\n\n## Gaming | [Steam](https://store.steampowered.com/)\nSteam is a digital distribution platform developed by Valve Corporation for purchasing and playing video games. Even with the new release of EA's gaming platform Steam is still the grandaddy of PC gaming. With its new update introducing [Steam Play](https://steamcommunity.com/games/221410/announcements/detail/1696055855739350561) (which allows you to play all your windows based steam games on linux) It will be here for the long haul and most pc gamers will feel right at home installing Steam and getting started.\n\n\n## Text Editor | notepad | [gedit](https://wiki.gnome.org/Apps/Gedit)\nGetting down to the simplicity of things, there are the small guys who are forgotten. When editing simple files on a windows\nmachine some people open notepad with ease. make a quick change to a file, then close it. When making the switch to linux or mac you wont find\n\"notepad\" in your search bar. This is where gedit comes into play. While aiming at simplicity and ease of use, gedit is a powerful general purpose text editor. When first making the switch I had no idea how to save notes or install apps and didn't know where the basic text editor was, which had me flustered until I found this. Moral of the story, don't forget the little guys.\n\n## In Conclusion\nMaking the changes to Linux in 2019 shouldnt be as hard as your telling yourself it is. With a world that's ever changing and prices that only seem to be getting higher, making the switch, saving some money, and using open source software will help you in the days to come. If you get stuck or have any other questions feel free to contact me on twitter []@TechGameTeddy](https://twitter.com/TechGameTeddy)\n"},{"id":1550962800,"title":"Terminator Terminal App","date":"Feb 24 2019","excerpt":" \" Terminator The future of terminals \"","img":null,"content":"# NEW APP ALERT\n# Terminator\nWorking in Linux and Terminal has never been this resourceful! The Terminator app is an app that allows you to open up multiple terminals sessions in one window and multitask effortlessly. You can split terminal sessions horizontally or vertically, add groups to run the same command on multiple servers and much more.\n![Screenshot](/assets/img/blog/terminator-app.png){:class=\"img-responsive\"}\n\n\n### [Terminator](https://gnometerminator.blogspot.com/p/introduction.html)\nHelps with making configuration changes when working with web servers or apps. It can help with making changes to a python app, and reading logs to debug issues with the app at the same time. If I could count how many times this has saved me when working on things in my Linux environment it would equate to at least 1/10 of the lines in the linux kernel. Side note: The total size of the kernel grew from 13 million lines of code and 33,000 files in 2010 to 15 million lines of code and 37,000 files in 2011.\n\n\n### With a customizable Menu [Terminator-Menu](terminator-menu-settings.png)\nThe app allows you to add some style to your terminal. It never ceases to amaze me the people that become dazed and\nconfused when they see me working in multiple screens.\n\nIn a [previous blog](https://tedley.me/terminator-app/) I mentioned a few fun things like running a campfire from your terminal, or checking the current phases of the moon, or checking the latest trends and values of crypto currency all at the same time (see image below).\n![Screenshot2](/assets/img/blog/terminator-fun.png){:class=\"img-responsive\"}\n\n\nI think you catch my drift. This app is best used for system administrators, programmers looking to read errors logs and debugging code, or anyone with a linux terminal. [Check out the app here ](https://launchpad.net/terminator) and thank the Development team\n\n\n### Resources\n[Terminator](https://gnometerminator.blogspot.com/p/introduction.html)\n[Campfire Terminal](https://www.tecmint.com/20-funny-commands-of-linux-or-linux-is-fun-in-terminal/)\n[Crypto Rates](https://cryptowat.ch/)\n[Weather and Moon Phases in Terminal](https://github.com/chubin/wttr.in)\n"},{"id":1550790000,"title":"Linux File Structure Explained","date":"Feb 22 2019","excerpt":" \"Linux File Structure Explained\"","img":null,"content":"\nIf you‚Äôre coming from Windows, the Linux file system structure can be a bit intimidating and confusing. The C:\\ drive and other hard drives replaced by a / and weird directories that dont seem to make any sense.\n\n[The Filesystem Hierarchy Standard (FHS)](https://en.wikipedia.org/wiki/Filesystem_Hierarchy_Standard) defines the structure of file systems on Linux and other UNIX-like operating systems. Linux file systems also contain some directories that aren‚Äôt fully defined by the standard. Lets go over those\n\n### / ‚Äì The Root Directory\nEverything on your Linux system is located under the / directory, known as the root directory. You can think of the / directory as being similar to the C:\\ drive on Windows ‚Äì however Linux doesn‚Äôt have drive letters. In the same way another partition would be located at D:\\ on a Windows machine, A new partion on would appear in another folder under / on Linux.\n\n### /bin ‚Äì Essential Command Binaries\nThe /bin directory contains the essential user binaries (or programs) that must be present when the system is mounted in single-user mode (or recovery mode for Windows users). Applications like Firefox or Thunderbird are stored in /usr/bin, while important system programs and utilities such as the bash shell are located in /bin. Adding files in the /bin directory confirms the system will have these important utilities or scripts needed even if no other file systems are mounted. The /sbin directory is similar ‚Äì it contains essential system administration binaries (used for running, starting, or stopping programs).\n\n### /boot ‚Äì Static Boot Files\nThe /boot directory contains the files needed to boot the system ‚Äì for example, the [GRUB boot loader‚Äôs]((https://www.gnu.org/software/grub/)) files and your Linux kernels are stored here. The boot loader‚Äôs configuration files aren‚Äôt here\n\n### /etc - System-wide configuration\nHost-specific system-wide configuration files can be found in the /etc directory with the other configuration files.\nYou can find configuration files for most applications\nin this folder if not installed in somewhere specific by the package installer.\n\n### /cdrom ‚Äì Historical Mount Point for CD-ROMs\nThe /cdrom drive is pretty easy to explain. Instead of finding a mountable drive in the My Computer folder of a Windows machine you can find the contents or mount points of a cd or dvd in this directory.\n\nThe /cdrom directory isn‚Äôt part of the FHS standard, but you‚Äôll still find it on Ubuntu and other operating systems. It‚Äôs a temporary location for CD-ROMs inserted in the system. This is where your internal cd/dvd drive content can be found.\n\nNote: the default location for most temporary media is inside the /media directory. This is where you may find usb mounts or other storage device mounts.\n\n### /dev ‚Äì Device Files\nLinux exposes devices as files, and the /dev directory contains a number of devices represented as special files. They are not actual files but they show up as such. For example, the /dev/sda represents the first SATA drive in the system. If you wanted to partition it, you could start a partition editor and tell it to edit /dev/sda.\nAdditional drives may be listed as /dev/sdb or /dev/sdc\n\nNote: This /dev/ dir also contains pseudo-devices, which are virtual devices that don‚Äôt actually correspond to hardware. For example, /dev/random produces random numbers. /dev/null is a special device that produces no output and automatically discards all input ‚Äì when you pipe the output of a command to /dev/null, you discard it.\n\n### /home - Where the heart is\nThe /home directory contains a home folder for each user. This would be similar to the Users folder in the C:\\ drive of a Windows machine. The /home/ted folder contains the user‚Äôs data files and user-specific configuration files. This would be where you would find a users Documents, Pictures, or Downloads files. When Users are created a new folder with the users name gets created in the home dir.\n\n### /lib ‚Äì Essential Shared Libraries\nThe /lib directory contains libraries needed by the essential binaries in the /bin and /sbin folder. Libraries needed by the binaries in the /usr/bin folder are located in /usr/lib as well. For example, you can find python packages installed on your machine.\n\n# /media ‚Äì Removable Media\nThe /media directory contains subdirectories where removable media devices inserted into the computer are mounted. For example, when you insert an external drive drive, CD or USB into your Linux system, a directory will automatically be created inside the /media directory. You can access the contents of the CD inside this directory.\n\n### /mnt ‚Äì Temporary Mount Points\nThe /mnt directory is where system administrators mounted temporary file systems while using them. For example, if you‚Äôre mounting a Windows partition to perform some file recovery operations, you might mount it at /mnt/windows. However, you can mount other file systems anywhere on the system. You can also mount different disk partitions or shortcuts to specific folders here.\n\n### /opt ‚Äì Optional Packages\nThe /opt directory holds subdirectories for optional software packages. It‚Äôs commonly used by proprietary software that doesn‚Äôt obey the standard file system hierarchy ‚Äì for example, a proprietary program might dump its files in /opt/application when you install it.\n\n### /proc ‚Äì Kernel & Process Files\nThe /proc directory similar to the /dev directory because it doesn‚Äôt contain standard files. It contains special files that represent system and process information.\nSystem specs and parameters are gathered in this dir.\n\n### /root ‚Äì Root Home Directory\nThe /root directory is the home directory of the root user. Instead of being located at /home/root, it‚Äôs located at /root. This is different from /, which is the system root directory.\n\n### /run ‚Äì Application State Files\nThe /run directory is one of the newerer additions to the FHS, and gives applications a standard place to store transient files they require like sockets and process IDs. These files can‚Äôt be stored in /tmp because files in /tmp may be deleted. Applications may leave pid files on a computer to secure a connection to an open port on a system. The /run dir is typically a place where those pid files would be found.\n\n### /sbin ‚Äì System Administration Binaries\nThe /sbin directory is similar to the /bin directory. It contains essential binaries that are generally intended to be run by the root user for system administration.\n\n\n### /selinux ‚Äì SELinux Virtual File System\nIf your Linux distribution uses SELinux for security (Fedora, CentOS and Red Hat, for example), the /selinux directory contains special files used by SELinux. It‚Äôs similar to /proc. Ubuntu doesn‚Äôt use SELinux, so the creating a /selinux may show up in bug reports.\n\n### /srv ‚Äì Service Data\nThe /srv directory contains ‚Äúdata for services provided by the system.‚Äù If you were using the Apache HTTP server to serve a website, you‚Äôd likely store your website‚Äôs files in a directory inside the /srv directory.\n\n### /tmp ‚Äì Temporary Files\nApplications store temporary files in the /tmp directory. These files are generally deleted whenever your system is restarted and can be deleted an any given time if needed.\nIf your copying files from one machine to another the /tmp dir is a safe place to those files if they are temporary\n\n### /usr ‚Äì User Binaries & Read-Only Data\nThe /usr directory holds applications and files used by users, as opposed to applications and files used by the system. For example, new applications are located inside the /usr/bin directory like Thunderbird or Geary instead of the /bin directory and non-essential system administration binaries are located in the /usr/sbin directory instead of the /sbin directory. Libraries for each are located inside the /usr/lib directory. The /usr directory also contains other directories ‚Äì for example, architecture-independent files like graphics are located in /usr/share.\n\n### /usr\nThe /usr/local directory is where locally compiled applications install to by default ‚Äì this prevents them from mucking up the rest of the system.\n\n### /var ‚Äì Variable Data Files\nfiles or application folders that are expected to continually change during normal operation of the system‚Äîsuch as logs, spool files, and temporary e-mail files. You‚Äôll find system specific log files in /var/log/syslog/messages. These types of files, if not rotated automatically by your system with a cron job can grow very large in size.\n\n## In Conclusion\nThere are a list of other files in the Filesystem Hierarchy Standard but I think i've gone over the basics. If you want to look around your filesystem without repeatedly typing the 'cd' command you can try the [Ranger](https://github.com/ranger/ranger) app which will allow you to navigate and view your system files and folders in an easier like fashion.\n\n![Ranger Terminal App](/assets/img/blog/ranger-terminal.png)\n"},{"id":1550790000,"title":"New App Alert Nat-Geo","date":"Feb 22 2019","excerpt":" \"National Geographic Wallpaper Switch\"","img":null,"content":"# NEW APP ALERT\n![Nat-Geo App](/assets/img/blog/nat-geo.png)\n\nHave you ever logged into your computer and felt overwhelmed with a sense of boredom\nbecause your wallpaper is dull. Are you tired of looking at the same pictures that Ubuntu has\nto offer and need just a lil more spice every time you log onto your computer. Well this app created\nby [atareao](https://github.com/atareao) should brighten up your day.\n\nThe [National-Geographic-wallpaper App](https://github.com/atareao/national-geographic-wallpaper) is hands down\none of the best apps I have found in my year of linux due to its simplicity and ease of use.\n\nObviously from the name it will automatically change your wallpaper every day for you to National Geographic's\nPhoto of the day. I have this installed on my laptop, Office workstation, and Desktop at home with different setups for each. This app allow you to switch between National Geographic's Photo of the day, to Bing, GoPro, NASA, and Wallhavens photos as well. After a long day or a strong coffee in the early morning its always refreshing to start working or turn on your computer to see a new and interesting image on your computer screen. One less thing to be automated.\n\n![Photo-of-the-day](/assets/img/blog/nat-geo-potd.png)\n"},{"id":1548370800,"title":"Simple Site Setup","date":"Jan 25 2019","excerpt":" \"creating your personal piece of the internet\"","img":null,"content":"\n![Image Title Name](/assets/img/blog/simple-site-setup.png)\n\nEvery sports champion has a ring or a jersey in the rafters that help show that their growth and accolades\nin the game. Developers, young aspiring programmers, and Administrators don't have a hall of fame to showcase\ntheir work but there are ways to let people see your accolades or follow you in your journey. Your \"how I got here\", the \"More than a resume\" page that sticks out if you will. Here is how to get it done with Github.\n\nBefore I get into it I want to express my frustrations when I find people online (more specifically Twitter) who have a domain\nin their bio that link to nowhere. I get so excited to see young individuals like myself in the tech field and want to learn\nmore about what they know or what they are working on currently, just to find out that they didn't keep up with their site.\nWith this blog you'll be able to keep your site up and running, give or take you pay annually for your domain.\n\n## Git and Github\n\nFor those newbies getting into programming or the tech field, the term version control and Github may be ready or said\nin your journey. Lets define what Github is. GitHub is a web-based hosting service for version control using Git. It is mostly used for computer code. It offers all of the distributed version control and source code management (SCM). To simplify it, it is an online spot to post your code and projects to share and collaborate with others. Github, in my opinion is a mix between a \"Dropbox\" for your code and a small social hub for programmers. It provides access control and several collaboration features such as bug tracking, feature requests, task management, and wikis for every project. There are hundreds of open source projects that host their software on Github which allows you to view what new features were added and how they were added. This can be resourceful when you want to learn how a company builds and compiles their code.\n\nTo learn more about [Git](https://en.wikipedia.org/wiki/Git) or [Features in Github](https://github.com/features)\n\n## Github and Gitlab Pages\n\nThe best part of this blog is using and setting up [Github Pages](https://pages.github.com/) and [Gitlab Pages](https://about.gitlab.com/product/pages/). Github Pages, is a [Jekyll driven](https://jekyllrb.com/) static site generator that is free to use to create plain text sites.\nFor those of you who have built sites only using HTML,CSS, and Javascript can rejoice because this will allow you to now use your knowledge and create your own site, and let these Pages do the heavy lifting and server hosting for you.\n\nThose who use php or python (flask, django, etc) wont be as excited. GitHub Pages is a static site hosting service and doesn't support server-side code such as, PHP, Ruby, or Python.\n\n### Finding the right theme\n\nSome of you readers don't have the time to build a static site from scratch and want to find something simple to use so you can start blogging or showcase your talent. For the ones that want to do that download one of the themes below.\n\n### Various Listed themes\n\n[Jekyll themes](http://jekyllthemes.org/).\n\nTo create a resume or Freelance page you can download the theme here.\n\n### Freelance Theme\n\n- [Demo](http://jeromelachaud.com/freelancer-theme/)\n- [Github Source](https://github.com/jeromelachaud/freelancer-theme)\n- [Shoutout to the developer](https://github.com/jeromelachaud)\n\n### Freelance Theme 2\n\n- [Demo Link](https://volny.github.io/creative-theme-jekyll/)\n- [Github Source](https://github.com/volny/creative-theme-jekyll)\n- [Shoutout to the developer](https://github.com/volny)\n\n### CV/Resume Theme\n\n- [Demo](https://jekyller.github.io/PanelCV/)\n- [Github Source](https://github.com/jekyller/PanelCV)\n- [Shoutout to the developer](https://github.com/jekyller)\n\n### Blog Theme\n\n[Demo](https://wowthemesnet.github.io/mediumish-theme-jekyll/) theme here.\n\n- [Download Link](https://github.com/jeromelachaud/freelancer-theme/archive/master.zip)\n- [Github Source](https://github.com/wowthemesnet/mediumish-theme-jekyll/)\n- [Shoutout to the developer](https://github.com/wowthemesnet)\n\nOnce you have your theme downloaded or ready to use, Login to Github and create a new repository.\n\nThe name of the repo will reflect the domain name that people will use to view the site.\nEx: [username].github.io\n\nNote: It‚Äôs important to name your repository in this manner; this will tell GitHub to host the files in this project automatically and display them when someone points their browser to:\nEx: http://username.github.com\n\nIn the description of your repo I would suggest writing \"My little corner of the internet\" but you can write anything to remind you that this is your project site.\n\nOnce you have your repo completed you can download the project onto your computer to edit with an IDE.\n\n## Private Vs Public Repo\n\nThe site will be available to the public along with the code written on the site so if you have projects or blogs drafted (which we will get into later) that you dont want to show anyone its best to go into the settings of the repo and make it private. Since the aquisition by Microsoft Github has now allowed the Github free users to create free private repos (which were once $7 a month per repo.).\n\nClick the green \"Clone or Download\" button of your new repo and download it to your machine. I would recommend created a folder in your documents directory and name it github, then put your project in that folder to stay organized with more repos in the future.\n\nExtract the project folder and then move your theme of choice into the new username.github.io project folder.\n\nThe jekyll projects are broken down and constructed with a specific directory structure.\n\n`includes/`\n`_layouts/`\n`_plugins/`\n`assets/`\n`pages/`\n`_config.yml`\n`.gitignore`\n`License.md`\n`Rakefile`\n`ReadMe.md`\n`index.md`\n\nThe directories starting with an underscore have materials\ndefining the basic layout and style for the site. If you want to build the site locally (for testing\npurposes), there will also be a `_site/` directory containing the\nactual site (with\n[Markdown](https://daringfireball.net/projects/markdown/) files\nconverted to html). You don't want the `_site/` directory in your\nrepo, so add that to your `.gitignore` file.\n\nThe assets/ directory contains any NON-MARKDOWN materials for the site (e.g.,\nimages or example code). These files won't be touched in the\nconversion but will be just copied over as-is.\n\nThe\npages/ directory contains\n[Markdown](https://daringfireball.net/projects/markdown/) files that will become html pages on your site.\n\nThe config.yml file contains all the configuration parameters you will need to modify your site.\n\nThe Rakefile has instructions for the conversion; you won't modify this file.\n\nThe index.md page is a Markdown version of the main page for your site. It contains headers with a particular form.\n\n---\n\nlayout: page\ntitle: simple site\ntagline: Easy websites with GitHub Pages\ndescription: Minimal tutorial on making a simple website with GitHub Pages\n\n---\n\nThis layout structure is how the Markdown will read the page and build it when it is pushed to github.\n\nNow go to the page about [how to make an independent website](independent_site.html).\n\n### An IDE for everyone\n\nWe will now need an IDE for writing changes to your code and updating the site. For this tutorial I would reccommend the [Atom IDE](https://atom.io/) and the [Github plugin package](https://github.atom.io/)\nAtom will help with uploading your work to github.\n\n### Building Your Site Locally\n\nTo test your site locally you can follow my thread [here](https://tedley.me/building-local-site/)\n\n### Making Sites without Jekyll\n\nIf you want a plain website without all of this\n[Jekyll](https://jekyllrb.com/)/[Markdown](https://daringfireball.net/projects/markdown/)\nstuff, you just need to add plain html,css, and Javascript\nand avoid naming directories that start with underscores.\n\nIf you want some directories with underscores, just include a file\nnamed `.nojekyll`. You might just include that anyway.\n\nI would recommend using [Jekyll](https://jekyllrb.com/) and\n[Markdown](https://daringfireball.net/projects/markdown/). Markdown makes building, maintaining, and writing html code so much easier.\n\nYou can [use a custom domain with Github Pages](https://help.github.com/en/articles/using-a-custom-domain-with-github-pages) as well.\n\n# In Conclusion\n\nWith this newfound information you can now host your own personal blog page, portfolio page, or an online CV to add to your resume for employers to see what you do in your free time. Technology is always growing and constantly changing so its great to show employers your passion and how you stay up to date with the trends of the world.\n\nIf you have any questions or want to work together and building a personal site feel free to contact me on twitter [@TechGameTeddy](https://twitter.com/techgameteddy)\n"},{"id":1548370800,"title":"Testing your site locally","date":"Jan 25 2019","excerpt":" \"Testing your site locally\"","img":null,"content":"To test your site locally, you'll need to install the following\n\n- [ruby](https://www.ruby-lang.org/en/)\n- the [github-pages](https://github.com/github/pages-gem) gem\n\n#### Installing ruby ####\n\nRuby has\n[Ways to download ruby packges](https://www.ruby-lang.org/en/installation/).\n\nOn an Linux system you can follow this [Ruby Installation link](https://www.ruby-lang.org/en/documentation/installation/)\n\nOn a Mac OS, older versions of ruby will already be installed. To get the latest versions of Ruby you can use the [Ruby Version Manager (RVM)](https://rvm.io/).\n\nOn a Windows system, use [RubyInstaller](https://rubyinstaller.org/).\n\n\n#### Installing the github-pages gem ####\nRun the following command in terminal or with your package manager:\n\n $ gem install github-pages\n\nThis will install the `github-pages` gem and all jekyll dependencies needed.\n\nYou can also update the github pages gem or any gem\nby running the following:\n\n $ gem update github-pages\n\n#### Testing your site locally ####\nNow that these packages are installed you can\nmove to your folder where your jekyll based site is and run\n\n $ jekyll build\n\nThis will create a `_site/` directory, that will have\neverything in your `assets/` folder, `index.md` and all files ending in .md in the `pages/` dir.\n\nTo test the site on your local workstation you can type\n\n$ jekyll serve\n\nThe output of the command should point you to the domain where your page can be seen.\n\nNow open your browser and go to <http://localhost:4000>\n"},{"id":1539558000,"title":"Good Dawg Hotdogs","date":"Oct 15 2018","excerpt":" \"Good Dawg Hotdogs Food Stand\"","img":null,"content":"\n## Good Dawg Hotdogs\n\n## http://www.garciatruckfood.com/votg/\n\n![Logo](/assets/img/garciatruck/votg_logo_final-300x300.png)\n\n<center><a href=\"http://www.garciatruckfood.com/votg/\"><b>Vegan on The Go</b></a> is a growing Vegan food truck located in south florida</center>\n\nCheck out the site here\n\n<div markdown=\"0\"><a href=\"http://www.garciatruckfood.com/votg/\" class=\"btn\">Go to Site</a></div>\n"},{"id":1538953200,"title":"GThread USA Apparell","date":"Oct 08 2018","excerpt":" \"Website for GThread USA Apparell\"","img":null,"content":"\n## GThread USA Apparell\n\n## http://www.garciatruckfood.com/gthreads/\n\n![Logo](/assets/img/garciatruck/gthread_final-1-300x300.png)\n\n<center><a href=\"http://www.garciatruckfood.com/gthreads/\"><b>GThreads USA Apparel</b></a> is a product of the vegan community of loving and caring indivuals who love to show their vegan roots.</center>\n\nShop Apparel now\n\n<div markdown=\"0\"><a href=\"https://gthreadsusa.myshopify.com/\" class=\"btn\">Go to Site</a></div>\n"},{"id":1538348400,"title":"Vegan On The Go","date":"Oct 01 2018","excerpt":" \"Good Dawg HotDogs\"","img":null,"content":"\n## Vegan On The Go\n\n## http://www.garciatruckfood.com/hot-dawgs/\n\n![Logo](/assets/img/garciatruck/hotdawg_logo_final-300x300.png)\n\n<center><a href=\"http://www.garciatruckfood.com/hot-dawgs/\"><b>The GoodDawg Hotdog Cart</b></a> is the result of the growth process of having worked in traditional hotdog carts for many years.</center>\n\nAs a vegan and a mother, GoodDawg Hotdogs showcase the wonderful, delicious and classic recipes with the responsible choices for our health and community. Try a loaded Vegan Dawg today. You'll never go back!\n\nCheck out the site here\n\n<div markdown=\"0\"><a href=\"http://www.garciatruckfood.com/hot-dawgs/\" class=\"btn\">Go to Site</a></div>\n"},{"id":1537743600,"title":"Garcia Truck Food","date":"Sep 24 2018","excerpt":" \"Website for Garcia Truck Food\"","img":null,"content":"\n## Garcia Truck Food\n\n## http://www.garciatruckfood.com/\n\n![Logo](/assets/img/garciatruck/fnf_logo_final-300x300.png)\n\n<center><a href=\"http://www.garciatruckfood.com/\"><b>The GoodDawg Hotdog Cart</b></a> is the result of the growth process of having worked in traditional hotdog carts for many years.</center>\n\nAs a vegan and a mother, GoodDawg Hotdogs showcase the wonderful, delicious and classic recipes with the responsible choices for our health and community. Try a loaded Vegan Dawg today. You'll never go back!\n\nCheck out his site and his latest work\n\n<div markdown=\"0\"><a href=\"https://www.kennymercury.info\" class=\"btn\">Go to Site</a></div>\n"},{"id":1537138800,"title":"FitnFresh","date":"Sep 17 2018","excerpt":" \"Website for FitnFresh\"","img":null,"content":"\n## FitnFresh\n\n## http://www.garciatruckfood.com/home-fnf/\n\n![Logo](/assets/img/garciatruck/fnf_logo_final-300x300.png)\n\n<center><a href=\"http://www.garciatruckfood.com/home-fnf/\"><b> Fit n Fresh Concessions</b></a> was born out of a vision to bring delicious and healthier alternatives to traditional concession food to the streets.</center>\n\nI wanted to make it approachable and even ‚Äúcraveable‚Äù to the mainstream non-veggie eater (like I was), as well as die hard vegans, vegetarians, and health conscious eaters who attend events without the options they desire.\n\nAfter wanting to improve on my own diet I was introduced to a whole new way of eating. I became more aware of the way in which food affects our lives, and the idea to make this concession trailer slowly began to emerge. If I could combine fun, delicious food with what is healthy I believed there would be a place in the concession food market for me.\n\nThe journey from the common fair food to sweet and savory healthy concession food has been an amazing and truly life changing experience and I hope everyone loves what I bring.\n\nWe are constantly growing and looking to include motivated passionate people to our events so if you are looking for a fun place to work give us a try!\n\nCheck out the site here\n\n<div markdown=\"0\"><a href=\"http://www.garciatruckfood.com/home-fnf/\" class=\"btn\">Go to Site</a></div>\n"},{"id":1536534000,"title":"Classic Vegan Kitchen","date":"Sep 10 2018","excerpt":" \"Classic Vegan Kitchen\"","img":null,"content":"\n## Classic Vegan Kitchen\n\n## http://www.garciatruckfood.com/classic-vegan-kitchen/\n\n![Logo](/assets/img/garciatruck/Vegan-kitchen-logo-300x300.png)\n\n<center><a href=\"http://www.garciatruckfood.com/classic-vegan-kitchen/\"><b> CVK, Keeping it Classic</b></a> Look for our black and white classic truck in South Florida</center>\n\nThe name says it all. We provide classic vegan meal with love and attention. Crom brownies to vegan pastries, we make sure our food is used to fuel you in the healthiest way possible. Follow our social media to learn more about our Classic Vegan treats.\n\nCheck out the site here\n\n<div markdown=\"0\"><a href=\"http://www.garciatruckfood.com/classic-vegan-kitchen/\" class=\"btn\">Go to Site</a></div>\n"},{"id":1535324400,"title":"create aliases","date":"Aug 27 2018","excerpt":" \"Terminal apps to make Linux living more fun\"","img":null,"content":"##  Using Linux aliases\n    How to define a Linux alias\n    Unix/Linux alias examples and syntax\n    Have a favorite Linux alias?\n\n# Using Linux aliases\n\nAliases in Unix and Linux operating systems are helpful. They let you define your own commands, or command shortcuts, so you can quickly execute commands or make your terminal work the way you want it to work. I'll share with you a few Linux aliases that I use on a daily basis.\n\nI've found it very helpful to create aliases to make my life easier. For Example, When Im looking to install or search for specific things in Ubuntu i dislike typing in the apt-cache search\" followed by a package name if im looking for something. So to eliminate that and make life easier I have created the following.\n\n alias search='apt-cache search'\n\nNow you can just type search instead of apt-cache search at your Linux command line:\n\n search ansible\n\nIn another simple alias example, instead of waiting for the (y/n) prompt when installing packages you can set this:\n\n alias install='sudo apt-get install -y'\n\nI've created an alias so I only have to type install like this:\n\n install ansible\n\nWhenever I use this alias, it automatically installs whatever packages im requesting if they are found.\nSome people may not like this or think its too aggressive but I am confident in the packages being added onto my system and this alias makes it easier.\n\nOne more simple alias example, instead of waiting for the (y/n) prompt when installing packages you can set this:\n\n alias update='sudo apt-get update'\n\nI've created an alias so I only have to type install like this:\n\n  update\n\nNow I can update all packages on my system with ease.\n\nUsing aliases allow you to create anything from simple shortcuts like this to powerful custom commands.\n\n### How to define a Linux alias\n\nCreating a Linux alias is very easy. You can either enter them at the command line as you're working, or more likely, you'll put them in one of your startup files, like your .bashrc file, so they will be available every time you log in.\n\nThe Linux alias syntax is very easy:\n\n    Start with the alias command\n    Then type the name of the alias you want to create\n    Then an = sign, with no spaces on either side of the =\n    Then type the command (or commands) you want your alias to execute when it is run. This can be a simple command, or can be a powerful combination of commands.\n\nUnix/Linux alias examples and syntax\n\n\n\nTo update these aliases and set them to  be saved and work immediately and everytime you log into your terminal\nyou would have to type in\n source ~/.bashrc\n\nSo to get things going you can create an update alias as well so any new alias shortcuts you create in the future\ncan be update with ease.\n\n alias update-bashrc='source ~/.bashrc'\n\nYou can get as creative as possible if you want and once you get to using linux as a daily driver you\ncan start adding more to your bashrc and thank yourself later. Enjoy\n"},{"id":1534719600,"title":"Terminal Magic with Linux","date":"Aug 20 2018","excerpt":" \"Terminal apps to make Linux living more fun\"","img":null,"content":"# Movie Magic Linux Apps\n\nmovie magic\nwpseku\nhollywood\nwttrn weather\nwttr.in Moon Phases\nTerminator Terminal App\npulling from github\nrunning and setting up terminator\n\nMaking the switch from Windows to Linux is getting easier every year. With more companies like Microsoft and Hollywood [\"Making the switch to\nlinux\"](https://cloudblogs.microsoft.com/windowsserver/2015/05/06/microsoft-loves-linux/) or [Casting open source as their lead role](https://www.omgubuntu.co.uk/2018/08/hollywood-turns-to-open-source) it becomes more and more of a buzz word and something of interest to the IT community...not that it never was. For all those people doing their research and learning more about Linux containers and Linux alternatives to Windows apps I have written a small list of some fun apps in Linux that you can enjoy while making the switch to Linux. None of these are better than the other but they can be relaxing to play or look at when your busy banging your head on making the switch. Movie makers or indie directors. There are also some fun terminal games and tricks to play that I want to show off. All of these have been tested on Ubuntu 16.04 and 18.04 for those who want to test and run these linux magic tools.\n\n## Hollywood\n[Hollywood](https://github.com/dustinkirkland/hollywood) is a fun way to throw some random images on your terminal and read random data quickly. I think this would be perfect for indie films that are in need of creating a hacker scene as bad as the entire CSI cyber show. I have yet to see this used in a film or show but have spent a few times running this in a terminal while friends walk in the room so they get scared and not bother me because they think im hacking into the matrix.\n\nSpeaking of the Matrix, those of you command-line kids who want to run random numbers down your screen like they did in the matrix can now do that in a Linux terminal. For those of you who are using ubuntu can type in the following and get started.\n $ sudo apt-get install -y cmatrix\n\nOnce installed you can just type 'cmatrix' and have your way.\nYou can find the source code for cmatrix on [GitHub](https://github.com/abishekvashok/cmatrix) under a GPL license.\n\nWhen I need a little break I have found ways to play games in terminal as well.\nThe best part of playing games in a terminal is that they are quick, simple, and easy to setup and start playing. No need for Playstation Plus or Xbox live subscriptions, just some simple and fun nostalgic games.\n\n## TETRIS\nTo install tetris in your terminal\n 1. sudo apt-get install -y libaa1 libaa1-dev bb python-aalib python3-aalib libaa-bin\n 2. curl -L https://github.com/samtay/tetris/releases/download/0.1.2/tetris-`uname -s`-`uname -m` -o tetris\n 3. sudo ln -s /lib/x86_64-linux-gnu/libncursesw.so.5  /lib/x86_64-linux-gnu/libncursesw.so.6\n 4. chmod u+x tetris\n 5. mv tetris /usr/local/bin/\n 6. now you can just type \"tetris\" to start playing.\nFor more info on playing tetris or to install from source you can checkout the [Github Repo here](https://github.com/samtay/tetris).\n\n## WTTRN Weather in Terminal\nhttp://wttr.in/\nOne of the first things I do when I walk into my office in the mornings is check the weather. What sites do most people go to.... it doesn't matter anymore because you can do it in terminal!. With the wttr.in site created by [Chubin](https://github.com/chubin) you can run a quick curl request by typing in the following command and get the weather forecast for the next three days.\n $ curl wttr.in/muc      # Weather for IATA: muc, Munich International Airport, Germany\n $ curl wttr.in/ham      # Weather for IATA: ham, Hamburg Airport, Germany\n\nIn these examples if yo change the location after the '/' you can find out the weather forecast in different cities as well. If you leave the following slash empty it will find your general location and give you the forecast as well. I love this app so much that I created an alias for it so I can run a quick command to check the weather in my area every day. To do so you can edit your .bashrc profile and add the following line\n $ alias check-weather='curl wttr.in'\nTo learn how to create an alias or understanding alias in Linux you can read my blog about that [here](https://tedley.me/create-aliases/)\n\n## Moon\nAnother nod to the developer [Chubin](https://github.com/chubin) is a tool that allows you to\ncheck the phases of the moon. I created a alias for this as well and like to check this every once in a while\nfor full moon nights so relax on the beach.\n $ alias check-moon='curl wttr.in/Moon'\n\n\nCheck them out on his github channel and throw a star up there to show some love and respect.\n\n## Rates.sx\n[Chubin](http://rate.sx/) has also created a list of other fun web apps like Rates.sx which allows you\nto curl and view currenty crypto currency rates.\n![Crypto-Rates](/assets/img/blog/crypto-rates.png){:class=\"img-responsive\"}\n\n## Campfire and Matrix\nIf your looking for cool visuals and just want to impress your friends you can always start up a virtual Campfire\nor run \"the matrix\" and have them think your doing things beyond the scope of what computers can currently do.\n![Campfire](/assets/img/blog/campfire-terminal.png){:class=\"img-responsive\"}\n![Cmatrix](/assets/img/blog/cmatrix.png){:class=\"img-responsive\"}\n\n\n## Star Wars Movie\nhttps://itsfoss.com/star-wars-linux/\nOne of of my favorite things to do in a linux terminal (other than running ansible playbooks and cloning github repos) is to keep up on this star wars project. Click the link and enjoy.\n\n\nIf these apps have found you excited for a breif moment in time try running them all in multiple terminals with\n[Terminator](https://gnometerminator.blogspot.com/p/introduction.html). Terminator allows you to arrange multiple\nterminal windows in a grid like fashion and expand or shrink them to your liking. You can group them, preset the layouts so that multiple windows open up at the same time. I find it useful for managing multiple application servers (before i started using ansible).\n\nThe best parts of using Linux is learning and having fun while doing so. I hope these apps listed find you and allow you to get creative and make your own fun terminal apps. Ill have some fun ones coming soon. Enjoy.\n\n\n## Resource Links\n**[Star Wars Terminal](https://itsfoss.com/star-wars-linux/)**\n**[hollywood](https://github.com/Techgameteddy/hollywood)**\n**[CSI Cyber](https://en.wikipedia.org/wiki/CSI:_Cyber)**\n**[WTTRN SITE](http://wttr.in/)**\n**[WTTRN CODE](https://github.com/chubin/wttr.in)**\n**[Terminator App](https://gnometerminator.blogspot.com/p/introduction.html)**\n**[Campfire](https://www.tecmint.com/20-funny-commands-of-linux-or-linux-is-fun-in-terminal/)**\n**[Crypto-currency Rates](http://rate.sx/)**\n**[CMatrix](https://github.com/abishekvashok/cmatrix)**\n"},{"id":1534719600,"title":"Movie Magic with Linux","date":"Aug 20 2018","excerpt":" \"The Open Source MS Outlook Alternative\"","img":null,"content":"\nHollywood has finally gone open source\nhttps://www.omgubuntu.co.uk/2018/08/hollywood-turns-to-open-source\n\n\n# Movie Magic Linux Apps\nmr robot does it right\ntools for movie magic\nindie developers\nhollywood\nWPSEKU\nwttrn weather\nStress test\nTerminator Terminal App\npulling from github\nrunning and setting up terminator\n\nIn the midst of listening to weekly [Linux Unplugged podcas] and searching the catacombs of Github I overheard discussion of a new app to try out.\n[S-TUI](https://github.com/amanusk/s-tui) is a terminal UI for monitoring your computer.As a linux admin im always looking for ways to find or gather system information. This app allows you to not only gather that information in a cool and visual way, it also allows you to run a stress test on your pc to further test its performance.\n\n![](https://github.com/amanusk/s-tui/blob/master/ScreenShots/s-tui2.gif?raw=true)\n\n\n\n\n### Installation on Ubuntu\nThe latest stable version of s-tui is available via pip. To install pip on Ubuntu run:\n sudo apt-get install gcc python-dev python-pip\nOnce pip is installed, install s-tui from pip:\n(sudo) pip install s-tui\n\nA ppa is available (xenial,bionic)\n\n sudo add-apt-repository ppa:amanusk/python-s-tui\n sudo apt-get update\n sudo apt-get install python3-s-tui\n\n### Other Stress test tools\nstress - tool to impose load on and stress test a computer system\nstress-ng - tool to load and stress a computer\n"},{"id":1534114800,"title":"Bash-Scripting and Backups","date":"Aug 13 2018","excerpt":" \"Creating Bash Script Backups\"","img":null,"content":"\nThis blog is inspired by **[Ninite](https://ninite.com/)** and the **[OMGUBUNTU's](https://www.omgubuntu.co.uk/2018/04/things-to-do-after-installing-ubuntu-18-04)** Things to do after installing Ubuntu.\n\nDuring your lifetime you'll have to eventually upgrade your pc's from your college day laptop with all your cool hipster stickers on it to a new pc for paying bills, binge watching a good show, and scrolling through social media. As a tech savvy individual there are tons of factor involved in getting a new pc or building a new pc from **[PC Part Picker](https://pcpartpicker.com/)** but there are many commonalities involved in getting a new pc. One of those is how am I going to reinstall all my apps and programs back onto my computer. This blog will explain how I went from bashing my head to bashing scripting an install script. Lets start with Ninite....\n\n# Ninite and New PC's\nNinite is a website that installs and updates a batch of selected software on\na windows machine. The list of applications range from media applications, steam for gaming, google chrome, dropbox, vlc video player, Itunes, Spotify, Evernote, free antivirus software, and utilities like teamviewer and messaging apps like Skype. With just a few clicks you can install all your necessities without having to click \"I accept\" or \"Next\" several times for each application (which can take hours). This tool has helped me in time crunches when setting up new computers for clients, co workers, or friends and family. A few years ago Ninite had options to run batch installs on mac and Linux as well but those days and, what I think was a cost in time and maintenance, have met their demise.\n\nSince the fall of 2009 Ive been a Linux user and have tried installing numerous amounts of packages on Ubuntu using the Software Center but in 2012 when I gave up on Windows and did a deep dive into using Ubuntu Linux as my daily driver thats where I ran into some trouble. I noticed that every six months Ubuntu releases a new version loaded with cool features and a cooler code name, but my \"in place upgrades\" (by running sudo apt-get upgrade) never seemed to upgrade properly. After switching laptops, rebuilding pc's and manually backing up my hard drive, wiping it, and reinstalling a fresh copy of Ubuntu I started to realize that Linux users and sysadmins don't work that way. I decided to take a syadmin quote \"Anything you have to do more than twice has to be automated\" and apply it to this time consuming problem i'm having.\n\n# Fresh Install for all\nThe Fresh Install script Utility is a menu driven script to backup and restore files from an Ubuntu desktop. Its built to be added to your github account for personal use.\nInspired by OMG Ubuntu's infamous Top Things to do after Installing Ubuntu xx.xx articles that you can read **[here](http://www.omgubuntu.co.uk/2017/04/things-to-do-after-installing-ubuntu-17-04)**\n\n# Features\n* Backup Currently installed packages\n* Backup Snap Packages\n* Backup Alias Shortcuts for user running the script\n* Install Snapd\n* Install [Neofetch](https://github.com/dylanaraps/neofetch) - A command-line system information tool\n* Restore Backed up snaps and packages from broken machine or new pc\n\n## Screenshots ##\n\nMain Menu\n![screenshot](https://github.com/tmeralus/fresh-install-linux/raw/master/img/main-menu.png)\n\nBackup Utility\n![screenshot](https://github.com/tmeralus/fresh-install-linux/raw/master/img/backup-utility.png)\n\nThe fresh install script doesn't provide a list of essential tools that are needed for linux systems or daily drivers because what one person claims as \"necessary\" are few and far between. IT is more of a backup script that backs up a list of packages installed on your computer, alias shortcuts, and snap packages that are installed on your computer and backs them up to your github account. Many features have been changed and get updated when I think of new ways to add features to help backup important user files in linux. There is also quote that **[Gerald Weinberg](https://en.wikiquote.org/wiki/Gerald_Weinberg)** once said that applies to this script. \"A system is never finished being developed until it ceases to be used.\" I personally think that applies to scripts, applications, and programming languages (or anything that is create for that matter).\n\nThis script will forever be \"in development\" and if there are any comments, questions, or features you would like to add feel free comment or tweet me.\n\n**Here is a big of the script for those who want to a few looks**\n\n```\n## Check backup list with current pc package list\nBK5(){\n\tdpkg -l | grep ^ii | awk '{print $2}' > $BKDIR/currentlist\n\tsort $BKDIR/currentlist $BKDIR/backups/backuplist | uniq -u > diff.txt\n\tif [ -s diff.txt ]; then\n\techo \"Certain pacakges from backup havent been installed\" && sleep 2\n\techo \"Run the insatller again until this file is empty\" && sleep 2\n\techo \"Current packages not installed from backup\" && sleep 4\n\tcat diff.txt\n  else\n\techo \"Backup matches currenly installed Packages\" && sleep 2\n\tfi\n\tpause\n}\n```\n\nIn writing this quick blog I hope to encourage others to find useful ways to resolve issues on their computer so they get insipried to learn something new or use this to motivate them to come up with new ideas to automate or fix other things in their homes and become more productive. Share the wealth, share the knowledge, share the freedom. \n\n\n# Resource Links\n**[Ninite https://ninite.com/](https://ninite.com/)**\n**[OMGUBUNTU's https://www.omgubuntu.co.uk/2018/04/things-to-do-after-installing-ubuntu-18-04](https://www.omgubuntu.co.uk/2018/04/things-to-do-after-installing-ubuntu-18-04)**\n**[PC Part Picker https://pcpartpicker.com/](https://pcpartpicker.com/)**\n"},{"id":1533510000,"title":"New App Alert Stress Test Tool","date":"Aug 06 2018","excerpt":" \"Stress-Terminal UI monitoring tool\"","img":null,"content":"# NEW APP ALERT\nIn the midst of listening to weekly [Linux Unplugged podcast](https://fireside.fm/s/RUkczH-V+uGpzjfPp) and searching the catacombs of Github I overheard discussion of a new app to try out.\n[S-TUI](https://github.com/amanusk/s-tui) is a terminal UI for monitoring your computer.As a linux admin im always looking for ways to find or gather system information. This app allows you to not only gather that information in a cool and visual way, it also allows you to run a stress test on your pc to further test its performance.\n\n![](https://github.com/amanusk/s-tui/blob/master/ScreenShots/s-tui2.gif?raw=true)\n\n\n##S-TUI\n![](https://github.com/amanusk/s-tui/blob/master/ScreenShots/stui_logo.png?raw=true) is a python terminal app that has some of the coolest looking visuals I have found in a tight night interactive User Interface. It doesn't slap you in the face with tons of scary and confusing numbers or logs. It requires very minimal dependencies from python which makes it a perfect fit for linux boxes to use without the hassle of installing other python packages.\nLinux junkies looking to test out the cores of their processors or monitor the power and temperature of their cpu should definitely try it out.\n\n## Finding the Fun\nThe best parts of Linux are finding fun tools but using them to get things done. Here is a list of some some good reasons for using this app.\n\n* Indie film directors can add this as background noise in a computer hacking scene\n* Linux users who want to impress your friends\n* Linux users who want to find a clean way to check CPU performance through terminal\n* Linux users\n* Linux Admins looking to stress test linux servers for monitoring and testing  \n* Developers using Raspberry Pi's or old PC's who want to monitor CPU performance\n\n## Installation on Ubuntu\nThe latest stable version of s-tui is available via pip. To install pip on Ubuntu run:\n sudo apt-get install gcc python-dev python-pip\nOnce pip is installed, install s-tui from pip:\n(sudo) pip install s-tui\n\nA ppa is available as well (xenial,bionic)\n\n sudo add-apt-repository ppa:amanusk/python-s-tui\n sudo apt-get update\n sudo apt-get install python3-s-tui stress\n\n## Other Stress test tools\n stress-ng - tool to load and stress a computer\n\n# How to use S-tui\n\n\nFor more information on the new app you can start and fork it on Github\n[S-TUI Github Page](https://github.com/amanusk/s-tui)\n\nTo listen in on the LInux Unplugged Podcast you can either search\non your favorite podcast platform or click the link below and press play.  \n[Linux Unplugged podcast](https://fireside.fm/s/RUkczH-V+uGpzjfPp)\n\nFollow me on Twitter to learn more about the tool and chat about troubleshooting\nif your having trouble using it.\n[@TechGameTeddy](https://twitter.com/techgameteddy)\n\n## More coming soon\nUntil Next time...\n"},{"id":1523055600,"title":"Kenny Mercury","date":"Apr 07 2018","excerpt":" \"Personal Page for artist and producer Kenny Mercury\"","img":null,"content":"\n## Kenny Mercury\n\n## https://kennymercury.info\n\n![Mercury Music](/assets/img/kennymercurysite.png)\n\n<center><a href=\"https://kennymercury.info\"><b>KennyMercury.info</b></a> is a personal page for producer, audio engineer, and rap artist</center>\n\nKenny Mercury is a music producer, audio engineer, rap artist, and my brother. **kennymercury.info** is a personal site used to showcase his latest work and current\nprojects.\n.\n\nCheck out his site and his latest work\n\n<div markdown=\"0\"><a href=\"https://www.kennymercury.info\" class=\"btn\">Go to Site</a></div>\n\n*https://www.kennymercury.info*. is a site built with HTML5, CSS3, and Javascript\n"},{"id":1518735600,"title":"Nick Foles and Ansible","date":"Feb 16 2018","excerpt":" \"Using Ansible and runnning as second string\"","img":null,"content":"\n![Philly Special](/assets/img/blog/philly-special.jpg)\nThe Philly Special (also known as Philly Philly) was a trick play between Philadelphia Eagles players Corey Clement, Trey Burton and Nick Foles on fourth-down-and-goal toward the end of the second quarter of Super Bowl LII. Foles lined up in the shotgun formation, but moved up to the right side of the offensive line behind right tackle Lane Johnson and yelled \"kill, kill\", followed by \"Lane, Lane.\" Foles then stayed on the right side of the offensive line and the ball was snapped to running back Corey Clement. Clement then ran left and flipped the ball to Trey Burton, to complete a reverse to the right side of the field. Finally, Burton threw the ball to Foles, who ran a route to the right corner of the end zone and made the catch for a Philadelphia touchdown. After the extra-point was successfully kicked by Jake Elliott, the Eagles went up 22‚Äì12, maintaining the score into halftime.\n\nOn February 4th, 2018 I was sitting at a friends house in West Palm Beach Florida after waking up in Philly and regretting not staying another day in PA to watch the game at a bar and enjoy my teams win. One week before my new job as a Linux administrator I knew that this job would be a job I plan on staying at for quite some time. With that knowledge I'm going to need to be ready and prepared with special plays prepared for when I get hit with a blitz at my new job.\n\nFor Nick Foles, the backup QB of the Philly Eagles to be confident enough to try a special play during the most critical\ngame of his career, he has to be both well versed in the game of Football, trust all his team, and have confidence in himself. So, how do I become a Nick Foles. I knew that I would be working with the other Linux Administrator to take the load off his back while he finishes other big projects so I would be the second string Linux Admin in the office (or Jr Linux Admin), so we have that in common. I'm comfortable in bash scripting and in a terminal on CentOS and Ubuntu already (just like Nick knows his QB plays), but I don't have that special move and don't know how they manage all the Linux servers in the office yet. What is a guy to do in this situation..... take the opportunity to learn a new skill.\n![Philly Philly Play](.assets/img/blog/philly-special.jpg){:class=\"img-responsive\"}\n\nI quickly searched to find the best Configuration Management tool that helps with Virtual Machines and is quick to learn. After understanding more about the structure and orchestration of the most popular Dev Ops tools I found that Ansible (which I was already using for small commands in a dev environment) was the best choice. It has close to no footprint on remote systems and is the best solution to keep in my back pocket.\n\n![Ansible](/assets/img/blog/ansible-logo.png){:class=\"img-responsive\"}\nTo learn more about Ansible I found one of the best articles on Linux Journal by Shawn Powers (thank you big guy) that helped me get a clear understanding of how to setup playbooks and use those to update multiple systems.. Now, I know what your thinking, your jumping the gun Ted, wait until you get into the job and find out how they do things so you can follow suite. There were two things that were certain before starting this new job other than death and taxes. One, that I had to be on top of my game, and two, that I should be prepared to pick up and learn new things quickly and make sure im able to test and deploy these things quicker than I normally do at home. Well, I was right.\n\nShortly after 30 days in the office and learning how the network is setup in the office I found that the way in which web servers were being updated along with hosts files on specific servers were all done manually and took anywhere between 15-45 minutes depending on the pool of servers.\n\nUpdating applications, backing up folders, using shell commands like rsync and running commands to stop and start services on servers in an order that made sure all specified service run the way they should would have taken me 6 minute per server to do on a weekly basis. 6 minutes for 16 servers...thats 96 minutes! With ansible I can organize what commands get run, when they get run, cron them out to run on a scheduled time, and name it kill_kill_lane_lane.yaml for chuckles in the office has turned it into a 6 second job (with 10 seconds to wait for alerts to flood my\nemails that things are working).\n\n![Ansible Play](/assets/img/blog/ansible-play.png){:class=\"img-responsive\"}\n\nI don't want to go into the specifics of how my office does things obviously but I can say that I've used Ansible on more occasions than one and have reduced the time it take to update Configuration files on 10+ servers from 45 minutes to less than 45 seconds.\n\nThe file modules in Ansible's documentation are easy to understand and Ansibles ability to use the --check or \"dry run\" flag to test playbooks before pushing them to groups of servers saves me so much time in my current job and helps prevent any \"oh shit\" moments at work too.\n\nIn conclusion I'm now able to run my very own Philly Philly when my team needs to make critical changes to multiple servers. Being confident and always willing to learn new things has been the best part of Ansible deployment and my job as a Linux administrator.\n\nI will be pushing Ansible playbooks and have more blogs about Ansible coming soon.\n\n## https://en.wikipedia.org/wiki/Philly_Special\n\n## https://www.linuxjournal.com/content/ansible-making-things-happen\n"},{"id":1514761200,"title":"QA Analyst Challenge","date":"Jan 01 2018","excerpt":"  \"QA Analyst Challenge\"  ","img":null,"content":"\n\n###### WE ONLY GET ONE LIFE, WASTING SOMONE'S TIME IS THE SUBTLEST FORM OF MURDER \n\n## If you reading this its never too late\nHere is a guide and a list of steps I have taken to help get you a remote job as a QA Analyst position. My expectation is that you read this entire document, follow the steps at the bottom of the page, message me if you need help, and get you pointed in the right direction. BE WARNED: This will be sprinkled with quotes to help you start. I wrote this out because you expressed interest in getting a remote job, breaking into the tech industry, or just looking for a career move. I want you to know I am here to help however I can. I want you to not feel like its too late or your too old to get help starting something new.\n\nIt's never too late - never too late to start over, never too late to be happy. It's never too late. Don't focus on what was taken away. Find something to replace it, and acknowledge the blessing you have.\n\n### QA ANALYST TERMS AND AGREEMENTS \nYour reading this because you expressed interest in breaking into the tech field and becoming an QA analyst/engineer. I am here to help.. with some caveats. \nAs the quote at the top of this page explains, time is of the essence and I find my time to be more important than ever now that I have a child to take care of :). \nWith that being said, it is your responsibility to dedicate the time and effort to land a job in the IT industry. The QA analyst position is a great entry level position that can be used to find a remote job and ease yourself into the life of an IT professional. The time it takes for someone to get into the industry all relates to a few factors. \n* How much time you spend learning new things \n* How quickly it takes for you to understands things \n* How long it takes you to ask questions (having me as someone in the industry that can answer the simple and complex questions is like having Lebron James's trainers and nutritionists which can be a tool that should be abused at all times)\n\nI have ready success stories of people who dedicated a month and landed a 50k salary job, and stories of people who spent 9 months or 2 years to get to that level. It all comes down to how disciplined you are to study. External factors like family, moving, illness, and other things may slow you down but you should make sure that they don't stop or halt your progress indefinitely. If you ever fall back in your studies try and use this quote to help you along the way. \n\n```\n\"The man who moves a mountain begins by carrying away small stones.\" ‚ÄîConfucius.\n```\n\nIf you are ready to get started and looking for steps to become a QA analyst, continue reading.\n\n\n\n---\n\n# What is QA Testing? \nHere is a guide for tips and tricks on becoming a QA Analyst.\nQA stands for Quality Assessment or Quality Assurance. \n\nThe textbook definition of QA Analyst is as follow: \nA QA analysts, in a broad sense, test products across industries to ensure a brand's quality standards are met and regulatory compliance standards are upheld. However, in a modern world, QA analysts typically work in a high-demand, technology-driven role testing software that meets individual and enterprise needs for all industries. For people looking to start a job in a growing technical field, becoming a QA analyst may be a good fit. In this article, we discuss what a QA analyst does, their work environment, what salary to expect, skills required and how to become one.\n\n\nIn Ted's Terms, \nA QA analyst is a quality tester that is used for checks and balances. If An engineer is building a car, a QA tester would drive the car or check the air pressure in the tires of the car, or the height and weight, or more, before the car gets sent to a dealership. In the software world there are lists of applications that can run and pass tests that will click buttons to make sure they are doing what they need to be doing or checking the speed of websites when links or clicked, but humans are the end users of most software tools and humans are still needed in the process. That is were QA comes into play. Because testers of software don't necessarily need to understand a programming language or know the architecture of a system, this make it an easy entry level way of breaking into the IT field. \nWith that being said, QA analysts end up learning to read programming languages and understand system architecture and design while running tests which also makes it a great place to grow in the field as well. \n\n\n# QA Automation Tools \nA good question when learning about QA testing is What tools or software should I use or learn with? What are some common terms to know for interviews? What should I download to get started? Here are some popular tools and verbiage to look into for conversations and understanding. \n\n**SOFTWARE**\n* Cypress end2end automation tool [https://www.cypress.io/]\nCurrently used at my job for testing API and Frontend related components of our application. \n* Selenium \nWebsite: http://www.seleniumhq.org/\nLicense: Open-source\n\n* Katalon Studio\nWebsite: https://www.katalon.com/\nLicense: Free & Commercial\n\n**Words and References**\n* unit test - breaking down small units of code to make sure it works \n* smoke testing - pulling the application into an iso env to run it and make sure its not smoking \n* regression testing - instead of ensuring the functionality of the system we want to ensure the functionality \nof a system with a new feature added. \n*  End To End testing - e2e - testing all components of the application from front to back to ensure stability  \n\n# Things to DO \nHere is a list of first steps that I will need you to complete within 7 days to prove to me that my efforts and time along with your desire to change careers will not be a waste of time for either of us.\n\n\n## Step 1: Build a Resume \nuse google docs (free) if you have a gmail account or use microsoft word online for free (if you have a hotmail or msn or microsoft account it comes free with your account).  \n\n## Step 2: Share the Resume \n-[] Share the resume to me so I can help review it and give you the next steps on keeping it up to date. \n\n## Step 3: Social Media \n-[] Create a linkedin profile \n-- add all your work experiences, regardless of if its not in the tech field, some people during the interview process like to see where your career first started and like asking what got you into the Tech field. \n\n-[] [add me on linkedin](https://www.linkedin.com/in/tmeralus/)\n--because i have been using linkedin my impressions and search appearances show up at a lot of recruiters screens. Adding me will allow you to pop up in other recruiters search engines when they are looking for candidates. \n\n## Step 4: Github \n-[] Create a Github profile \n-- github is an online place where developer and programmers share code. It has become so popular that companies keep their projects on there. The linkedin and Github accounts are the first steps to building an online presence to showcase your skills and makes it easier for people to look you up. These profiles can be made with ease and will boost your appearance when people search for you on google. Linkedin can also be a tool for applying for jobs, talking to recruiters, or looking up businesses. \n\n\nTIP: add a picture to your github profile. Adding a picture helps certain people see that you use your profile frequently enough to give it some character. This may or may not help with landing a job but it has been mentioned in meetings that I have been in when it comes to hiring someone. My profile picture in github and the one I use at work gets compliments and helps me stand out of the crowd.\n\n\n## Step 4: Send me the data \nNow that we have the beginnings of your online portfolio and you have proven your interest in starting in this direction we can start the real studies. \n\n\n\n\n#### Certificates and Criteria\nMy goal here is to help you get a certificate to help solidify and showcase your skills as as software tester. Getting a certificate will help employers prove that you have the knowledge, discipline, and the skills it takes to test their software. \nMy selfish goal is to be able to have closer friends in the IT field that I can share information with or talk tech around a campfire with burgers and beverages in the near future. I am selfishly trying to help you so that I can build this community. \n\n#### Criteria \nMy dad helped me get my Comptia A+ certificate when I showed him how hard I studied and gave me an option that I plan on giving you. He proposed that he would help pay for half of the certificate exam for me so I don't have to stress about paying for the exams. If I passed the exam, he will pay for half of the second part of the two part exam again. If I were to fail either of these exams I would have to pay him the full amount of the exam. Knowing that the exam was half paid off helped easy my mind and let me focus more on the studies. I am willing to do the same for you. \n\nYour option, if you choose to take it, is what I like to call the double or nothing option. \n\nOption 1: Ted will pay for half of any certification exam for certificates related to getting a job in the tech field. If you choose this option and fail the exam, you must pay Ted back the full amount for the exam. \n\nOption 1 example: Exam costs $200. Ted will assist in paying $100 (or 50%) or the price of the exam. If you fail the exam you will have to pay Ted back $200 (or the full price of the exam)\n\n\nOption 2: Ted will pay for the entire cost of the exam. If you fail the exam you will have to pay Ted back double the amount paid for the exam. \n\nOption 2 example: Exam cost $200. Ted will assist in paying $200 (or 100%) or the price of the exam. If you fail the exam you will have to pay Ted back double (or twice the full price of the exam) equalling $400 \n\n\n\n## Step 5: Begin the real studies  \nNow that you are finally here and have read through this entire thing we will start your studies and I will send you new study material for popular websites to get your certified and on track. You must text me \"I am ready to take on the QA challenge and waiting for the next steps\". \nOnce you have texted that send an email with the following criteria\n```\nSubject: QA Analyst Studies (first name)\nBody: Hey, i'm ready to get started in my journey to become a QA analyst, help me with step one. \nmy github username is <your github profile user name or github url >\n```\n\n# Side Notes \nI take pride in finding cheap and affordable laptops and have highly considered buying macbooks for $200 so if you feel that you might need a computer that is up to speed for testing and want me to buy you one Im willing to work with you to find the right machine for testing. I have been forced to use macbooks for work because these jobs won't buy me a machine with linux installed on it for stupid security reasons. I thinking finding slighly older macbooks or laptops no one uses anymore are great resources to get everything you need to build your career. I started with a $200 laptop and tried to make a promise to myself that I wont spend $60,000 to build a career. Currently if I had to total all the money I have spent to get the certificates I have gotten and the laptops I have used for studying purposes only I have spent less than $1,000 to gain the knowledge you can get from a 4 year university degree. \nIf that is something that interesting you, you can put it in an email. \n\n\n \n"},{"id":1508367600,"title":"BTRFS Filesystems","date":"Oct 19 2017","excerpt":" \"Hot swappable Filesystems\"","img":null,"content":"\n## Hot swappable Filesystems, as smooth as btrfs\nFilesystems, like file cabinets or drawers, control how your operating system stores data. They also hold metadata like filetypes, what is attached to data, and who has access to that data. For windows or macOS users\n\nQuite honestly, not enough people consider which file system to use for their computers.\n\nWindows and macOS users have no valid reason to look into filesystems because they have one thats been widely used since its inception. For Windows thats NTFS and macOS thats HFS+. For Linux users, there are plenty of different file system options to choose from. The current default in the Linux field is known as the Fourth Extended Filesystem or ext4.\n\nCurrently there is discussion for changes in the filesystem space of Linux. Much like the changes to the default init systems and the switch to systemd a few years ago, there has been a push for changing the default linux filesystem to the BTRFS. No, I'm not using slang or trying to insult you. BTRFS stands for the  B-Tree file system. Many Linux users and sysadmins were not too happy with its initial changes. That could be because people are generally hesitant to change, or because they change may have been too abrupt. A friend once said, \"I've learned that fear limits you and your vision. It serves as blinders to what may be just a few steps down the road for you.\" In this article I want to help ease the understanding of BTRFS and make the transition as smooth as butter. Lets go over a few things first.\n\n## What do Filesystems Do\nJust to be clear, we can summarize what filesystems do and what they are used for. Like mentioned before filesystems are used for controlling how data is store after a program is no longer using it, how to access that data, where that data is located, and what is attached to the data itself. As a sysadmin, one of the many tasks and responsibilities is to maintain backups and manage filesystems. Partitioning filesystems help with separating different areas in business environments and is common practice for data retention. An example would be taking a 3tb hard disk and partitioning 1tb for your production environment, 1tb for your development environment, 1tb for company related documents and files. When accidents happen to a specific partition, only the data stored in that partition is affected, instead of the entire 3tb drive in this example. A fun example would be a user testing a script in a development application that begins filling up disk space in the dev partition. Filling up a filesystem accidentally, whether it be from an application or a users script or anything on the system, could cause an entire system to stop functioning. If data is partitioned to separate partitions, only the data in that partition will be full or affected, so the production and company data partitions are safe.\n\nThe ext4 filesystem used in Linux systems, for example, is a journaling file system which means it keeps a journal of where files are located on a drive and journals changes that happen on the drive.\n\n## Advantages of Ext4 filesystem\nThe ext4 filesystem used in Linux systems, for example, is a journaling file system which means it keeps a journal of where files are located on a drive and journals changes that happen on the drive. Some advantages of ext4 partitions are that you can do the following:\n\n* have encryption on specific volumes\n* you can mount volumes on demand\n* you can snapshot, format, or defragment volumes independent of each other.\n\nSome of the drawbacks of ext4 are:\n * more chances of filling up disk partitions with isolation\n * increased administrative overhead for whoever is managing these disks\n * there are difficulties creating a consistent snapshot for applications running on different partitions.\n * ext4 uses more resources than other filesystems.\n * doesn't support transparent compression\n * doesn't support transparent encryption\n * doesn't support data deduplication\n\n## Making change for the BTR... I mean Better\nBtrfs, is pronounced as Butter FS, Better FS, or B-Tree FS, although I don't think people don't use the latter. It is a CoW (copy on write) file system remade from the ground up. Developers wanted to expand the functionality of a file system to include additional functionality for better snapshots and pooling volumes. The author of BTRFS stated that the goal of BTRFS is \"to let Linux scale for the storage that will be available\".  Btrfs expands the functionality of ext4 and adds features like having a seemingly continuous file system across the multiple hard drives for consolidating data across large partitions. Some of the best features of Btrfs are:\n* Data deduplication\n* Data mirroring\n* Self healing of and checksums for data and metadata\n* Customizable retention policy\n* Secure data consistency of backups.\n* adding new drives to full storages drives for data retention\n\nData deduplication can reduce the amount of the actual space data could occupy, and the data mirroring could become easier with Btrfs as well. Files are the most important parts of data on your hard drive. Btrfs has other features like scrubbing, self-healing data, and other features for data integrity and security. RAID features can be used to remove devices online, freely convert between RAID levels after the filesystem has been created and mirror across large devices. Having the versatility to update and change the raid levels or verify checksums are verified along with repairing broken copies of files can be enough to consider making the switch.\n\n\n# Examples\nA few examples and some commands to be used with BTRFS are\n\n* Balance Filesystem\n\nBalancing a filesystem spreads the data across different disks in an even manner. If disk's are not equal in size, eqaulity will be by percentage capacity utilized ( all disks will be at the same % utilization). A good time to do this would be after adding more disks to a volume.\n\n\n btrfs balance start [btrfs mount point]  \n\n\nThe balance command can take a very long time. Check the progress with the following command:\n\nbtrfs balance status /path/to/mount  \n\n\n\n* Changing RAID Levels\n\nChanging RAID levels is similar to balancing filesystems. In most cases on an ext4 system you would need to format and backup the filesystem to set it up as for RAID functionality. With BTRFS you can setup a RAID a bit easier.\n* NOTE: I would not suggest doing this if you are not sure what RAID is or have little knowledge of high-level concepts of device storage and mirroring.\n\nFor setting up RAID on more than one devices you can run this command:\nIn this example sda1 and sdb1 are the two devices being setup.\n $ mkfs.btrfs -m raid1 -d raid1 /dev/sda1 /dev/sdb1\n\nCurrently acceptable RAID levels are RAID0, RAID1, and RAID10. Raid10 requires 4 or more disks.\n\nCreating a RAID10 striped mirror in Btrfs would look something like this.\n$ mkfs.btrfs -m RAID10 -d RAID10 /dev/sda1 /dev/sdb1 /dev/sdc1 /dev/sdd1\n\n\n* Defragment\n\nDefragment a file or a directory to check its health, type this command:\n$ btrfs filesystem defragment [btrfs filesystem path]  \n\n\nScrubbing a filesystem can help remove errors on a device. To scrub possible errors on\n/dev/sda1 you can run this command\n\n$ sudo btrfs scrub start /dev/sda1  \n\nScrubbing is done in the background of a filesystem so you can still use a filesystem while scrubbing is taking place. You can check the scrub status by running this command:\n\n$ sudo btrfs scrub status /dev/sda1\n\n* Adding a Device\nYou can add devices to help extend storage on btrfs by running this command\n\nbtrfs device add -f /dev/sda1  \n\nA rule of thumb after adding a device would be to balance the filesystem.\n\n* Removing a  Device\n\nbtrfs device delete /dev/sda1  \n\n* Delete missing devices\nIF you wanted to delete missing devices or devices that may have failed you can run this commands. The first command will mount the device in degraded mode before deleting it.\n\n$ sudo mount -o degraded /dev/sda1\n\n$ btrfs device delete missing\n\n\n* Subvolumes And Snapshots\nSubvolumes are the BTRFS equivalent of \"datasets\". They are separate volumes that can be used for snapshotting/restoring. You may want to create a subvolume for any KVM guest you create or mountpoint with critical data in it.\n\n* Create a Subvolume\n$ btrfs subvolume create  \n\n* Show subvolumes\n$ btrfs subvolume list  \n\n* Take Snapshot\n$ btrfs subvolume snapshot  \n\n* Delete Subvolume\n$ btrfs subvolume delete  \n\n\n# In conclusion\nThere are many filesystems to choose from for getting the right jobs done, and with Linux you have the option to pick and choose. Btrfs has been a part of the Linux Kernel since 2013 or so, and continues to enhanced improvements to data retention and protection. Most distros still use ext4 as their default filesystem but if you are looking to move to an OS that is already using one you can look into OpenSUSE. OpenSUSE now uses btrfs as their default for their /root partition and use XFS file system for the /home partition currently. For more people, ext4 may be old and outdated but still resilient and reliable. However, there is a new spread to add to your filesystem that can help with better resilience and reliability on multiple drives and partitions. Btrfs is to butter what your filesystem/storage is to bread. John F Kennedy once said \"Change is the law of life. And those who look only to the past or present are certain to miss the future.‚Äù Try Btrfs for yourself and let me know what you think about it.\n"},{"id":1507071600,"title":"Tedley's Poetry Portal","date":"Oct 04 2017","excerpt":" \"Tedley's Poetry project site for all things poetry\"","img":null,"content":"\n<center><a href=\"https://poet.tedley.me\"><b>Poetry Portal</b></a> is a personal page all of Ted's poetry and passion</center>\n\n## https://poet.tedley.me\n\n![Poetry Portal](/assets/img/blog/poetryportal.png)\n\n> Knowledge, like air, is vital to life. And like air, no one should be denied it.\n\nComing from a place of change and constant motion I use my words to slow\ndown and take note. As a brother and son to a family of smart-witted individuals\nwho enjoy taking their creativity and find outlets to release them. Mine is within\na pen and pad. **Tedley's Poetry Portal** is a way to keep a list of the poems, finished, unfinished, alive, and dead.\n\n<div markdown=\"0\"><a href=\"https://poet.tedley.me\" class=\"btn\">Enter Site</a></div>\n\n# Daily Dose\n\nMany words catch peoples attention,\nPoems can be recited at the sound of a mention,\nEveryday I wake up and this poem teaches me a lesson,\nI pray one day it does the same for you,\nRead them as words,\nor Read them as Blessings\n\n# Winners Vs Losers\n\n```html\nWinners vs Losers The Winner is always part of the answer; the Loser is always\npart of the problem. The Winner always has a program; the Loser always has an\nexcuse. The Winner says, ‚ÄúLet me do it for you‚Äù; the Loser says, ‚ÄúThat‚Äôs not my\njob.‚Äù The Winner sees an answer for every problem; the Loser sees a problem for\nevery answer. The Winner says, ‚ÄúIt may be difficult but it is possible‚Äù; the\nLoser says, ‚ÄúIt may be possible but it is too difficult.‚Äù When a Winner makes a\nmistake, he says, ‚ÄúI was wrong‚Äù; when a Loser makes a mistake, he says, ‚ÄúIt\nwasn‚Äôt my fault.‚Äù A Winner makes commitments; a Loser makes promises. Winners\nhave dreams; losers have schemes. Winners say, ‚ÄúI must do something‚Äù; losers\nsay, ‚ÄúSomething must be done.‚Äù Winners are a part of the team; losers are apart\nfrom the team. Winners see the gain; losers see pain. Winners see possibilities;\nlosers see problems. Winners believe in win/win; losers believe for them to win\nsomeone has to lose. Winners see the potential; losers see the past. Winners are\nlike a thermostat; losers are like thermometers. Winners choose what they say;\nlosers say what they choose. Winners use hard arguments, but soft words; losers\nuse soft arguments, but hard words; Winners stand firm on values but compromise\non petty things; losers stand firm on petty things but compromise on values.\nWinners follow the philosophy of empathy: ‚ÄúDon‚Äôt do to others what you don‚Äôt\nwant them to do to you‚Äù; losers follow the philosophy, ‚ÄúDo it to others before\nthey do it to you.‚Äù Winners make it happen; losers let it happen. Author:\nUnknown\n```\n\n_poet.tedley.me_. is a site built with Jekyll and GithubPages used as poetry resource.\n"},{"id":1499468400,"title":"Common Ground Coffee Bar","date":"Jul 08 2017","excerpt":" \"Web developer and wordpress administrator. Assisted in installation and implementation of wordpress design and layout of cglakeworth.org\"","img":null,"content":"\n## www.cglakeworth.org\n\n![Common Ground ](/assets/img/blog/cgcoffee.png)\n![Common Ground ](/assets/img/blog/community.png)\n\n<center><a href=\"http://www.cglakeworth.org\"><b>Common Ground Lake Worth</b></a> is a community development center for Lake Worth locals and all people to enjoy art and music </center>\n\nThe developement center can be used for rent out parties and weddings, jazz events, or as as community workspace for artists to share and collaborate their work and love.\n.\n\n<div markdown=\"0\"><a href=\"http://www.cglakeworth.org\" class=\"btn\">Go to Site</a></div>\n\n*http://www.cglakeworth.org*. is a site built by Tedley Meralus with Wordpress\n"},{"id":1493766000,"title":"www.smart-pond.com","date":"May 03 2017","excerpt":" \"Made critical changes to upgrading smart-pond.com.\"","img":"blog/smartpond_logo.png","content":"\n## Smart Pond\n\n<center><a href=\"https://www.smart-pond.com\"><b>Created exclusively for Lowe's </b></a> </center>\nSmartpond¬Æ brand offers a premier line of water gardening products that cater to pond DIY enthusiasts who want to transform their dream projects into a reality.\n\nWhile working for GeoGlobal Partners LLC I was in charge of the changes and upgrade of the smartpond site.\n\n<div markdown=\"0\"><a href=\"https://www.smart-pond.com\" class=\"btn\">Go to Site</a></div>\n\n*https://www.smart-pond.com*. is a site that I managed while working for GeoGlobal Partners LLC\n"},{"id":1491087600,"title":"Linux-Workshop","date":"Apr 02 2017","excerpt":" \"an Instructor for 4 weeks at FAU in boca\"","img":"blog/linux-workshop.jpg","content":"\n<center><a href=\"https://github.com/tmeralus/Linux-Workshop\"><b>The Linux Workshop</b></a>was a 4 week class instructed by me at FAU in boca</center>\n\n## The Linux Workshop Lesson Plan\n\n![Linux Workshop](https://github.com/tmeralus/tedley.me/blob/master/assets/img/blog/linux-workshop.jpg)\n\n> Knowledge, like air, is vital to life. And like air, no one should be denied it.\n\nIn April of 2017 I was asked to showcase my skills in Linux at a workshop for a friend at Florida Atlantic University. With my love for linux and passionate posts about technology and the latest tech on Linkedin and Facebook Stincy thought I would be the right teacher for her ACM-W group. In lieu of us growing up together through grade school and her knowing that my mom was a teacher and was going to help me draft a quick lesson plan. Mom came in with the assist and within a week of the offer a lesson plan was created.\n(https://github.com/tmeralus/tedley.me/blob/master/assets/img/blog/Linux-Fundamental-Lesson-Plan.pdf)\n{: .image-center}\n\nBeing a part of something bigger than myself and exposing more people to the world of Linux is what\ndrives me to get out of bed in the morning.\n\nWith a helpful template from my mom I broke down my lesson plan in 3 weeks thinking that I would be able to slowly go over different commands to make sure everyone was aware of what they were doing\nand how they were doing it.\n\n- Session 1: Introduction to Linux\n  ** commands and use of Linux\n  ** navigating through a Linux server\n- Session 2: Linux from a shell point of view\n  ** Bash Scripting\n  ** Understanding the Shell\n- Session 3: Practical Networking\n  ** Networking commands\n  ** Monitoring Tools and solutions\n- Session 4: Wrap\n  ** Students use of Linux\n  ** Wrap up assignments\n  \\*\\* Github lab\n\nI created powerpoints for each week and was alloted an hour and a half and had to revise my lesson plan every week. The students, being college kids interested in Linux were well prepared and bored towards the end of week 3. So with week 4 I decided to create an open forum for them to ask questions and see what kinds of things moved them. Many were interested in quirky terminal based works like neofetch![Neofetch](https://github.com/tmeralus/tedley.me/blob/master/assets/img/blog/neofetch.png)\n{: .image-right}\n\nAfter week 4 we took a finals picture and I left with a smile on my face. The new friends and the people involved helped push me to write more about educational Linux guides.\n(https://github.com/tmeralus/tedley.me/blob/master/assets/img/blog/linuxworkshop2.jpg)\n{: .image-center}\n\nI spent the rest of 2017 writing up how to guides on how to setup and use Vagrant, Wordpress, Apache, and use other hacking tools to share to the world. I have always been one to use my google-fu tto find great guides on stackoverflow and reddit, but now Im the one giving advice and adding more how-to's to those sites. Don't get me wrong, I still use sites like Spiceworks and AskUbuntu to ask questions and learn more from Linux communities but being able to give back and contribute to the community is more than any dollar can spend. Feel free to follow me on Twitter to stay up to date with more tech news, my latest tech blogs, or Miami heat celebration. You can also follow my RSS feed soon to stay up to date with anything and everything Linux.\n\n<div markdown=\"0\"><a href=\"https://www.huffingtonpost.com/reverend-william-e-flippin-jr/ubuntu-applying-african-p_b_1243904.html\" class=\"btn\">UBUNTU</a></div>\n"},{"id":1459897200,"title":"www.kogancounseling.com","date":"Apr 06 2016","excerpt":" \"Assisted Randee Kogan in the design and developement of kogancounseling.com\"","img":"blog/Kogan_counseling_logo1-1024x410.jpg","content":"\n## Kogan Counseling\n\n## www.kogancounseling.com\n\n<center><a href=\"http://www.kogancounseling.com\"><b>Kogan Counseling</b></a> is a personal site to learn more about Randee Kogan and her work as a Counselor</center>\n\n# Randee Kogan specializes in the following\n\n- Anger Management\n- Asperger's Syndrome\n- Bipolar Disorder\n- Borderline Personality\n- Coping Skills\n- Depression\n- Divorce\n- Domestic Abuse\n- Domestic Violence\n- Dual Diagnosis\n- Emotional Disturbance\n- Family Conflict\n- Grief\n- Marital and Premarital\n- Narcissistic Personality\n- Obsessive-Compulsive (OCD)\n- Relationship Issues\n- Self-Harming\n- Sexual Abuse\n- Sleep or Insomnia\n- Stress\n- Substance Abuse\n- Suicidal Ideation\n- Teen Violence\n- Transgender\n- Women's Issues\n\nCheck out Kogan Counseling here\n\n<div markdown=\"0\"><a href=\"http://www.kogancounseling.com\" class=\"btn\">Go to Site</a></div>\n\nYou can also look into her Psychology Today page and learn more about her work and services\n\n<div markdown=\"0\"><a href=\"https://www.psychologytoday.com/us/therapists/randee-kogan-greenacres-fl/309107\" class=\"btn\">Psychology Today</a></div>\n\n*http://www.kogancounseling.com*. is a site built by Tedley Meralus Wordpress\n"}]